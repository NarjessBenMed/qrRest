[{"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\index.js":"1","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\serviceWorker.js":"2","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\App.js":"3","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\app\\store.js":"4","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\ownerSlice.js":"6","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\adminSlice.js":"7","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\authSlice.js":"8","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\menuSlice.js":"9","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\orderSlice.js":"10","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\tableSlice.js":"11","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\staffSlice.js":"12","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"13","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\PrivateRoute\\ClientRoute.js":"14","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\Navbar\\Navbar.js":"15","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ScanCode\\ScanCode.js":"16","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\Home\\Home.js":"17","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\AdminSection\\AdminSection.js":"18","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\SignIn\\SignIn.js":"19","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\OwnerSection\\OwnerSection.js":"20","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\WorkerSection\\WorkerSection.js":"21","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\ClientPage\\ClientPage.js":"22","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\utils\\scroll.js":"23","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddOwner\\AddOwner.js":"24","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\OwnerList\\OwnerList.js":"25","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\MyOrder\\MyOrder.js":"26","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ClientMenu\\ClientMenu.js":"27","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js":"28","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\Menu\\Menu.js":"29","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\OrderList\\OrderList.js":"30","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\StaffList\\StaffList.js":"31","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddMenu\\AddMenu.js":"32","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\TableList\\TableList.js":"33","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\RestaurantList\\RestaurantList.js":"34","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js":"35","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\utils\\image.js":"36","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js":"37","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js":"38","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\Tables\\Tables.js":"39","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddTable\\AddTable.js":"40","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\Workers\\Workers.js":"41","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddWorker\\AddWorker.js":"42","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js":"43","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\index.js":"44","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\serviceWorker.js":"45","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\App.js":"46","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\app\\store.js":"47","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\utils\\setAuthToken.js":"48","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\orderSlice.js":"49","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\ownerSlice.js":"50","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\menuSlice.js":"51","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\staffSlice.js":"52","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"53","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\PrivateRoute\\ClientRoute.js":"54","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\tableSlice.js":"55","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ScanCode\\ScanCode.js":"56","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\Navbar\\Navbar.js":"57","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\AdminSection\\AdminSection.js":"58","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\SignIn\\SignIn.js":"59","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\authSlice.js":"60","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\Home\\Home.js":"61","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\adminSlice.js":"62","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\ClientPage\\ClientPage.js":"63","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\WorkerSection\\WorkerSection.js":"64","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\OwnerSection\\OwnerSection.js":"65","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\utils\\scroll.js":"66","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\OwnerList\\OwnerList.js":"67","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddOwner\\AddOwner.js":"68","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\TableList\\TableList.js":"69","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\MyOrder\\MyOrder.js":"70","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\RestaurantList\\RestaurantList.js":"71","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ClientMenu\\ClientMenu.js":"72","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js":"73","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\OrderList\\OrderList.js":"74","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddMenu\\AddMenu.js":"75","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\Menu\\Menu.js":"76","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js":"77","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\StaffList\\StaffList.js":"78","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\utils\\image.js":"79","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\Tables\\Tables.js":"80","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js":"81","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddTable\\AddTable.js":"82","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js":"83","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\Workers\\Workers.js":"84","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddWorker\\AddWorker.js":"85","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js":"86"},{"size":623,"mtime":1611514378693,"results":"87","hashOfConfig":"88"},{"size":5004,"mtime":1611514378742,"results":"89","hashOfConfig":"88"},{"size":1675,"mtime":1611514378620,"results":"90","hashOfConfig":"88"},{"size":629,"mtime":1611514378641,"results":"91","hashOfConfig":"88"},{"size":254,"mtime":1611514378744,"results":"92","hashOfConfig":"88"},{"size":4340,"mtime":1611515930841,"results":"93","hashOfConfig":"88"},{"size":2591,"mtime":1611514378642,"results":"94","hashOfConfig":"88"},{"size":2729,"mtime":1611514378643,"results":"95","hashOfConfig":"88"},{"size":4111,"mtime":1611520674791,"results":"96","hashOfConfig":"88"},{"size":4223,"mtime":1611514378664,"results":"97","hashOfConfig":"88"},{"size":2393,"mtime":1611514378665,"results":"98","hashOfConfig":"88"},{"size":2436,"mtime":1611514378665,"results":"99","hashOfConfig":"88"},{"size":575,"mtime":1611514378635,"results":"100","hashOfConfig":"88"},{"size":555,"mtime":1611514378634,"results":"101","hashOfConfig":"88"},{"size":3965,"mtime":1611514378632,"results":"102","hashOfConfig":"88"},{"size":1778,"mtime":1611514378637,"results":"103","hashOfConfig":"88"},{"size":4723,"mtime":1611514378704,"results":"104","hashOfConfig":"88"},{"size":1254,"mtime":1611514378697,"results":"105","hashOfConfig":"88"},{"size":2560,"mtime":1611514378739,"results":"106","hashOfConfig":"88"},{"size":2388,"mtime":1611514378738,"results":"107","hashOfConfig":"88"},{"size":3408,"mtime":1611514378742,"results":"108","hashOfConfig":"88"},{"size":1758,"mtime":1611514378700,"results":"109","hashOfConfig":"88"},{"size":329,"mtime":1611514378744,"results":"110","hashOfConfig":"88"},{"size":3271,"mtime":1611518139290,"results":"111","hashOfConfig":"88"},{"size":838,"mtime":1611514378634,"results":"112","hashOfConfig":"88"},{"size":1138,"mtime":1611514378734,"results":"113","hashOfConfig":"88"},{"size":4338,"mtime":1611514378629,"results":"114","hashOfConfig":"88"},{"size":1194,"mtime":1611521247111,"results":"115","hashOfConfig":"88"},{"size":3386,"mtime":1611521828717,"results":"116","hashOfConfig":"88"},{"size":3239,"mtime":1611514378633,"results":"117","hashOfConfig":"88"},{"size":944,"mtime":1611514378638,"results":"118","hashOfConfig":"88"},{"size":6213,"mtime":1611523894814,"results":"119","hashOfConfig":"88"},{"size":966,"mtime":1611514378639,"results":"120","hashOfConfig":"88"},{"size":1134,"mtime":1611521114602,"results":"121","hashOfConfig":"88"},{"size":3821,"mtime":1611514378624,"results":"122","hashOfConfig":"88"},{"size":303,"mtime":1611514378743,"results":"123","hashOfConfig":"88"},{"size":2272,"mtime":1611518545286,"results":"124","hashOfConfig":"88"},{"size":3742,"mtime":1611526192789,"results":"125","hashOfConfig":"88"},{"size":726,"mtime":1611514378640,"results":"126","hashOfConfig":"88"},{"size":1180,"mtime":1611514378626,"results":"127","hashOfConfig":"88"},{"size":822,"mtime":1611514378641,"results":"128","hashOfConfig":"88"},{"size":1562,"mtime":1611514378628,"results":"129","hashOfConfig":"88"},{"size":5417,"mtime":1611526715605,"results":"130","hashOfConfig":"88"},{"size":623,"mtime":1611514378693,"results":"131","hashOfConfig":"132"},{"size":5004,"mtime":1611514378742,"results":"133","hashOfConfig":"132"},{"size":1675,"mtime":1611514378620,"results":"134","hashOfConfig":"132"},{"size":629,"mtime":1611514378641,"results":"135","hashOfConfig":"132"},{"size":254,"mtime":1611514378744,"results":"136","hashOfConfig":"132"},{"size":5748,"mtime":1611606257459,"results":"137","hashOfConfig":"132"},{"size":4452,"mtime":1611604375024,"results":"138","hashOfConfig":"132"},{"size":4223,"mtime":1611604461900,"results":"139","hashOfConfig":"132"},{"size":3338,"mtime":1611604301743,"results":"140","hashOfConfig":"132"},{"size":636,"mtime":1611697719121,"results":"141","hashOfConfig":"132"},{"size":618,"mtime":1611697750024,"results":"142","hashOfConfig":"132"},{"size":3267,"mtime":1611604238109,"results":"143","hashOfConfig":"132"},{"size":2255,"mtime":1612019938195,"results":"144","hashOfConfig":"132"},{"size":3965,"mtime":1611514378632,"results":"145","hashOfConfig":"132"},{"size":1254,"mtime":1611514378697,"results":"146","hashOfConfig":"132"},{"size":2884,"mtime":1611697122773,"results":"147","hashOfConfig":"132"},{"size":3778,"mtime":1611697014038,"results":"148","hashOfConfig":"132"},{"size":5277,"mtime":1611923534440,"results":"149","hashOfConfig":"132"},{"size":2591,"mtime":1611514378642,"results":"150","hashOfConfig":"132"},{"size":2186,"mtime":1611698334067,"results":"151","hashOfConfig":"132"},{"size":4718,"mtime":1611866976068,"results":"152","hashOfConfig":"132"},{"size":2389,"mtime":1611954926631,"results":"153","hashOfConfig":"132"},{"size":329,"mtime":1611514378744,"results":"154","hashOfConfig":"132"},{"size":838,"mtime":1611514378634,"results":"155","hashOfConfig":"132"},{"size":3271,"mtime":1611518139290,"results":"156","hashOfConfig":"132"},{"size":966,"mtime":1611514378639,"results":"157","hashOfConfig":"132"},{"size":1675,"mtime":1611603716730,"results":"158","hashOfConfig":"132"},{"size":1134,"mtime":1611521114602,"results":"159","hashOfConfig":"132"},{"size":4610,"mtime":1611873288355,"results":"160","hashOfConfig":"132"},{"size":3821,"mtime":1611514378624,"results":"161","hashOfConfig":"132"},{"size":3714,"mtime":1611612764903,"results":"162","hashOfConfig":"132"},{"size":6213,"mtime":1612019808876,"results":"163","hashOfConfig":"132"},{"size":3386,"mtime":1611521828717,"results":"164","hashOfConfig":"132"},{"size":1194,"mtime":1611521247111,"results":"165","hashOfConfig":"132"},{"size":944,"mtime":1611514378638,"results":"166","hashOfConfig":"132"},{"size":303,"mtime":1611514378743,"results":"167","hashOfConfig":"132"},{"size":726,"mtime":1611514378640,"results":"168","hashOfConfig":"132"},{"size":6680,"mtime":1612016108289,"results":"169","hashOfConfig":"132"},{"size":1465,"mtime":1611864361075,"results":"170","hashOfConfig":"132"},{"size":2478,"mtime":1611869519050,"results":"171","hashOfConfig":"132"},{"size":822,"mtime":1611514378641,"results":"172","hashOfConfig":"132"},{"size":1562,"mtime":1611612831328,"results":"173","hashOfConfig":"132"},{"size":4413,"mtime":1612020752213,"results":"174","hashOfConfig":"132"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"ufsj1b",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"177"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"177"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"177"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"177"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"177"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"177"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"177"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"177"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"177"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"177"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"177"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"1i9e0ec",{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"275"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"275"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"275"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"275"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"275"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"275"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"275"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"275"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"275"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"275"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"275"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"275"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"275"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"275"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"275"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"275"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"368"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"275"},"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\index.js",[],["375","376"],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\serviceWorker.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\App.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\app\\store.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\ownerSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\adminSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\authSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\menuSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\orderSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\tableSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\features\\staffSlice.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\PrivateRoute\\ClientRoute.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ScanCode\\ScanCode.js",["377","378","379","380","381"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { authClient } from \"../../features/authSlice\";\nimport QrReader from \"react-qr-scanner\";\nimport \"./ScanCode.css\";\n\nconst ScanCode = () => {\n  const dispatch = useDispatch();\n\n  const [values, setValues] = useState({\n    delay: 100,\n    result: null,\n    code: \"\",\n  });\n  const { delay, result, code } = values;\n  const handleScan = (data) => {\n    setValues({ ...values, result: data });\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n  const previewStyle = {\n    height: 320,\n    width: 240,\n  };\n  const handleInput = (e) => {\n    setValues({ ...values, code: e.target.value });\n  };\n  const handleSubmit = () => {\n    setValues({ ...values, result: code });\n  };\n\n  if (result) {\n    dispatch(authClient(result.split(\"+\")[0], result.split(\"+\")[1]));\n    localStorage.setItem(\"restId\", result.split(\"+\")[0]);\n    localStorage.setItem(\"tableNumber\", result.split(\"+\")[1]);\n    return (\n      <Redirect\n        to={{\n          pathname: \"/client-page\",\n          state: {\n            restId: result.split(\"+\")[0],\n            tableNumber: result.split(\"+\")[1],\n          },\n        }}\n      />\n    );\n  }\n  return (\n    <div className=\"code\">\n      <div className=\"reader\">\n        {/* <QrReader\n          delay={delay}\n          style={previewStyle}\n          onError={handleError}\n          onScan={handleScan}\n        /> */}\n      </div>\n      <input\n        size=\"50\"\n        className=\"test\"\n        type=\"text\"\n        name=\"code\"\n        value={code}\n        onChange={handleInput}\n      />\n      <button onClick={handleSubmit}>confirm</button>\n      <h1>{result}</h1>\n    </div>\n  );\n};\n\nexport default ScanCode;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\Home\\Home.js",["382"],"import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { initState } from '../../features/authSlice';\nimport { Link } from 'react-router-dom';\nimport { FiCheckCircle } from 'react-icons/fi';\nimport { IconContext } from 'react-icons';\nimport './Home.css';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initState());\n  }, []);\n  return (\n    <div className='home'>\n      <div className='home__content'>\n        <div className='home__content__left'>\n          <h2>Digitalisez vos cartes! </h2>\n          <p>\n            XXXX permet l'affichage dynamique et interactif de votre carte, vous pouvez\n            gérer en quelques clics vos plats, menu, dessert et tous se met à jour\n            automatiquement ...\n          </p>\n          <Link to='/scan-code'>\n            <button className='home__content__btn'>Notre Menu </button>\n          </Link>\n        </div>\n        <div className='scan'>\n          <img src='images/bg-light.png' alt=' ' />\n        </div>\n      </div>\n      <div className='home__sante'>\n        <p>Votre santé est une priorité !</p>\n        <p>\n          digitMenu a été conçue afin de garantir autant que possible votre santé et celle\n          de vos clients!\n        </p>\n        <img src='images/Codiv-19.png' alt='' />\n      </div>\n      <section className='home__fonct' id='sect1'>\n        <h4>Utilisation simple et efficace sans installation :</h4>\n        <div className='home__fonct__step'>\n          <IconContext.Provider value={{ className: 'check-icon' }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>\n            Le consommateur a juste besoin de scanner un QR code affiché sur vos tables\n          </p>\n        </div>\n        <div className='home__fonct__step'>\n          <IconContext.Provider value={{ className: 'check-icon' }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>Il est alors redirigé automatiquement vers votre carte dématérialisé</p>\n        </div>\n        <div className='home__fonct__step'>\n          <IconContext.Provider value={{ className: 'check-icon' }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>la commande est prise sans le moindre contact</p>\n        </div>\n        <div className='home__fonct__img'>\n          <img src='images/img1.png' alt='' />\n\n          <img src='images/img2.png' alt='' />\n          <img src='images/img3.png' alt='' />\n        </div>\n      </section>\n      <div className='block'>\n        <p>lkjkljjjjjjjjjjjjj</p>\n      </div>\n\n      <section className='home__avantages' id='sect2'>\n        <p>\n          En plus du respect des gestes barrières et du nouveau mode de vie que nous\n          devons adopter, le menu digital pour votre restaurant vous permet de mettre à\n          jour en temps réel votre carte et d'offrir une expérience unique à vos clients.\n        </p>\n        <p>\n          Consacrez-vous à votre art et ne gaspillez pas votre temps et votre énergie à\n          désinfecter vos cartes pour chaque nouveau client. DigitMenu est une solution\n          rapide, économique, qui respecte les gestes barrières pour vous libérer.\n        </p>\n        <p>\n          Toutes les mises à jour de votre menu digital restaurant sont immédiatement\n          visibles par vos clients. Un plat caché par suite d’une rupture de stock ou d'un\n          problème en cuisine, un visuel à changer, un prix à adapter...le menu visible\n          par vos clients est à jour, votre service est très largement amélioré.\n        </p>\n        <p>\n          {' '}\n          Vous limitez votre impact sur la nature en évitant les réimpressions régulières\n          de vos cartes. Vous ne gaspillez plus de papier et vous diminuez vos déchets\n          pour vous inscrire dans une démarche écoresponsable.\n        </p>\n      </section>\n      <section className='home__adher' id='sect3'>\n        <h1> Les adhérents </h1>\n\n        <div className='home__adher__items'>\n          <img\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6bMxzzhbJr9D94CZ-WUGbxptM9EAHmLmmnA&usqp=CAU'\n            alt=''\n          />\n\n          <img\n            src='https://scontent.ftun7-1.fna.fbcdn.net/v/t1.0-9/21752455_1605310829489573_1413294409926454312_n.jpg?_nc_cat=101&ccb=2&_nc_sid=09cbfe&_nc_ohc=hWNGwNDsNe4AX-2Qdii&_nc_ht=scontent.ftun7-1.fna&oh=3859edb4b4b56564621a835cb8839ba7&oe=602BA403'\n            alt=''\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\AdminSection\\AdminSection.js",["383","384"],"import React, { useEffect } from 'react';\nimport AddOwner from '../../Components/AddOwner/AddOwner';\nimport OwnerList from '../../Components/OwnerList/OwnerList';\nimport { getAllOwners } from '../../features/adminSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport openSocket from 'socket.io-client';\nimport './AdminSection.css';\n\nconst AdminSection = () => {\n  const dispatch = useDispatch();\n\n  let isAuth = useSelector((state) => state.auth.isAuthenticated);\n  useEffect(() => {\n    if (isAuth) {\n      dispatch(getAllOwners());\n    }\n  }, [isAuth]);\n  useEffect(() => {\n    let socket = openSocket('http://localhost:5000/admin-space', {\n      transports: ['websocket', 'polling'],\n    });\n    socket.on('connect', () => {\n      console.log(socket.id);\n    });\n    socket.on('hi', (data) => {\n      console.log('from server', data);\n    });\n    socket.on('owners', (data) => {\n      console.log('from server', data.action);\n      dispatch(getAllOwners());\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const { owners } = useSelector((state) => state.admin);\n\n  return (\n    <div className='admin'>\n      <AddOwner />\n\n      <OwnerList owners={owners} />\n    </div>\n  );\n};\n\nexport default AdminSection;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\SignIn\\SignIn.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\OwnerSection\\OwnerSection.js",["385","386"],"import React, { useEffect, useState } from 'react';\nimport openSocket from 'socket.io-client';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getRestList } from '../../features/ownerSlice';\nimport AddRestaurant from '../../Components/AddRestaurant/AddRestaurant';\nimport RestaurantList from '../../Components/RestaurantList/RestaurantList';\nimport AddMenu from '../../Components/AddMenu/AddMenu';\nimport TableList from '../../Components/TableList/TableList';\nimport StaffList from '../../Components/StaffList/StaffList';\nimport OrderList from '../../Components/OrderList/OrderList';\nimport Menu from '../Menu/Menu';\nimport './OwnerSection.css';\nimport { Route, Switch } from 'react-router-dom';\nimport MyRestaurant from '../MyRestaurant/MyRestaurant';\n\nconst OwnerSection = () => {\n  const [channel, setChannel] = useState(null);\n  const { isAuthenticated } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getRestList());\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    let socket = openSocket('http://localhost:5000/owner-space', {\n      transports: ['websocket', 'polling'],\n    });\n    setChannel(socket);\n    socket.on('connect', () => {\n      console.log(socket.id);\n    });\n    socket.on('restaurants', (data) => {\n      console.log('from server', data.action);\n      dispatch(getRestList());\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const { restList } = useSelector((state) => state.owner);\n  return (\n    <div className='owner'>\n      <Switch>\n        <Route exact path='/owner-section'>\n          <AddRestaurant />\n          <RestaurantList restaurants={restList} />\n        </Route>\n        <Route exact path='/owner-section/menu'>\n          <AddMenu />\n        </Route>\n        <Route exact path='/owner-section/rest-menu'>\n          <Menu />\n        </Route>\n        <Route exact path='/owner-section/my-rest'>\n          <MyRestaurant />\n        </Route>\n        <Route exact path='/owner-section/tables'>\n          <TableList channel={channel} />\n        </Route>\n        <Route exact path='/owner-section/staff'>\n          <StaffList channel={channel} />\n        </Route>\n        <Route exact path='/owner-section/orders'>\n          <OrderList />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default OwnerSection;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\WorkerSection\\WorkerSection.js",["387","388"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './WorkerSection.css';\nimport { getAllOrders, checkoutOrder } from '../../features/orderSlice';\nimport { getTables } from '../../features/tableSlice';\nimport openSocket from 'socket.io-client';\nimport moment from 'moment';\n\nconst WorkerSection = () => {\n  const [filterBy, setFilterBy] = useState('');\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let socket = openSocket('http://localhost:5000/restaurant-space', {\n      transports: ['websocket', 'polling'],\n    });\n\n    socket.on('connect', () => {\n      console.log(socket.id);\n    });\n    if (user) {\n      socket.emit('joinRoom', { restId: user.restaurantId });\n      console.log('restid', user.restaurantId);\n    }\n    socket.on('hi', (data) => {\n      console.log('from server', data);\n    });\n    socket.on('message', (data) => {\n      console.log('new order------------', data);\n\n      dispatch(getAllOrders(user.restaurantId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [user]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getTables(user.restaurantId));\n      dispatch(getAllOrders(user.restaurantId));\n    }\n  }, [isAuthenticated]);\n  const { listTable } = useSelector((state) => state.table);\n  useEffect(() => {\n    if (listTable) setFilterBy(listTable[0].tableNumber);\n  }, [listTable]);\n  const { orders, status } = useSelector((state) => state.order);\n\n  const handleChange = (e) => {\n    setFilterBy(e.target.value);\n  };\n  const handleClick = (id) => {\n    dispatch(checkoutOrder({ orderId: id }));\n    dispatch(getAllOrders(user.restaurantId));\n  };\n  return (\n    <div className='worker'>\n      <h2>List of orders</h2>\n      <div className='worker__tables'>\n        <p>Select Your Table</p>\n        <select name='filterBy' onChange={handleChange}>\n          {listTable &&\n            listTable.map((tab, i) => (\n              <option key={tab._id} defaultValue value={tab.tableNumber}>\n                table {tab.tableNumber}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className='worker__content'>\n        {status !== 'loading' &&\n          orders &&\n          // filterBy &&\n          orders\n            // .filter((order) => order.tableNumber == filterBy && !order.paid)\n            .filter((order) => !order.paid && order.tableNumber === filterBy)\n            .map((order) => (\n              <div className='worker__orders' key={order._id}>\n                {order.items.map((item) => (\n                  <div className='worker__orders__items' key={item._id}>\n                    <div className='worker__orders__items__info'>\n                      <p>{item.name}</p>\n                      <p>{item.quantity}</p>\n                    </div>\n                    <span className='comment'>{item.comment}</span>\n                    <span className='timeline'>\n                      {/* {moment(item.updatedAt).startOf('minute').fromNow()} */}\n                      {moment(item.createdAt).fromNow()}\n                    </span>\n                  </div>\n                ))}\n                <button onClick={() => handleClick(order._id)}>Checkout order</button>\n              </div>\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default WorkerSection;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\ClientPage\\ClientPage.js",["389","390"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport openSocket from 'socket.io-client';\nimport { Route, Switch } from 'react-router-dom';\n\nimport ClientMenu from '../../Components/ClientMenu/ClientMenu';\nimport MyOrder from '../MyOrder/MyOrder';\nimport { getMenuByRest } from '../../features/menuSlice';\nimport './ClientPage.css';\n\nconst ClientPage = () => {\n  const dispatch = useDispatch();\n  const restId = localStorage.getItem('restId');\n  useEffect(() => {\n    dispatch(getMenuByRest(restId));\n  }, []);\n  useEffect(() => {\n    let socket = openSocket('http://localhost:5000/restaurant-space', {\n      transports: ['websocket', 'polling'],\n    });\n    socket.on('connect', () => {\n      console.log(socket.id);\n    });\n    if (restId) socket.emit('joinRoom', { restId });\n    socket.on('newMenu', (data) => {\n      console.log('newmenu', data);\n      dispatch(getMenuByRest(restId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const { menu, status } = useSelector((state) => state.menu);\n  const clientMenu =\n    status === 'succeded' && menu ? (\n      <ClientMenu menu={menu} restaurantId={restId} />\n    ) : (\n      <h5>Loading...</h5>\n    );\n  return (\n    <div className='client-section'>\n      <Switch>\n        <Route exact path='/client-page'>\n          <div className='client-section__info'>\n            <h2>Menu</h2>\n\n            <img src={'/' + (menu && menu.menu.restaurant.logo)} alt='logo' />\n            <h2>{menu && menu.menu.restaurant.name}</h2>\n          </div>\n          {clientMenu}\n        </Route>\n        <Route exact path='/client-page/order'>\n          <MyOrder />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default ClientPage;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\utils\\scroll.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddOwner\\AddOwner.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\OwnerList\\OwnerList.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\MyOrder\\MyOrder.js",["391"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getOrderById } from '../../features/orderSlice';\nimport './MyOrder.css';\n\nconst MyOrder = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { orderId } = location.state;\n  useEffect(() => {\n    console.log('orederid', orderId);\n    dispatch(getOrderById(orderId));\n  }, [orderId]);\n  const { order, status } = useSelector((state) => state.order);\n  return (\n    <div className='order'>\n      <h1>A Payer</h1>\n      {status === 'succeded' &&\n        order &&\n        order.order.items.map((item) => (\n          <div className='order__item' key={item._id}>\n            <p>{item.name}</p>\n            <div className='order__item__info'>\n              <p>{item.quantity}</p>\n              <p>{item.price} DT</p>\n            </div>\n          </div>\n        ))}\n      <div className='order__item__total'>\n        <p>total:</p>\n        <p>{status !== 'loading' && order && order.order.total} DT</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MyOrder;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ClientMenu\\ClientMenu.js",["392","393"],"import React, { useEffect, useState, Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, Link } from 'react-router-dom';\nimport { createOrder, updateOrder, getOrderById } from '../../features/orderSlice';\nimport ClientMenuItem from '../../Components/ClientMenuItem/ClientMenuItem';\nimport './ClientMenu.css';\n\nconst ClientMenu = ({ menu }) => {\n  const [values, setValues] = useState({\n    orderId: null,\n    items: [],\n    total: 0,\n  });\n  const { items, total } = values;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const id = localStorage.getItem('id');\n    if (id) {\n      dispatch(getOrderById(id));\n      setValues({ ...values, orderId: id });\n    }\n  }, []);\n  useEffect(() => {\n    if (items.length > 0) {\n      let totalCost = items.reduce((acc, curv) => Number(acc) + Number(curv.price), 0);\n      console.log(totalCost);\n      setValues({ ...values, total: totalCost });\n    } else {\n      setValues({ ...values, total: 0 });\n    }\n  }, [items]);\n  const { order } = useSelector((state) => state.order);\n  const history = useHistory();\n  const restId = localStorage.getItem('restId');\n  const tableNumber = localStorage.getItem('tableNumber');\n\n  const handleAdd = (name, quantity, price, comment, createdAt) => {\n    const itemIndex = items.findIndex((item) => item.name === name);\n    let newList = [...items];\n    if (itemIndex === -1) {\n      setValues({\n        ...values,\n        items: [...items, { name, price, quantity, comment, createdAt }],\n      });\n    } else {\n      if (quantity === 0) {\n        newList.splice(itemIndex, 1);\n      } else {\n        newList[itemIndex] = {\n          ...newList[itemIndex],\n          quantity,\n          price,\n          comment,\n          createdAt,\n        };\n      }\n      setValues({ ...values, items: newList });\n    }\n  };\n\n  const handleButton = () => {\n    const orderId = localStorage.getItem('id');\n    if (items.length > 0) {\n      if (orderId && order && !order.order.paid) {\n        dispatch(updateOrder({ data: { items, total, orderId }, history }));\n      } else {\n        dispatch(createOrder({ data: { items, total, restId, tableNumber }, history }));\n      }\n    }\n  };\n\n  const orderLink = order && !order.order.paid && (\n    <Link\n      to={{\n        pathname: '/client-page/order',\n\n        state: { orderId: order.order._id },\n      }}>\n      <span className='client-menu__link'>My order</span>\n    </Link>\n  );\n  const menuItems =\n    menu && menu.menu.items ? (\n      <Fragment>\n        <p className='client-menu__categorie'>Entree</p>\n        <div className='client-menu__sub'>\n          {menu.menu.items\n            .filter((item) => item.categorie === 'entree')\n            .map((item) => (\n              <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\n            ))}\n        </div>\n        <p className='client-menu__categorie'>Plat</p>\n        <div className='client-menu__sub'>\n          {menu.menu.items\n            .filter((item) => item.categorie === 'plat')\n            .map((item) => (\n              <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\n            ))}\n        </div>\n        <p className='client-menu__categorie'>Boisson</p>\n        <div className='client-menu__sub'>\n          {menu.menu.items\n            .filter((item) => item.categorie === 'boisson')\n            .map((item) => (\n              <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\n            ))}\n        </div>\n        <p className='client-menu__categorie'>Dessert</p>\n        <div className='client-menu__sub'>\n          {menu.menu.items\n            .filter((item) => item.categorie === 'Dessert')\n            .map((item) => (\n              <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\n            ))}\n        </div>\n      </Fragment>\n    ) : (\n      // menu.menu.items.map((item) => (\n      //   <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\n      // ))\n      <h5>Loading...</h5>\n    );\n  return (\n    <div className='client-menu'>\n      <div className='client-menu__items'>{menuItems}</div>\n      <div className='client-menu__nav'>\n        {orderLink}\n        <button onClick={() => handleButton()}>Order Now</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientMenu;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js",["394","395"],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\pages\\Menu\\Menu.js",["396"],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\OrderList\\OrderList.js",["397","398"],"import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getAllOrders } from '../../features/orderSlice';\nimport openSocket from 'socket.io-client';\nimport './OrderList.css';\nimport moment from 'moment';\n\nconst OrderList = () => {\n  const [paid, setPaid] = useState(false);\n  const [filterDate, setFilterDate] = useState({\n    today: moment().format(),\n    filterByDate: false,\n  });\n  const { today, filterByDate } = filterDate;\n  const location = useLocation();\n  const { restId } = location.state;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let socket = openSocket('http://localhost:5000/restaurant-space', {\n      transports: ['websocket', 'polling'],\n    });\n\n    socket.on('connect', () => {\n      console.log(socket.id);\n    });\n    if (restId) {\n      socket.emit('joinRoom', { restId: restId });\n      console.log('restid', restId);\n    }\n    socket.on('hi', (data) => {\n      console.log('from server', data);\n    });\n    socket.on('message', (data) => {\n      console.log('new order------------', data);\n\n      dispatch(getAllOrders(restId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    dispatch(getAllOrders(restId));\n  }, []);\n  const { orders, status } = useSelector((state) => state.order);\n  const handleFilter = (filterBy) => {\n    setPaid(filterBy);\n  };\n  const handleDate = () => {\n    setFilterDate({ ...filterDate, filterByDate: !filterByDate });\n  };\n\n  return (\n    <div className='orders'>\n      <h2>List of Orders</h2>\n      <div className='orders__buttons'>\n        <button\n          className={!paid ? 'orders__buttons--active' : 'orders__buttons--normal'}\n          onClick={() => handleFilter(false)}>\n          Non Payé\n        </button>\n        <button\n          className={paid ? 'orders__buttons--active' : 'orders__buttons--normal'}\n          onClick={() => handleFilter(true)}>\n          Payé\n        </button>\n        <button\n          className={filterByDate ? 'orders__buttons--active' : 'orders__buttons--normal'}\n          onClick={handleDate}>\n          Today's orders\n        </button>\n      </div>\n\n      {status === 'succeded' &&\n        orders &&\n        orders\n          .filter(\n            (order) =>\n              order.paid === paid &&\n              (filterByDate\n                ? moment(order.createdAt).isSame(today, 'day')\n                : moment(order.createdAt).isBefore(today, 'day'))\n          )\n          .map((order) => (\n            <div className='orders__items' key={order._id}>\n              <p>Table {order.tableNumber}</p>\n              {order.items.map((item) => (\n                <div className='orders__items__single' key={item._id}>\n                  <div className='orders__items__info'>\n                    <p>{item.name}</p>\n                    <p>{item.quantity}</p>\n                  </div>\n                  <p className='orders__items__time'>\n                    {moment(item.createdAt).fromNow()}\n                  </p>\n                </div>\n              ))}\n              <p>Total : {order.total}</p>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default OrderList;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\StaffList\\StaffList.js",["399","400"],"import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport AddWorker from '../AddWorker/AddWorker';\nimport Workers from '../Workers/Workers';\nimport { getAllWorkers } from '../../features/staffSlice';\nimport './StaffList.css';\n\nconst StaffList = ({ channel }) => {\n  const location = useLocation();\n  const { restId } = location.state;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllWorkers(restId));\n  }, []);\n  const { workers } = useSelector((state) => state.staff);\n  useEffect(() => {\n    if (channel) {\n      channel.on('workers', (data) => {\n        console.log('workers', data.action);\n        dispatch(getAllWorkers(restId));\n      });\n    }\n  }, [channel]);\n\n  return (\n    <div className='staff'>\n      <AddWorker restId={restId} />\n      <Workers list={workers} />\n    </div>\n  );\n};\n\nexport default StaffList;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddMenu\\AddMenu.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\TableList\\TableList.js",["401"],"import React, { useEffect } from 'react';\nimport AddTable from '../AddTable/AddTable';\nimport Tables from '../Tables/Tables';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { getTables } from '../../features/tableSlice';\nimport './TableList.css';\nconst TableList = ({ channel }) => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { restId } = location.state;\n  useEffect(() => {\n    dispatch(getTables(restId));\n  }, [dispatch, restId]);\n  useEffect(() => {\n    if (channel) {\n      channel.on('tables', (data) => {\n        console.log('tables', data.action);\n        dispatch(getTables(restId));\n      });\n    }\n  }, [channel]);\n\n  const { listTable } = useSelector((state) => state.table);\n  return (\n    <div className='table-list'>\n      <AddTable restId={restId} tables={listTable} />\n      <Tables tables={listTable} />\n    </div>\n  );\n};\n\nexport default TableList;\n","C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\RestaurantList\\RestaurantList.js",["402"],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\utils\\image.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js",["403"],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\Tables\\Tables.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddTable\\AddTable.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\Workers\\Workers.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\AddWorker\\AddWorker.js",[],"C:\\Users\\benmo\\Desktop\\digitmenu\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js",["404"],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\index.js",[],["405","406"],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\serviceWorker.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\App.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\app\\store.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\orderSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\ownerSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\menuSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\staffSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\PrivateRoute\\ClientRoute.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\tableSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ScanCode\\ScanCode.js",["407","408","409"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authClient } from \"../../features/authSlice\";\nimport { FaRegSmileWink } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport QrReader from \"react-qr-scanner\";\nimport \"./ScanCode.css\";\n\nconst ScanCode = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { authStatus } = useSelector((state) => state.auth);\n  const [values, setValues] = useState({\n    delay: 100,\n    result: null,\n    code: \"\",\n  });\n  const { delay, result, code } = values;\n  const handleScan = (data) => {\n    setValues({ ...values, result: data });\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n  const previewStyle = {\n    height: 320,\n    width: 240,\n  };\n  // const handleInput = (e) => {\n  //   setValues({ ...values, code: e.target.value });\n  // };\n  // const handleSubmit = () => {\n  //   setValues({ ...values, result: code });\n  // };\n  useEffect(() => {\n    if (result)\n      dispatch(\n        authClient({\n          restId: result.split(\"+\")[0],\n          tableNumber: result.split(\"+\")[1],\n          history,\n        })\n      );\n  }, [result]);\n\n  return (\n    <div className=\"code\">\n      {authStatus.authClient === \"failed\" ? (\n        <div className=\"message-client\">\n          <IconContext.Provider value={{ className: \"auth-failed\" }}>\n            <div>\n              <FaRegSmileWink />\n            </div>\n          </IconContext.Provider>\n          <p>Ce qr Code n'est pas valide </p>\n        </div>\n      ) : (\n        <Fragment>\n          <div className=\"reader\">\n            <QrReader\n              delay={delay}\n              style={previewStyle}\n              onError={handleError}\n              onScan={handleScan}\n            />\n          </div>\n          {/* <input\n            size=\"50\"\n            className=\"test\"\n            type=\"text\"\n            name=\"code\"\n            value={code}\n            onChange={handleInput}\n          />\n          <button onClick={handleSubmit}>confirm</button>\n          <h1>{result}</h1> */}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default ScanCode;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\AdminSection\\AdminSection.js",["410","411"],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\SignIn\\SignIn.js",["412"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { login } from \"../../features/authSlice\";\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport \"./SignIn.css\";\n\nconst SignIn = () => {\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const { username, password } = values;\n  const { authStatus, authErrors } = useSelector((state) => state.auth);\n\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleClick = (e) => {\n    e.preventDefault();\n    dispatch(login({ history, username, password }));\n  };\n  return (\n    <div className=\"signin\">\n      <div className=\"signin__container\">\n        <h1>Sign In</h1>\n        <form>\n          <div className=\"signin__form__group\">\n            <h5>Username</h5>\n            <span>\n              {authStatus.authUser === \"failed\" &&\n                authErrors.authUser &&\n                authErrors.authUser.data.filter(\n                  (err) => err.param === \"username\"\n                )[0] &&\n                authErrors.authUser.data.filter(\n                  (err) => err.param === \"username\"\n                )[0].msg}\n            </span>\n            <input\n              type=\"text\"\n              className=\"signin__container__form__input valid__input\"\n              name=\"username\"\n              value={username}\n              onChange={handleChange}\n            />\n          </div>\n          <div className=\"signin__form__group\">\n            <h5>Password</h5>\n            <span>\n              {authStatus.authUser === \"failed\" &&\n                authErrors.authUser &&\n                authErrors.authUser.data.filter(\n                  (err) => err.param === \"password\"\n                )[0] &&\n                authErrors.authUser.data.filter(\n                  (err) => err.param === \"password\"\n                )[0].msg}\n            </span>\n\n            <input\n              type=\"text\"\n              className=\"signin__container__form__input valid__input\"\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"signin__signInButton\"\n            onClick={handleClick}\n          >\n            {authStatus.authUser === \"loading\" ? (\n              <IconContext.Provider value={{ className: \"spinner\" }}>\n                <div>\n                  <ImSpinner9 />\n                </div>\n              </IconContext.Provider>\n            ) : (\n              <span>Sign In</span>\n            )}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\authSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\Home\\Home.js",["413"],"import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { initState } from \"../../features/authSlice\";\nimport { Link } from \"react-router-dom\";\nimport { FiCheckCircle } from \"react-icons/fi\";\nimport { IconContext } from \"react-icons\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initState());\n  }, []);\n  return (\n    <div className=\"home\">\n      <div className=\"home__content\">\n        <div className=\"home__content__left\">\n          <h2>Digitalisez vos cartes! </h2>\n          <p>\n            DigitMenu permet l'affichage dynamique et interactif de votre carte,\n            vous pouvez gérer en quelques clics vos plats, menu, dessert et tous\n            se met à jour automatiquement ...\n          </p>\n          <Link to=\"/scan-code\">\n            <button className=\"home__content__btn\">Notre Menu </button>\n          </Link>\n        </div>\n        <div className=\"scan\">\n          <img src=\"images/bg-light.png\" alt=\" \" />\n        </div>\n      </div>\n      <div className=\"home__sante\">\n        <p>Votre santé est une priorité !</p>\n        <p>\n          DigitMenu a été conçue afin de garantir autant que possible votre\n          santé et celle de vos clients!\n        </p>\n        <img src=\"images/Codiv-19.png\" alt=\"\" />\n      </div>\n      <section className=\"home__fonct\" id=\"sect1\">\n        <h4>Utilisation simple et efficace sans installation :</h4>\n        <div className=\"home__fonct__step\">\n          <IconContext.Provider value={{ className: \"check-icon\" }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>\n            Le consommateur a juste besoin de scanner un QR code affiché sur vos\n            tables\n          </p>\n        </div>\n        <div className=\"home__fonct__step\">\n          <IconContext.Provider value={{ className: \"check-icon\" }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>\n            Il est alors redirigé automatiquement vers votre carte dématérialisé\n          </p>\n        </div>\n        <div className=\"home__fonct__step\">\n          <IconContext.Provider value={{ className: \"check-icon\" }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>la commande est prise sans le moindre contact</p>\n        </div>\n        <div className=\"home__fonct__img\">\n          <img src=\"images/img1.png\" alt=\"\" />\n\n          <img src=\"images/img2.png\" alt=\"\" />\n          <img src=\"images/img3.png\" alt=\"\" />\n        </div>\n      </section>\n      <div className=\"block\">\n        <p>Booster votre restaurant ! </p>\n        <p>\n          Ouvrez vous des nouveaux horizons via le digital pour sortir de la\n          crise du coronavirus\n        </p>\n      </div>\n\n      <section className=\"home__avantages\" id=\"sect2\">\n        <p>\n          En plus du respect des gestes barrières et du nouveau mode de vie que\n          nous devons adopter, le menu digital pour votre restaurant vous permet\n          de mettre à jour en temps réel votre carte et d'offrir une expérience\n          unique à vos clients.\n        </p>\n        <p>\n          Consacrez-vous à votre art et ne gaspillez pas votre temps et votre\n          énergie à désinfecter vos cartes pour chaque nouveau client. DigitMenu\n          est une solution rapide, économique, qui respecte les gestes barrières\n          pour vous libérer.\n        </p>\n        <p>\n          Toutes les mises à jour de votre menu digital restaurant sont\n          immédiatement visibles par vos clients. Un plat caché par suite d’une\n          rupture de stock ou d'un problème en cuisine, un visuel à changer, un\n          prix à adapter...le menu visible par vos clients est à jour, votre\n          service est très largement amélioré.\n        </p>\n        <p>\n          {\" \"}\n          Vous limitez votre impact sur la nature en évitant les réimpressions\n          régulières de vos cartes. Vous ne gaspillez plus de papier et vous\n          diminuez vos déchets pour vous inscrire dans une démarche\n          écoresponsable.\n        </p>\n      </section>\n      <section className=\"home__adher\" id=\"sect3\">\n        <h1> Les adhérents </h1>\n\n        <div className=\"home__adher__items\">\n          <img\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6bMxzzhbJr9D94CZ-WUGbxptM9EAHmLmmnA&usqp=CAU\"\n            alt=\"\"\n          />\n          <img\n            src=\"https://dozane-studio.com/bundles/framework/images/clients/dozane-client-sultan-ahmet.png\"\n            alt=\"\"\n          />\n          <img\n            src=\"https://scontent.ftun7-1.fna.fbcdn.net/v/t1.0-9/21752455_1605310829489573_1413294409926454312_n.jpg?_nc_cat=101&ccb=2&_nc_sid=09cbfe&_nc_ohc=hWNGwNDsNe4AX-2Qdii&_nc_ht=scontent.ftun7-1.fna&oh=3859edb4b4b56564621a835cb8839ba7&oe=602BA403\"\n            alt=\"\"\n          />\n        </div>\n      </section>\n      <section className=\"footer\">\n        <div className=\"contact__us__left contact__us__border\">\n          <p className=\"c\">Nous contacter</p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\features\\adminSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\ClientPage\\ClientPage.js",["414","415"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport openSocket from \"socket.io-client\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport ClientMenu from \"../../Components/ClientMenu/ClientMenu\";\nimport MyOrder from \"../MyOrder/MyOrder\";\nimport { getMenuByRest } from \"../../features/menuSlice\";\nimport \"./ClientPage.css\";\n\nconst ClientPage = () => {\n  const dispatch = useDispatch();\n  const restId = localStorage.getItem(\"restId\");\n  useEffect(() => {\n    dispatch(getMenuByRest(restId));\n  }, []);\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    if (restId) socket.emit(\"joinRoom\", { restId });\n    socket.on(\"newMenu\", (data) => {\n      console.log(\"newmenu\", data);\n      dispatch(getMenuByRest(restId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const { menu, menuStatus } = useSelector((state) => state.menu);\n  const clientMenu =\n    menuStatus.getMenu === \"loading\" ? (\n      <IconContext.Provider value={{ className: \"spinner--large\" }}>\n        <div>\n          <ImSpinner9 />\n        </div>\n      </IconContext.Provider>\n    ) : menuStatus.getMenu === \"succeded\" && menu ? (\n      menu.menu.items.length === 0 ? (\n        <p> Ce menu n'est pas encore disponible</p>\n      ) : (\n        <ClientMenu menu={menu} restaurantId={restId} />\n      )\n    ) : (\n      <h5>Something went wrong...</h5>\n    );\n\n  return (\n    <div className=\"client-section\">\n      <Switch>\n        <Route exact path=\"/client-page\">\n          <div className=\"client-section__info\">\n            <h2>Menu</h2>\n\n            <img src={\"/\" + (menu && menu.menu.restaurant.logo)} alt=\"logo\" />\n            <h2>{menu && menu.menu.restaurant.name}</h2>\n          </div>\n          {clientMenu}\n        </Route>\n        <Route exact path=\"/client-page/order\">\n          <MyOrder />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default ClientPage;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\WorkerSection\\WorkerSection.js",["416","417","418","419"],"import React, { Fragment, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport openSocket from \"socket.io-client\";\nimport moment from \"moment\";\n\nimport \"./WorkerSection.css\";\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport { getAllOrders, checkoutOrder } from \"../../features/orderSlice\";\nimport { getTables } from \"../../features/tableSlice\";\n\nconst WorkerSection = () => {\n  const [filterBy, setFilterBy] = useState(\"\");\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    if (user) {\n      socket.emit(\"joinRoom\", { restId: user.restaurantId });\n      console.log(\"restid\", user.restaurantId);\n    }\n    socket.on(\"hi\", (data) => {\n      console.log(\"from server\", data);\n    });\n    socket.on(\"message\", (data) => {\n      console.log(\"new order------------\", data);\n\n      dispatch(getAllOrders(user.restaurantId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [user]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getTables(user.restaurantId));\n      dispatch(getAllOrders(user.restaurantId));\n    }\n  }, [isAuthenticated]);\n  const { listTable, tableStatus } = useSelector((state) => state.table);\n  useEffect(() => {\n    if (listTable) setFilterBy(listTable[0].tableNumber);\n  }, [listTable]);\n  const { orders, orderStatus } = useSelector((state) => state.order);\n\n  const handleChange = (e) => {\n    setFilterBy(e.target.value);\n  };\n  const handleClick = (id) => {\n    dispatch(checkoutOrder({ orderId: id }));\n    dispatch(getAllOrders(user.restaurantId));\n  };\n  return (\n    <div className=\"worker\">\n      <h2>List of orders</h2>\n      <div className=\"worker__tables\">\n        <p>Select Your Table</p>\n        {tableStatus.getAll === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : tableStatus.getAll === \"succeded\" ? (\n          <select name=\"filterBy\" onChange={handleChange}>\n            {listTable &&\n              listTable.map((tab, i) => (\n                <option key={tab._id} defaultValue value={tab.tableNumber}>\n                  table {tab.tableNumber}\n                </option>\n              ))}\n          </select>\n        ) : (\n          <h5>Something went wrong..</h5>\n        )}\n      </div>\n      <div className=\"worker__content\">\n        {orderStatus.getAll === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : orderStatus.getAll === \"succeded\" ? (\n          orders &&\n          orders\n            // .filter((order) => !order.paid && order.tableNumber === filterBy)\n            .filter((order) => {\n              if (!order.paid && order.tableNumber === Number(filterBy))\n                return order;\n            })\n            .slice(0)\n            .reverse()\n            .map((order) => {\n              // for (var i = order.items.length - 1; i >= 0; i--) {\n              //   reversedTable.push(order.items[i]);\n              // }\n              return (\n                <div className=\"worker__orders\" key={order._id}>\n                  {order.items\n                    .slice(0)\n                    .reverse()\n                    .map((item) => (\n                      <div className=\"worker__orders__items\" key={item._id}>\n                        <div className=\"worker__orders__items__info\">\n                          <p>{item.name}</p>\n                          <p>{item.quantity}</p>\n                        </div>\n                        {item.comment && (\n                          <p className=\"comment\">\n                            <span>preferences: </span>\n                            {item.comment}\n                          </p>\n                        )}\n\n                        <span className=\"timeline\">\n                          {moment(item.createdAt).fromNow()}\n                        </span>\n                      </div>\n                    ))}\n                  <button onClick={() => handleClick(order._id)}>\n                    Checkout order\n                  </button>\n                </div>\n              );\n            })\n        ) : (\n          <h5>something went wrong..</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WorkerSection;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\OwnerSection\\OwnerSection.js",["420","421"],"import React, { useEffect, useState } from \"react\";\nimport openSocket from \"socket.io-client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRestList } from \"../../features/ownerSlice\";\nimport AddRestaurant from \"../../Components/AddRestaurant/AddRestaurant\";\nimport RestaurantList from \"../../Components/RestaurantList/RestaurantList\";\nimport AddMenu from \"../../Components/AddMenu/AddMenu\";\nimport TableList from \"../../Components/TableList/TableList\";\nimport StaffList from \"../../Components/StaffList/StaffList\";\nimport OrderList from \"../../Components/OrderList/OrderList\";\n\nimport Menu from \"../Menu/Menu\";\nimport \"./OwnerSection.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport MyRestaurant from \"../MyRestaurant/MyRestaurant\";\n\nconst OwnerSection = () => {\n  const [channel, setChannel] = useState(null);\n  const { isAuthenticated } = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getRestList());\n    }\n  }, [isAuthenticated]);\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/owner-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n    setChannel(socket);\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    socket.on(\"restaurants\", (data) => {\n      console.log(\"from server\", data.action);\n      dispatch(getRestList());\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const { restList } = useSelector((state) => state.owner);\n  return (\n    <div className=\"owner\">\n      <Switch>\n        <Route exact path=\"/owner-section\">\n          <AddRestaurant />\n          <RestaurantList restaurants={restList} />\n        </Route>\n        <Route exact path=\"/owner-section/menu\">\n          <AddMenu />\n        </Route>\n        <Route exact path=\"/owner-section/rest-menu\">\n          <Menu />\n        </Route>\n        <Route exact path=\"/owner-section/my-rest\">\n          <MyRestaurant />\n        </Route>\n        <Route exact path=\"/owner-section/tables\">\n          <TableList channel={channel} />\n        </Route>\n        <Route exact path=\"/owner-section/staff\">\n          <StaffList channel={channel} />\n        </Route>\n        <Route exact path=\"/owner-section/orders\">\n          <OrderList />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default OwnerSection;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\utils\\scroll.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\OwnerList\\OwnerList.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddOwner\\AddOwner.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\TableList\\TableList.js",["422"],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\MyOrder\\MyOrder.js",["423"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport { getOrderById } from \"../../features/orderSlice\";\nimport \"./MyOrder.css\";\n\nconst MyOrder = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { orderId } = location.state;\n  useEffect(() => {\n    console.log(\"orederid\", orderId);\n    dispatch(getOrderById(orderId));\n  }, [orderId]);\n  const { order, orderStatus } = useSelector((state) => state.order);\n  return (\n    <div className=\"order\">\n      <h1>A Payer</h1>\n      {orderStatus.getOne === \"loading\" ? (\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\n          <div>\n            <ImSpinner9 />\n          </div>\n        </IconContext.Provider>\n      ) : orderStatus.getOne === \"succeded\" ? (\n        order &&\n        order.order.items.map((item) => (\n          <div className=\"order__item\" key={item._id}>\n            <p>{item.name}</p>\n            <div className=\"order__item__info\">\n              <p>{item.quantity}</p>\n              <p>{item.price} DT</p>\n            </div>\n          </div>\n        ))\n      ) : (\n        <h5>somthing went wrong..</h5>\n      )}\n      <div className=\"order__item__total\">\n        <p>total:</p>\n        <p>\n          {orderStatus.getOne === \"loading\" ? (\n            <span>loading..</span>\n          ) : orderStatus.getOne === \"succeded\" ? (\n            order && order.order.total\n          ) : null}\n          DT\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default MyOrder;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\RestaurantList\\RestaurantList.js",["424"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport RestaurantListItem from \"../RestaurantListItem/RestaurantListIem\";\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport \"./RestaurantList.css\";\n\nconst RestaurantList = ({ restaurants }) => {\n  const { ownerStatus, ownerErrors } = useSelector((state) => state.owner);\n  return (\n    <div className=\"restlist\">\n      <h3>List fo Restaurants</h3>\n      <div className=\"restlist__list\">\n        {ownerStatus.getList === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : ownerStatus.getList === \"failed\" ? (\n          <h2>something went wrong</h2>\n        ) : ownerStatus.getList === \"succeded\" && restaurants.length > 0 ? (\n          restaurants.map((rest) => (\n            <RestaurantListItem key={rest._id} rest={rest} />\n          ))\n        ) : (\n          <h5>you have no restaurants</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantList;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ClientMenu\\ClientMenu.js",["425","426"],"import React, { useEffect, useState, Fragment } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  createOrder,\n  updateOrder,\n  getOrderById,\n} from \"../../features/orderSlice\";\nimport ClientMenuItem from \"../../Components/ClientMenuItem/ClientMenuItem\";\nimport \"./ClientMenu.css\";\n\nconst ClientMenu = ({ menu }) => {\n  const [values, setValues] = useState({\n    orderId: null,\n    items: [],\n    total: 0,\n    categorie: \"entree\",\n  });\n  const { items, total, categorie } = values;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const id = localStorage.getItem(\"id\");\n    if (id) {\n      dispatch(getOrderById(id));\n      setValues({ ...values, orderId: id });\n    }\n  }, []);\n  useEffect(() => {\n    if (items.length > 0) {\n      let totalCost = items.reduce(\n        (acc, curv) => Number(acc) + Number(curv.price),\n        0\n      );\n      console.log(totalCost);\n      setValues({ ...values, total: totalCost });\n    } else {\n      setValues({ ...values, total: 0 });\n    }\n  }, [items]);\n  const { order } = useSelector((state) => state.order);\n  const history = useHistory();\n  const restId = localStorage.getItem(\"restId\");\n  const tableNumber = localStorage.getItem(\"tableNumber\");\n\n  const handleAdd = (name, quantity, price, comment, createdAt) => {\n    const itemIndex = items.findIndex((item) => item.name === name);\n    let newList = [...items];\n    if (itemIndex === -1) {\n      setValues({\n        ...values,\n        items: [...items, { name, price, quantity, comment, createdAt }],\n      });\n    } else {\n      if (quantity === 0) {\n        newList.splice(itemIndex, 1);\n      } else {\n        newList[itemIndex] = {\n          ...newList[itemIndex],\n          quantity,\n          price,\n          comment,\n          createdAt,\n        };\n      }\n      setValues({ ...values, items: newList });\n    }\n  };\n\n  const handleButton = () => {\n    const orderId = localStorage.getItem(\"id\");\n    if (items.length > 0) {\n      if (orderId && order && !order.order.paid) {\n        dispatch(updateOrder({ data: { items, total, orderId }, history }));\n      } else {\n        dispatch(\n          createOrder({ data: { items, total, restId, tableNumber }, history })\n        );\n      }\n    }\n  };\n\n  const orderLink = order && !order.order.paid && (\n    <Link\n      to={{\n        pathname: \"/client-page/order\",\n\n        state: { orderId: order.order._id },\n      }}\n    >\n      <span className=\"client-menu__link\">Mes choix</span>\n    </Link>\n  );\n  const menuItems =\n    menu && menu.menu.items ? (\n      <Fragment>\n        {menu.menu.items.filter((item) => item.categorie === categorie).length >\n          0 && (\n          <Fragment>\n            <p className=\"client-menu__categorie\">{categorie}</p>\n            <div className=\"client-menu__sub\">\n              {menu.menu.items\n                .filter((item) => item.categorie === categorie)\n                .map((item) => (\n                  <ClientMenuItem\n                    key={item._id}\n                    item={item}\n                    addToCommand={handleAdd}\n                  />\n                ))}\n            </div>\n          </Fragment>\n        )}\n      </Fragment>\n    ) : (\n      <h5>Loading...</h5>\n    );\n  const handleChoice = (choice) => {\n    setValues({ ...values, categorie: choice });\n  };\n  return (\n    <div className=\"client-menu\">\n      <div className=\"client-menu__menu\">\n        <button\n          className={\n            categorie === \"entree\" ? \"active-categorie\" : \"inactive-categorie\"\n          }\n          onClick={() => handleChoice(\"entree\")}\n        >\n          entrée\n        </button>\n        <button\n          className={\n            categorie === \"plat\" ? \"active-categorie\" : \"inactive-categorie\"\n          }\n          onClick={() => handleChoice(\"plat\")}\n        >\n          plat\n        </button>\n        <button\n          className={\n            categorie === \"boisson\" ? \"active-categorie\" : \"inactive-categorie\"\n          }\n          onClick={() => handleChoice(\"boisson\")}\n        >\n          boisson\n        </button>\n        <button\n          className={\n            categorie === \"Dessert\" ? \"active-categorie\" : \"inactive-categorie\"\n          }\n          onClick={() => handleChoice(\"Dessert\")}\n        >\n          dessert\n        </button>\n      </div>\n      <div className=\"client-menu__items\">{menuItems}</div>\n      <div className=\"client-menu__nav\">\n        {orderLink}\n        <button onClick={() => handleButton()}>Commander</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ClientMenu;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\OrderList\\OrderList.js",["427","428"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport moment from \"moment\";\nimport openSocket from \"socket.io-client\";\n\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport { getAllOrders } from \"../../features/orderSlice\";\nimport \"./OrderList.css\";\n\nconst OrderList = () => {\n  const [paid, setPaid] = useState(false);\n  const [filterDate, setFilterDate] = useState({\n    today: moment().format(),\n    filterByDate: false,\n  });\n  const { today, filterByDate } = filterDate;\n  const location = useLocation();\n  const { restId } = location.state;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    if (restId) {\n      socket.emit(\"joinRoom\", { restId: restId });\n      console.log(\"restid\", restId);\n    }\n\n    socket.on(\"message\", (data) => {\n      console.log(\"new order------------\", data);\n\n      dispatch(getAllOrders(restId));\n    });\n    // return () => {\n    //   socket.disconnect();\n    // };\n  }, []);\n  useEffect(() => {\n    dispatch(getAllOrders(restId));\n  }, []);\n  const { orders, orderStatus } = useSelector((state) => state.order);\n  const handleFilter = (filterBy) => {\n    setPaid(filterBy);\n  };\n  const handleDate = () => {\n    setFilterDate({ ...filterDate, filterByDate: !filterByDate });\n  };\n\n  return (\n    <div className=\"orders\">\n      <h2>List of Orders</h2>\n      <div className=\"orders__buttons\">\n        <button\n          className={\n            !paid ? \"orders__buttons--active\" : \"orders__buttons--normal\"\n          }\n          onClick={() => handleFilter(false)}\n        >\n          Non Payé\n        </button>\n        <button\n          className={\n            paid ? \"orders__buttons--active\" : \"orders__buttons--normal\"\n          }\n          onClick={() => handleFilter(true)}\n        >\n          Payé\n        </button>\n        <button\n          className={\n            filterByDate ? \"orders__buttons--active\" : \"orders__buttons--normal\"\n          }\n          onClick={handleDate}\n        >\n          Today's orders\n        </button>\n      </div>\n\n      {orderStatus.getAll === \"loading\" ? (\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\n          <div>\n            <ImSpinner9 />\n          </div>\n        </IconContext.Provider>\n      ) : orderStatus.getAll === \"succeded\" ? (\n        orders &&\n        orders\n          .filter(\n            (order) =>\n              order.paid === paid &&\n              (filterByDate\n                ? moment(order.createdAt).isSame(today, \"day\")\n                : moment(order.createdAt).isBefore(today, \"day\"))\n          )\n          .map((order) => (\n            <div className=\"orders__items\" key={order._id}>\n              <p>Table {order.tableNumber}</p>\n              {order.items.map((item) => (\n                <div className=\"orders__items__single\" key={item._id}>\n                  <div className=\"orders__items__info\">\n                    <p>{item.name}</p>\n                    <p>{item.quantity}</p>\n                    <p className=\"order__comment\">{item.comment}</p>\n                  </div>\n                  <p className=\"orders__items__time\">\n                    {moment(item.createdAt).fromNow()}\n                  </p>\n                </div>\n              ))}\n              <p>Total : {order.total}</p>\n            </div>\n          ))\n      ) : (\n        <h5>Something went wrong..</h5>\n      )}\n    </div>\n  );\n};\n\nexport default OrderList;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddMenu\\AddMenu.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\Menu\\Menu.js",["429"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ItemsMenu from \"../../Components/ItemsMenu/ItemsMenu\";\nimport { ImSpinner9 } from \"react-icons/im\";\nimport { IconContext } from \"react-icons\";\nimport \"./Menu.css\";\n\nconst Menu = ({ menu, logo }) => {\n  const { menuStatus, menuErrors } = useSelector((state) => state.menu);\n  return (\n    <div className=\"menu\">\n      {/* <img src={'/' + logo} alt='logo' /> */}\n      <p className=\"menu__cat\">Entree</p>\n      <div className=\"menu__cat__list\">\n        {menuStatus.getMenu === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : menuStatus.getMenu === \"failed\" ? (\n          <h2>Something went wrong..</h2>\n        ) : menuStatus.getMenu === \"succeded\" &&\n          menu &&\n          menu.menu.items.length > 0 ? (\n          menu.menu.items\n            .filter((item) => item.categorie === \"entree\")\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\n        ) : (\n          <h5>no entree found</h5>\n        )}\n      </div>\n\n      <p className=\"menu__cat\">Plat</p>\n      <div className=\"menu__cat__list\">\n        {menuStatus.getMenu === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : menuStatus.getMenu === \"failed\" ? (\n          <h2>Something went wrong..</h2>\n        ) : menuStatus.getMenu === \"succeded\" &&\n          menu &&\n          menu.menu.items.length > 0 ? (\n          menu.menu.items\n            .filter((item) => item.categorie === \"plat\")\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\n        ) : (\n          <h5>no plat found</h5>\n        )}\n      </div>\n\n      <p className=\"menu__cat\">Boisson</p>\n      <div className=\"menu__cat__list\">\n        {menuStatus.getMenu === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : menuStatus.getMenu === \"failed\" ? (\n          <h2>Something went wrong..</h2>\n        ) : menuStatus.getMenu === \"succeded\" &&\n          menu &&\n          menu.menu.items.length > 0 ? (\n          menu.menu.items\n            .filter((item) => item.categorie === \"boisson\")\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\n        ) : (\n          <h5>no boisson found</h5>\n        )}\n      </div>\n\n      <p className=\"menu__cat\">Dessert</p>\n      <div className=\"menu__cat__list\">\n        {menuStatus.getMenu === \"loading\" ? (\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\n            <div>\n              <ImSpinner9 />\n            </div>\n          </IconContext.Provider>\n        ) : menuStatus.getMenu === \"failed\" ? (\n          <h2>Something went wrong..</h2>\n        ) : menuStatus.getMenu === \"succeded\" &&\n          menu &&\n          menu.menu.items.length > 0 ? (\n          menu.menu.items\n            .filter((item) => item.categorie === \"Dessert\")\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\n        ) : (\n          <h5>no dessert found</h5>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Menu;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js",["430","431"],"import React, { useEffect } from \"react\";\nimport AddMenu from \"../../Components/AddMenu/AddMenu\";\nimport Menu from \"../Menu/Menu\";\nimport { getMenuByRest } from \"../../features/menuSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport openSocket from \"socket.io-client\";\n\nimport \"./MyRestaurant.css\";\n\nconst MyRestaurant = () => {\n  const location = useLocation();\n  const { restId, logo } = location.state;\n  const dispatch = useDispatch();\n  const { menu } = useSelector((state) => state.menu);\n  useEffect(() => {\n    dispatch(getMenuByRest(restId));\n  }, [restId]);\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n      socket.emit(\"joinRoom\", { restId });\n    });\n    socket.on(\"newMenu\", (data) => {\n      dispatch(getMenuByRest(restId));\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [restId]);\n  return (\n    <div className=\"my-rest\">\n      <AddMenu />\n      <Menu menu={menu} logo={logo} />\n    </div>\n  );\n};\n\nexport default MyRestaurant;\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\StaffList\\StaffList.js",["432","433"],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\utils\\image.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\Tables\\Tables.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js",["434"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteRestaurant, editRestaurant } from \"../../features/ownerSlice\";\r\nimport { generateBase64FromImage } from \"../../utils/image\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { MdRestaurantMenu } from \"react-icons/md\";\r\n\r\nimport \"./RestaurantListItem.css\";\r\nimport { FaUsersCog } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoListUnordered } from \"react-icons/go\";\r\nimport { GiTable } from \"react-icons/gi\";\r\n\r\nconst RestaurantListIem = ({ rest }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    preview: \"\",\r\n    address: \"\",\r\n    edit: false,\r\n  });\r\n  const { name, image, preview, address, edit } = values;\r\n  const dispatch = useDispatch();\r\n  const { ownerStatus, ownerErrors } = useSelector((state) => state.owner);\r\n  useEffect(() => {\r\n    if (ownerStatus.edit === \"succeded\")\r\n      setValues({ ...values, edit: false, preview: null });\r\n  }, [ownerStatus]);\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteRestaurant({ restId: id }));\r\n  };\r\n  const handleFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file)\r\n      generateBase64FromImage(file)\r\n        .then((b64) => {\r\n          setValues({ ...values, image: file, preview: b64 });\r\n        })\r\n        .catch((e) => {\r\n          setValues({ ...values, preview: null });\r\n        });\r\n  };\r\n  const handleData = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const handleEdit = (rest) => {\r\n    if (!edit) {\r\n      setValues({\r\n        name: rest.name,\r\n        address: rest.address,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"address\", address);\r\n      formData.append(\"image\", image);\r\n      formData.append(\"restId\", rest._id);\r\n      formData.append(\"lastImg\", rest.logo);\r\n      dispatch(editRestaurant(formData));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"restlist__item\">\r\n      <div className=\"restlist__item__form\">\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>restaurant:</h5>\r\n          <span className=\"error-message\">\r\n            {edit &&\r\n              ownerStatus.edit === \"failed\" &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"name\")[0] &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"name\")[0]\r\n                .msg}\r\n          </span>\r\n          {edit ? (\r\n            <input type=\"text\" name=\"name\" value={name} onChange={handleData} />\r\n          ) : (\r\n            <p>{rest.name}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>Address:</h5>\r\n          <span className=\"error-message\">\r\n            {edit &&\r\n              ownerStatus.edit === \"failed\" &&\r\n              ownerErrors.edit.data.filter(\r\n                (err) => err.param === \"address\"\r\n              )[0] &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"address\")[0]\r\n                .msg}\r\n          </span>\r\n          {edit ? (\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={address}\r\n              onChange={handleData}\r\n            />\r\n          ) : (\r\n            <p>{rest.address}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>Logo</h5>\r\n\r\n          {edit ? (\r\n            <input type=\"file\" name=\"image\" onChange={handleFile} />\r\n          ) : (\r\n            <img className=\"image-prev\" src={rest.logo} alt=\"\" />\r\n          )}\r\n          {preview && <img className=\"image-prev\" src={preview} alt=\" \" />}\r\n        </div>\r\n        <div className=\"restlist__item__form__button\">\r\n          <button onClick={() => handleDelete(rest._id)}>\r\n            {edit && ownerStatus.delete === \"loading\" ? (\r\n              <IconContext.Provider value={{ className: \"spinner\" }}>\r\n                <div>\r\n                  <ImSpinner9 />\r\n                </div>\r\n              </IconContext.Provider>\r\n            ) : (\r\n              <span>Delete</span>\r\n            )}\r\n          </button>\r\n          <button onClick={() => handleEdit(rest)}>\r\n            <span>Edit</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"restlist__item__form__links\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/my-rest\",\r\n              state: {\r\n                restId: rest._id,\r\n                logo: rest.logo,\r\n                restName: rest.name,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <MdRestaurantMenu />\r\n                </IconContext.Provider>\r\n                <span>Menu</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/staff\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <FaUsersCog />\r\n                </IconContext.Provider>\r\n                <span> Staff</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/orders\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <GoListUnordered />\r\n                </IconContext.Provider>\r\n                <span>Orders</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/tables\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <GiTable />\r\n                </IconContext.Provider>\r\n                <span>Tables</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantListIem;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddTable\\AddTable.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js",["435"],"import React, { useState, useEffect } from \"react\";\nimport \"./ClientMenuItem.css\";\nimport moment from \"moment\";\n\nconst ClientMenuItem = ({ item, addToCommand }) => {\n  const [showInput, setShowInput] = useState(false);\n  const [food, setFood] = useState({\n    price: 0,\n    quantity: 0,\n    comment: \"\",\n  });\n  const { price, quantity, comment } = food;\n  useEffect(() => {\n    let createdAt = moment().format();\n    addToCommand(item.name, quantity, price, comment, createdAt);\n  }, [price]);\n  const handleAdd = (itemPrice) => {\n    setFood({\n      ...food,\n      quantity: Number(quantity) + 1,\n      price: Number(price) + Number(itemPrice),\n    });\n  };\n  const handleComment = (e) => {\n    setFood({ ...food, comment: e.target.value });\n  };\n  const handleShow = () => {\n    setShowInput(!showInput);\n  };\n  const handleRemove = (itemPrice) => {\n    if (quantity > 0)\n      setFood({\n        ...food,\n        quantity: Number(quantity) - 1,\n        price: Number(price) - Number(itemPrice),\n      });\n  };\n  return (\n    <div className=\"client-menu-item\">\n      <div className=\"client-menu-item__group\">\n        <img src={item.image} alt=\"food\" />\n        <div className=\"client-menu-item__info\">\n          <p>{item.name}</p>\n          <p>{item.price} dt</p>\n          <span className=\"client-menu-item__price\">\n            Total: {price > 0 ? price : 0}\n          </span>\n        </div>\n      </div>\n\n      <p className=\"client-menu-item__desc\">{item.description}</p>\n\n      <div className=\"client-menu-item__buttons\">\n        <button\n          className=\"client-menu-item__button\"\n          onClick={() => handleRemove(item.price)}\n        >\n          -\n        </button>\n        <span>{quantity}</span>\n        <button\n          className=\"client-menu-item__button\"\n          onClick={() => handleAdd(item.price)}\n        >\n          +\n        </button>\n      </div>\n      <div className=\"client-menu-item__comment\">\n        {quantity > 0 ? (\n          <button className=\"comment__button\" onClick={handleShow}>\n            ajouter un commentaire\n          </button>\n        ) : (\n          <button className=\"comment__button\" onClick={handleShow} disabled>\n            ajouter un commentaire\n          </button>\n        )}\n\n        {showInput && quantity > 0 && (\n          <textarea value={comment} onChange={handleComment} rows=\"3\" cols=\"20\">\n            commentaire..\n          </textarea>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ClientMenuItem;\n",["436","437"],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\Workers\\Workers.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\AddWorker\\AddWorker.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js",[],{"ruleId":"438","replacedBy":"439"},{"ruleId":"440","replacedBy":"441"},{"ruleId":"442","severity":1,"message":"443","line":5,"column":8,"nodeType":"444","messageId":"445","endLine":5,"endColumn":16},{"ruleId":"442","severity":1,"message":"446","line":16,"column":11,"nodeType":"444","messageId":"445","endLine":16,"endColumn":16},{"ruleId":"442","severity":1,"message":"447","line":17,"column":9,"nodeType":"444","messageId":"445","endLine":17,"endColumn":19},{"ruleId":"442","severity":1,"message":"448","line":20,"column":9,"nodeType":"444","messageId":"445","endLine":20,"endColumn":20},{"ruleId":"442","severity":1,"message":"449","line":23,"column":9,"nodeType":"444","messageId":"445","endLine":23,"endColumn":21},{"ruleId":"450","severity":1,"message":"451","line":13,"column":6,"nodeType":"452","endLine":13,"endColumn":8,"suggestions":"453"},{"ruleId":"450","severity":1,"message":"451","line":17,"column":6,"nodeType":"452","endLine":17,"endColumn":14,"suggestions":"454"},{"ruleId":"450","severity":1,"message":"451","line":36,"column":6,"nodeType":"452","endLine":36,"endColumn":8,"suggestions":"455"},{"ruleId":"450","severity":1,"message":"451","line":25,"column":6,"nodeType":"452","endLine":25,"endColumn":23,"suggestions":"456"},{"ruleId":"450","severity":1,"message":"451","line":41,"column":6,"nodeType":"452","endLine":41,"endColumn":8,"suggestions":"457"},{"ruleId":"450","severity":1,"message":"451","line":36,"column":6,"nodeType":"452","endLine":36,"endColumn":12,"suggestions":"458"},{"ruleId":"450","severity":1,"message":"459","line":42,"column":6,"nodeType":"452","endLine":42,"endColumn":23,"suggestions":"460"},{"ruleId":"450","severity":1,"message":"461","line":16,"column":6,"nodeType":"452","endLine":16,"endColumn":8,"suggestions":"462"},{"ruleId":"450","severity":1,"message":"461","line":32,"column":6,"nodeType":"452","endLine":32,"endColumn":8,"suggestions":"463"},{"ruleId":"450","severity":1,"message":"451","line":14,"column":6,"nodeType":"452","endLine":14,"endColumn":15,"suggestions":"464"},{"ruleId":"450","severity":1,"message":"465","line":23,"column":6,"nodeType":"452","endLine":23,"endColumn":8,"suggestions":"466"},{"ruleId":"450","severity":1,"message":"467","line":32,"column":6,"nodeType":"452","endLine":32,"endColumn":13,"suggestions":"468"},{"ruleId":"450","severity":1,"message":"451","line":18,"column":6,"nodeType":"452","endLine":18,"endColumn":14,"suggestions":"469"},{"ruleId":"450","severity":1,"message":"451","line":34,"column":6,"nodeType":"452","endLine":34,"endColumn":14,"suggestions":"470"},{"ruleId":"442","severity":1,"message":"471","line":9,"column":23,"nodeType":"444","messageId":"445","endLine":9,"endColumn":33},{"ruleId":"450","severity":1,"message":"461","line":42,"column":6,"nodeType":"452","endLine":42,"endColumn":8,"suggestions":"472"},{"ruleId":"450","severity":1,"message":"461","line":45,"column":6,"nodeType":"452","endLine":45,"endColumn":8,"suggestions":"473"},{"ruleId":"450","severity":1,"message":"461","line":16,"column":6,"nodeType":"452","endLine":16,"endColumn":8,"suggestions":"474"},{"ruleId":"450","severity":1,"message":"461","line":25,"column":6,"nodeType":"452","endLine":25,"endColumn":15,"suggestions":"475"},{"ruleId":"450","severity":1,"message":"461","line":22,"column":6,"nodeType":"452","endLine":22,"endColumn":15,"suggestions":"476"},{"ruleId":"442","severity":1,"message":"477","line":10,"column":24,"nodeType":"444","messageId":"445","endLine":10,"endColumn":35},{"ruleId":"450","severity":1,"message":"478","line":16,"column":6,"nodeType":"452","endLine":16,"endColumn":13,"suggestions":"479"},{"ruleId":"450","severity":1,"message":"467","line":24,"column":6,"nodeType":"452","endLine":24,"endColumn":19,"suggestions":"480"},{"ruleId":"438","replacedBy":"481"},{"ruleId":"440","replacedBy":"482"},{"ruleId":"442","severity":1,"message":"483","line":2,"column":10,"nodeType":"444","messageId":"445","endLine":2,"endColumn":18},{"ruleId":"442","severity":1,"message":"484","line":19,"column":26,"nodeType":"444","messageId":"445","endLine":19,"endColumn":30},{"ruleId":"450","severity":1,"message":"485","line":45,"column":6,"nodeType":"452","endLine":45,"endColumn":14,"suggestions":"486"},{"ruleId":"450","severity":1,"message":"451","line":17,"column":6,"nodeType":"452","endLine":17,"endColumn":14,"suggestions":"487"},{"ruleId":"450","severity":1,"message":"451","line":36,"column":6,"nodeType":"452","endLine":36,"endColumn":8,"suggestions":"488"},{"ruleId":"442","severity":1,"message":"489","line":1,"column":27,"nodeType":"444","messageId":"445","endLine":1,"endColumn":36},{"ruleId":"450","severity":1,"message":"451","line":13,"column":6,"nodeType":"452","endLine":13,"endColumn":8,"suggestions":"490"},{"ruleId":"450","severity":1,"message":"461","line":17,"column":6,"nodeType":"452","endLine":17,"endColumn":8,"suggestions":"491"},{"ruleId":"450","severity":1,"message":"461","line":33,"column":6,"nodeType":"452","endLine":33,"endColumn":8,"suggestions":"492"},{"ruleId":"442","severity":1,"message":"493","line":1,"column":17,"nodeType":"444","messageId":"445","endLine":1,"endColumn":25},{"ruleId":"450","severity":1,"message":"451","line":39,"column":6,"nodeType":"452","endLine":39,"endColumn":12,"suggestions":"494"},{"ruleId":"450","severity":1,"message":"459","line":45,"column":6,"nodeType":"452","endLine":45,"endColumn":23,"suggestions":"495"},{"ruleId":"496","severity":1,"message":"497","line":94,"column":29,"nodeType":"498","messageId":"499","endLine":94,"endColumn":31},{"ruleId":"450","severity":1,"message":"451","line":26,"column":6,"nodeType":"452","endLine":26,"endColumn":23,"suggestions":"500"},{"ruleId":"450","severity":1,"message":"451","line":42,"column":6,"nodeType":"452","endLine":42,"endColumn":8,"suggestions":"501"},{"ruleId":"450","severity":1,"message":"461","line":22,"column":6,"nodeType":"452","endLine":22,"endColumn":15,"suggestions":"502"},{"ruleId":"450","severity":1,"message":"451","line":17,"column":6,"nodeType":"452","endLine":17,"endColumn":15,"suggestions":"503"},{"ruleId":"442","severity":1,"message":"477","line":10,"column":24,"nodeType":"444","messageId":"445","endLine":10,"endColumn":35},{"ruleId":"450","severity":1,"message":"465","line":28,"column":6,"nodeType":"452","endLine":28,"endColumn":8,"suggestions":"504"},{"ruleId":"450","severity":1,"message":"467","line":40,"column":6,"nodeType":"452","endLine":40,"endColumn":13,"suggestions":"505"},{"ruleId":"450","severity":1,"message":"461","line":43,"column":6,"nodeType":"452","endLine":43,"endColumn":8,"suggestions":"506"},{"ruleId":"450","severity":1,"message":"461","line":46,"column":6,"nodeType":"452","endLine":46,"endColumn":8,"suggestions":"507"},{"ruleId":"442","severity":1,"message":"471","line":9,"column":23,"nodeType":"444","messageId":"445","endLine":9,"endColumn":33},{"ruleId":"450","severity":1,"message":"451","line":18,"column":6,"nodeType":"452","endLine":18,"endColumn":14,"suggestions":"508"},{"ruleId":"450","severity":1,"message":"451","line":34,"column":6,"nodeType":"452","endLine":34,"endColumn":14,"suggestions":"509"},{"ruleId":"450","severity":1,"message":"461","line":16,"column":6,"nodeType":"452","endLine":16,"endColumn":8,"suggestions":"510"},{"ruleId":"450","severity":1,"message":"461","line":25,"column":6,"nodeType":"452","endLine":25,"endColumn":15,"suggestions":"511"},{"ruleId":"450","severity":1,"message":"467","line":29,"column":6,"nodeType":"452","endLine":29,"endColumn":19,"suggestions":"512"},{"ruleId":"450","severity":1,"message":"478","line":16,"column":6,"nodeType":"452","endLine":16,"endColumn":13,"suggestions":"513"},{"ruleId":"438","replacedBy":"514"},{"ruleId":"440","replacedBy":"515"},"no-native-reassign",["516"],"no-negated-in-lhs",["517"],"no-unused-vars","'QrReader' is defined but never used.","Identifier","unusedVar","'delay' is assigned a value but never used.","'handleScan' is assigned a value but never used.","'handleError' is assigned a value but never used.","'previewStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["518"],["519"],["520"],["521"],["522"],["523"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.restaurantId'. Either include them or remove the dependency array.",["524"],"React Hook useEffect has missing dependencies: 'dispatch' and 'restId'. Either include them or remove the dependency array.",["525"],["526"],["527"],"React Hook useEffect has missing dependencies: 'dispatch' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["528"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["529"],["530"],["531"],"'menuErrors' is assigned a value but never used.",["532"],["533"],["534"],["535"],["536"],"'ownerErrors' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'addToCommand', 'comment', 'item.name', and 'quantity'. Either include them or remove the dependency array. If 'addToCommand' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["537"],["538"],["516"],["517"],"'Redirect' is defined but never used.","'code' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["539"],["540"],["541"],"'useEffect' is defined but never used.",["542"],["543"],["544"],"'Fragment' is defined but never used.",["545"],["546"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["547"],["548"],["549"],["550"],["551"],["552"],["553"],["554"],["555"],["556"],["557"],["558"],["559"],["560"],["516"],["517"],"no-global-assign","no-unsafe-negation",{"desc":"561","fix":"562"},{"desc":"563","fix":"564"},{"desc":"561","fix":"565"},{"desc":"566","fix":"567"},{"desc":"561","fix":"568"},{"desc":"569","fix":"570"},{"desc":"571","fix":"572"},{"desc":"573","fix":"574"},{"desc":"573","fix":"575"},{"desc":"576","fix":"577"},{"desc":"578","fix":"579"},{"desc":"580","fix":"581"},{"desc":"573","fix":"582"},{"desc":"573","fix":"583"},{"desc":"573","fix":"584"},{"desc":"573","fix":"585"},{"desc":"573","fix":"586"},{"desc":"587","fix":"588"},{"desc":"587","fix":"589"},{"desc":"590","fix":"591"},{"desc":"592","fix":"593"},{"desc":"594","fix":"595"},{"desc":"563","fix":"596"},{"desc":"561","fix":"597"},{"desc":"561","fix":"598"},{"desc":"573","fix":"599"},{"desc":"573","fix":"600"},{"desc":"569","fix":"601"},{"desc":"571","fix":"602"},{"desc":"566","fix":"603"},{"desc":"561","fix":"604"},{"desc":"587","fix":"605"},{"desc":"576","fix":"606"},{"desc":"578","fix":"607"},{"desc":"580","fix":"608"},{"desc":"573","fix":"609"},{"desc":"573","fix":"610"},{"desc":"573","fix":"611"},{"desc":"573","fix":"612"},{"desc":"573","fix":"613"},{"desc":"587","fix":"614"},{"desc":"592","fix":"615"},{"desc":"590","fix":"616"},"Update the dependencies array to be: [dispatch]",{"range":"617","text":"618"},"Update the dependencies array to be: [dispatch, isAuth]",{"range":"619","text":"620"},{"range":"621","text":"618"},"Update the dependencies array to be: [dispatch, isAuthenticated]",{"range":"622","text":"623"},{"range":"624","text":"618"},"Update the dependencies array to be: [dispatch, user]",{"range":"625","text":"626"},"Update the dependencies array to be: [dispatch, isAuthenticated, user.restaurantId]",{"range":"627","text":"628"},"Update the dependencies array to be: [dispatch, restId]",{"range":"629","text":"630"},{"range":"631","text":"630"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"632","text":"633"},"Update the dependencies array to be: [dispatch, values]",{"range":"634","text":"635"},"Update the dependencies array to be: [items, values]",{"range":"636","text":"637"},{"range":"638","text":"630"},{"range":"639","text":"630"},{"range":"640","text":"630"},{"range":"641","text":"630"},{"range":"642","text":"630"},"Update the dependencies array to be: [channel, dispatch, restId]",{"range":"643","text":"644"},{"range":"645","text":"644"},"Update the dependencies array to be: [addToCommand, comment, item.name, price, quantity]",{"range":"646","text":"647"},"Update the dependencies array to be: [ownerStatus, values]",{"range":"648","text":"649"},"Update the dependencies array to be: [dispatch, history, result]",{"range":"650","text":"651"},{"range":"652","text":"620"},{"range":"653","text":"618"},{"range":"654","text":"618"},{"range":"655","text":"630"},{"range":"656","text":"630"},{"range":"657","text":"626"},{"range":"658","text":"628"},{"range":"659","text":"623"},{"range":"660","text":"618"},{"range":"661","text":"644"},{"range":"662","text":"633"},{"range":"663","text":"635"},{"range":"664","text":"637"},{"range":"665","text":"630"},{"range":"666","text":"630"},{"range":"667","text":"630"},{"range":"668","text":"630"},{"range":"669","text":"630"},{"range":"670","text":"644"},{"range":"671","text":"649"},{"range":"672","text":"647"},[400,402],"[dispatch]",[562,570],"[dispatch, isAuth]",[1045,1047],[1038,1055],"[dispatch, isAuthenticated]",[1477,1479],[1154,1160],"[dispatch, user]",[1316,1333],"[dispatch, isAuthenticated, user.restaurantId]",[557,559],"[dispatch, restId]",[1008,1010],[459,468],"[dispatch, orderId]",[727,729],"[dispatch, values]",[1014,1021],"[items, values]",[624,632],[1036,1044],[1243,1245],[1309,1311],[527,529],[777,786],"[channel, dispatch, restId]",[712,721],[485,492],"[addToCommand, comment, item.name, price, quantity]",[898,911],"[ownerStatus, values]",[1273,1281],"[dispatch, history, result]",[562,570],[1045,1047],[400,402],[644,646],[1095,1097],[1253,1259],[1415,1432],[1039,1056],[1478,1480],[712,721],[548,557],[770,772],[1081,1088],[1262,1264],[1328,1330],[624,632],[1036,1044],[527,529],[777,786],[1092,1105],[485,492]]