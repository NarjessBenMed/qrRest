[{"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\index.js":"1","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\App.js":"2","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\serviceWorker.js":"3","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\app\\store.js":"4","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\menuSlice.js":"6","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\adminSlice.js":"7","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\authSlice.js":"8","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\staffSlice.js":"9","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\tableSlice.js":"10","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\ownerSlice.js":"11","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\orderSlice.js":"12","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\SignIn\\SignIn.js":"13","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"14","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\PrivateRoute\\ClientRoute.js":"15","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\Home\\Home.js":"16","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\Navbar\\Navbar.js":"17","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\AdminSection\\AdminSection.js":"18","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\OwnerSection\\OwnerSection.js":"19","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\WorkerSection\\WorkerSection.js":"20","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ScanCode\\ScanCode.js":"21","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\ClientPage\\ClientPage.js":"22","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\MyOrder\\MyOrder.js":"23","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddOwner\\AddOwner.js":"24","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\OwnerList\\OwnerList.js":"25","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddMenu\\AddMenu.js":"26","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\OrderList\\OrderList.js":"27","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\RestaurantList\\RestaurantList.js":"28","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js":"29","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js":"30","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\TableList\\TableList.js":"31","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\StaffList\\StaffList.js":"32","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\Menu\\Menu.js":"33","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ClientMenu\\ClientMenu.js":"34","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\utils\\image.js":"35","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddTable\\AddTable.js":"36","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\Tables\\Tables.js":"37","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\Workers\\Workers.js":"38","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddWorker\\AddWorker.js":"39","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js":"40","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js":"41"},{"size":644,"mtime":1610392539774,"results":"42","hashOfConfig":"43"},{"size":1792,"mtime":1610392539689,"results":"44","hashOfConfig":"43"},{"size":5141,"mtime":1610392539912,"results":"45","hashOfConfig":"43"},{"size":648,"mtime":1610392539708,"results":"46","hashOfConfig":"43"},{"size":263,"mtime":1610392539913,"results":"47","hashOfConfig":"43"},{"size":3279,"mtime":1610392539709,"results":"48","hashOfConfig":"43"},{"size":2629,"mtime":1610392539708,"results":"49","hashOfConfig":"43"},{"size":2682,"mtime":1610651762874,"results":"50","hashOfConfig":"43"},{"size":2491,"mtime":1610392539738,"results":"51","hashOfConfig":"43"},{"size":2422,"mtime":1610392539739,"results":"52","hashOfConfig":"43"},{"size":4160,"mtime":1610392539736,"results":"53","hashOfConfig":"43"},{"size":4296,"mtime":1610392539733,"results":"54","hashOfConfig":"43"},{"size":2706,"mtime":1610392539883,"results":"55","hashOfConfig":"43"},{"size":596,"mtime":1610392539701,"results":"56","hashOfConfig":"43"},{"size":576,"mtime":1610392539701,"results":"57","hashOfConfig":"43"},{"size":4174,"mtime":1610918886405,"results":"58","hashOfConfig":"43"},{"size":3913,"mtime":1610897539172,"results":"59","hashOfConfig":"43"},{"size":1321,"mtime":1610392539779,"results":"60","hashOfConfig":"43"},{"size":2443,"mtime":1610392539879,"results":"61","hashOfConfig":"43"},{"size":3626,"mtime":1610645726192,"results":"62","hashOfConfig":"43"},{"size":1782,"mtime":1610392539703,"results":"63","hashOfConfig":"43"},{"size":1956,"mtime":1610650141315,"results":"64","hashOfConfig":"43"},{"size":1186,"mtime":1610392539864,"results":"65","hashOfConfig":"43"},{"size":3400,"mtime":1610392539691,"results":"66","hashOfConfig":"43"},{"size":870,"mtime":1610392539700,"results":"67","hashOfConfig":"43"},{"size":4691,"mtime":1610568442898,"results":"68","hashOfConfig":"43"},{"size":3461,"mtime":1610650962958,"results":"69","hashOfConfig":"43"},{"size":5330,"mtime":1610392539702,"results":"70","hashOfConfig":"43"},{"size":3706,"mtime":1610568285697,"results":"71","hashOfConfig":"43"},{"size":1663,"mtime":1610392539868,"results":"72","hashOfConfig":"43"},{"size":976,"mtime":1610568949472,"results":"73","hashOfConfig":"43"},{"size":1273,"mtime":1610567495837,"results":"74","hashOfConfig":"43"},{"size":1204,"mtime":1610392539813,"results":"75","hashOfConfig":"43"},{"size":4847,"mtime":1610652557081,"results":"76","hashOfConfig":"43"},{"size":313,"mtime":1610567829380,"results":"77","hashOfConfig":"43"},{"size":1269,"mtime":1610646914159,"results":"78","hashOfConfig":"43"},{"size":781,"mtime":1610392539706,"results":"79","hashOfConfig":"43"},{"size":855,"mtime":1610392539707,"results":"80","hashOfConfig":"43"},{"size":1583,"mtime":1610392539694,"results":"81","hashOfConfig":"43"},{"size":2751,"mtime":1610392539697,"results":"82","hashOfConfig":"43"},{"size":1493,"mtime":1610401648803,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1dzbe4b",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"86"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"86"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"86"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"86"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"86"},"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\index.js",[],["179","180"],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\App.js",["181"],"import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\r\nimport ClientRoute from \"./Components/PrivateRoute/ClientRoute\";\r\nimport Home from \"./pages/Home/Home\";\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\n\r\nimport SignIn from \"./pages/SignIn/SignIn\";\r\nimport ScanCode from \"./Components/ScanCode/ScanCode\";\r\nimport \"./App.css\";\r\nimport AdminSection from \"./pages/AdminSection/AdminSection\";\r\nimport OwnerSection from \"./pages/OwnerSection/OwnerSection\";\r\nimport WorkerSection from \"./pages/WorkerSection/WorkerSection\";\r\nimport ClientPage from \"./pages/ClientPage/ClientPage\";\r\nimport MyOrder from \"./pages/MyOrder/MyOrder\";\r\n\r\nfunction App() {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n  return (\r\n    <div className=\"app\">\r\n      <Router>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route exact path=\"/signin\">\r\n            <SignIn />\r\n          </Route>\r\n          <Route exact path=\"/scan-code\">\r\n            <ScanCode />\r\n          </Route>\r\n          <ClientRoute path=\"/client-page\">\r\n            <ClientPage />\r\n          </ClientRoute>\r\n\r\n          <PrivateRoute exact path=\"/admin-section\">\r\n            <AdminSection />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/owner-section\">\r\n            <OwnerSection />\r\n          </PrivateRoute>\r\n          <PrivateRoute path=\"/worker-section\">\r\n            <WorkerSection />\r\n          </PrivateRoute>\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\serviceWorker.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\app\\store.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\menuSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\adminSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\authSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\staffSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\tableSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\ownerSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\features\\orderSlice.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\SignIn\\SignIn.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\PrivateRoute\\ClientRoute.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\Home\\Home.js",["182","183"],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\Navbar\\Navbar.js",["184"],"import React, { Fragment, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logout } from \"../../features/authSlice\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { HiMenuAlt3 } from \"react-icons/hi\";\r\nimport { MdRestaurantMenu } from \"react-icons/md\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./Navbar.css\";\r\n\r\nconst Navbar = () => {\r\n  const [click, setClick] = useState(false);\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const isAuth = useSelector((state) => state.auth.isAuthenticated);\r\n  const isClient = useSelector((state) => state.auth.isClient);\r\n  const user = useSelector((state) => state.auth.user);\r\n  const handleLog = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  const adminMenu = (\r\n    <Fragment>\r\n      <Link to=\"/admin-section\">\r\n        <span className=\"navbar__link\">Home</span>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <span className=\"navbar__link\" onClick={handleLog}>\r\n          Déconnexion\r\n        </span>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n  const ownerMenu = (\r\n    <Fragment>\r\n      <Link to=\"/owner-section\">\r\n        <span className=\"navbar__link\">Home</span>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <span className=\"navbar__link\" onClick={handleLog}>\r\n          Déconnexion\r\n        </span>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n  const homeMenu = (\r\n    <Fragment>\r\n      <Link to=\"/\">\r\n        <span className=\"navbar__link\" onClick={closeMobileMenu}>\r\n          Home\r\n        </span>\r\n      </Link>\r\n      <div\r\n        className={click ? \"navbar__first-menu active\" : \"navbar__first-menu\"}\r\n        onClick={closeMobileMenu}\r\n      >\r\n        <Link to=\"/\" onClick={closeMobileMenu}>\r\n          <span className=\"navbar__link\">fonctionnement</span>\r\n        </Link>\r\n        <Link to=\"/\" onClick={closeMobileMenu}>\r\n          <span className=\"navbar__link\">avantages</span>\r\n        </Link>\r\n        <Link to=\"/\" onClick={closeMobileMenu}>\r\n          <span className=\"navbar__link\">adhérents</span>\r\n        </Link>\r\n        <Link to=\"/\" onClick={closeMobileMenu}>\r\n          <span className=\"navbar__link\">Nous contacter</span>\r\n        </Link>\r\n      </div>\r\n      <div className=\"navbar__second-menu\">\r\n        <Link to=\"/signin\" onClick={closeMobileMenu}>\r\n          <span className=\"navbar__link\">se connecter</span>\r\n        </Link>\r\n        <div className=\"mobile-menu\" onClick={handleClick}>\r\n          {click ? (\r\n            <IconContext.Provider value={{ className: \"menu-icon\" }}>\r\n              <div>\r\n                <MdRestaurantMenu />\r\n              </div>\r\n            </IconContext.Provider>\r\n          ) : (\r\n            <IconContext.Provider value={{ className: \"menu-icon\" }}>\r\n              <div>\r\n                <HiMenuAlt3 />\r\n              </div>\r\n            </IconContext.Provider>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n  const clientMenu = (\r\n    <Fragment>\r\n      <Link to=\"/client-page\">\r\n        <span className=\"navbar__link\">Menu</span>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <span className=\"navbar__link\">Deconnexion</span>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n  const workerMenu = (\r\n    <Fragment>\r\n      <Link to=\"/worker-section\">\r\n        <span className=\"navbar__link active\">Home</span>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <span className=\"navbar__link\" onClick={handleLog}>\r\n          Déconnexion\r\n        </span>\r\n      </Link>\r\n    </Fragment>\r\n  );\r\n  const navMenu = isAuth\r\n    ? user.role === \"owner\"\r\n      ? ownerMenu\r\n      : user.role === \"admin\"\r\n      ? adminMenu\r\n      : workerMenu\r\n    : isClient\r\n    ? clientMenu\r\n    : homeMenu;\r\n\r\n  return <div className=\"navbar\">{navMenu}</div>;\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\AdminSection\\AdminSection.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\OwnerSection\\OwnerSection.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\WorkerSection\\WorkerSection.js",["185","186"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./WorkerSection.css\";\r\nimport { getAllOrders, checkoutOrder } from \"../../features/orderSlice\";\r\nimport { getTables } from \"../../features/tableSlice\";\r\nimport openSocket from \"socket.io-client\";\r\nimport moment from \"moment\";\r\n\r\nconst WorkerSection = () => {\r\n  const [filterBy, setFilterBy] = useState(\"\");\r\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\r\n  const { orders, status } = useSelector((state) => state.order);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (user) {\r\n      socket.emit(\"joinRoom\", { restId: user.restaurantId });\r\n      console.log(\"restid\", user.restaurantId);\r\n    }\r\n    socket.on(\"hi\", (data) => {\r\n      console.log(\"from server\", data);\r\n    });\r\n    socket.on(\"message\", (data) => {\r\n      console.log(\"new order------------\", data);\r\n\r\n      dispatch(getAllOrders(user.restaurantId));\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [dispatch, user]);\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(getTables(user.restaurantId));\r\n      dispatch(getAllOrders(user.restaurantId));\r\n    }\r\n  }, [isAuthenticated, dispatch]);\r\n  const { listTable } = useSelector((state) => state.table);\r\n  // useEffect(() => {\r\n  //   if (orders) {\r\n  //     const list = Array.from(\r\n  //       new Set(orders.map((order) => order.tableNumber))\r\n  //     );\r\n  //     setTableList(list);\r\n  //     setFilterBy(list[0]);\r\n  //   }\r\n  // }, [orders]);\r\n  const handleChange = (e) => {\r\n    setFilterBy(e.target.value);\r\n  };\r\n  const handleClick = (id) => {\r\n    dispatch(checkoutOrder({ orderId: id }));\r\n    dispatch(getAllOrders(user.restaurantId));\r\n  };\r\n  return (\r\n    <div className=\"worker\">\r\n      <h2>List of orders</h2>\r\n      <div className=\"worker__tables\">\r\n        <p>Select Your Table</p>\r\n        <select name=\"filterBy\" onChange={handleChange}>\r\n          {listTable &&\r\n            listTable.map((tab) => (\r\n              <option key={tab._id} value={tab.tableNumber}>\r\n                table {tab.tableNumber}\r\n              </option>\r\n            ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"worker__content\">\r\n        {status !== \"loading\" &&\r\n          orders &&\r\n          // filterBy &&\r\n          orders\r\n            // .filter((order) => order.tableNumber == filterBy && !order.paid)\r\n            .filter((order) => !order.paid && order.tableNumber == filterBy)\r\n            .map((order) => (\r\n              <div className=\"worker__orders\" key={order._id}>\r\n                {order.items.map((item) => (\r\n                  <div className=\"worker__orders__items\" key={item._id}>\r\n                    <div className=\"worker__orders__items__info\">\r\n                      <p>{item.name}</p>\r\n                      <p>{item.quantity}</p>\r\n                    </div>\r\n                    <span className=\"timeline\">\r\n                      {/* {moment(item.updatedAt).startOf('minute').fromNow()} */}\r\n                      {moment(item.createdAt).fromNow()}\r\n                    </span>\r\n                  </div>\r\n                ))}\r\n                <button onClick={() => handleClick(order._id)}>\r\n                  Checkout order\r\n                </button>\r\n              </div>\r\n            ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkerSection;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ScanCode\\ScanCode.js",["187"],"import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authClient } from '../../features/authSlice';\r\nimport QrReader from 'react-qr-scanner';\r\nimport './ScanCode.css';\r\n\r\nconst ScanCode = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [values, setValues] = useState({\r\n    delay: 100,\r\n    result: null,\r\n    code: '',\r\n  });\r\n  const { delay, result, code } = values;\r\n  const handleScan = (data) => {\r\n    setValues({ ...values, result: data });\r\n  };\r\n  const handleError = (err) => {\r\n    console.error(err);\r\n  };\r\n  const previewStyle = {\r\n    height: 320,\r\n    width: 240,\r\n  };\r\n  // const handleInput = (e) => {\r\n  //   setValues({ ...values, code: e.target.value });\r\n  // };\r\n  // const handleSubmit = () => {\r\n  //   setValues({ ...values, result: code });\r\n  // };\r\n\r\n  if (result) {\r\n    dispatch(authClient(result.split('+')[0], result.split('+')[1]));\r\n    localStorage.setItem('restId', result.split('+')[0]);\r\n    localStorage.setItem('tableNumber', result.split('+')[1]);\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/client-page',\r\n          state: {\r\n            restId: result.split('+')[0],\r\n            tableNumber: result.split('+')[1],\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div className='code'>\r\n      <div className='reader'>\r\n        <QrReader\r\n          delay={delay}\r\n          style={previewStyle}\r\n          onError={handleError}\r\n          onScan={handleScan}\r\n        />\r\n      </div>\r\n      {/* <input type=\"text\" name=\"code\" value={code} onChange={handleInput} />\r\n      <button onClick={handleSubmit}>confirm</button>\r\n      <h1>{result}</h1> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ScanCode;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\ClientPage\\ClientPage.js",["188","189","190","191"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport ClientMenu from \"../../Components/ClientMenu/ClientMenu\";\r\nimport MyOrder from \"../MyOrder/MyOrder\";\r\nimport { getMenuByRest } from \"../../features/menuSlice\";\r\nimport { getOrderById } from \"../../features/orderSlice\";\r\nimport \"./ClientPage.css\";\r\n\r\nconst ClientPage = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const restId = localStorage.getItem(\"restId\");\r\n  useEffect(() => {\r\n    dispatch(getMenuByRest(restId));\r\n  }, [dispatch, restId]);\r\n  useEffect(() => {\r\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (restId) socket.emit(\"joinRoom\", { restId });\r\n    socket.on(\"newMenu\", (data) => {\r\n      console.log(\"newmenu\", data);\r\n      dispatch(getMenuByRest(restId));\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [restId]);\r\n\r\n  const { menu, status } = useSelector((state) => state.menu);\r\n  const clientMenu =\r\n    status === \"succeded\" && menu ? (\r\n      <ClientMenu menu={menu} restaurantId={restId} />\r\n    ) : (\r\n      <h5>Loading...</h5>\r\n    );\r\n  return (\r\n    <div className=\"client-section\">\r\n      <Switch>\r\n        <Route exact path=\"/client-page\">\r\n          <div className=\"client-section__info\">\r\n            <img src={\"/\" + (menu && menu.menu.restaurant.logo)} />\r\n            <h2>The Menu of {menu && menu.menu.restaurant.name}</h2>\r\n          </div>\r\n          {clientMenu}\r\n        </Route>\r\n        <Route exact path=\"/client-page/order\">\r\n          <MyOrder />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPage;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\MyOrder\\MyOrder.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddOwner\\AddOwner.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\OwnerList\\OwnerList.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddMenu\\AddMenu.js",["192"],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { addToMenu } from \"../../features/ownerSlice\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { generateBase64FromImage } from \"../../utils/image\";\r\nimport \"./AddMenu.css\";\r\n\r\nconst AddMenu = (props) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    price: \"\",\r\n    image: \"\",\r\n    preview: \"\",\r\n    description: \"\",\r\n    categorie: \"entree\",\r\n  });\r\n  const location = useLocation();\r\n  const { restId, logo, restName } = location.state;\r\n  useEffect(() => {\r\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n    socket.on(\"connect\", () => {});\r\n    if (restId) {\r\n      console.log(\"restid\", restId);\r\n      socket.emit(\"joinRoom\", { restId });\r\n    }\r\n\r\n    socket.on(\"hi\", (data) => {\r\n      console.log(\"from server\", data);\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const { name, price, image, description, categorie, preview } = values;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {}, [dispatch]);\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const { status } = useSelector((state) => state.owner);\r\n  const fileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file)\r\n      generateBase64FromImage(file)\r\n        .then((b64) => {\r\n          setValues({ ...values, image: file, preview: b64 });\r\n        })\r\n        .catch((e) => {\r\n          setValues({ ...values, preview: null });\r\n        });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let formData = new FormData();\r\n    formData.append(\"restaurant\", restId);\r\n    formData.append(\"name\", name);\r\n    formData.append(\"price\", price);\r\n    formData.append(\"image\", image);\r\n    formData.append(\"description\", description);\r\n    formData.append(\"categorie\", categorie);\r\n\r\n    dispatch(addToMenu(formData));\r\n    setValues({\r\n      name: \"\",\r\n      price: \"\",\r\n      image: \"\",\r\n      preview: \"\",\r\n      description: \"\",\r\n      categorie: \"\",\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"menu\">\r\n      <h2>{restName}</h2>\r\n      <img src={\"/\" + logo} alt=\"logo\" />\r\n      <h3>Create Menu </h3>\r\n      <form>\r\n        <div className=\"menu__form__group\">\r\n          <h5> name de plat </h5>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"menu__container__form__input valid__input\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"menu__form__group\">\r\n          <h5>description</h5>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"menu__container__form__input valid__input\"\r\n            name=\"description\"\r\n            value={description}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"menu__form__group\">\r\n          <h5>price</h5>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"menu__container__form__input valid__input\"\r\n            name=\"price\"\r\n            value={price}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"menu__form__group\">\r\n          <h5>categorie</h5>\r\n          <select name=\"categorie\" onChange={handleChange}>\r\n            <option defaultValue value=\"entree\">\r\n              Entree\r\n            </option>\r\n            <option value=\"boisson\">Boisson</option>\r\n            <option value=\"plat\">plat</option>\r\n            <option value=\"Dessert\">Dessert </option>\r\n          </select>\r\n        </div>\r\n        <div className=\"menu__form__group\">\r\n          <h5>logo</h5>\r\n\r\n          <input\r\n            type=\"file\"\r\n            className=\"menu__container__form__input valid__input\"\r\n            name=\"image\"\r\n            onChange={fileHandler}\r\n          />\r\n          {preview && <img className=\"image-preview\" src={preview} alt=\"d\" />}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"menu__menuButton\"\r\n          onClick={handleSubmit}\r\n        >\r\n          {status === \"loading\" ? (\r\n            <IconContext.Provider value={{ className: \"spinner\" }}>\r\n              <div>\r\n                <ImSpinner9 />\r\n              </div>\r\n            </IconContext.Provider>\r\n          ) : (\r\n            <span>Add</span>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMenu;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\OrderList\\OrderList.js",["193","194"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getAllOrders } from \"../../features/orderSlice\";\r\nimport openSocket from \"socket.io-client\";\r\nimport \"./OrderList.css\";\r\nimport moment from \"moment\";\r\n\r\nconst OrderList = () => {\r\n  const [paid, setPaid] = useState(false);\r\n  const [filterDate, setFilterDate] = useState({\r\n    today: moment().format(),\r\n    filterByDate: false,\r\n  });\r\n  const { today, filterByDate } = filterDate;\r\n  const location = useLocation();\r\n  const { restId } = location.state;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (restId) {\r\n      socket.emit(\"joinRoom\", { restId: restId });\r\n      console.log(\"restid\", restId);\r\n    }\r\n    socket.on(\"hi\", (data) => {\r\n      console.log(\"from server\", data);\r\n    });\r\n    socket.on(\"message\", (data) => {\r\n      console.log(\"new order------------\", data);\r\n\r\n      dispatch(getAllOrders(restId));\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    dispatch(getAllOrders(restId));\r\n  }, []);\r\n  const { orders, status } = useSelector((state) => state.order);\r\n  const handleFilter = (filterBy) => {\r\n    setPaid(filterBy);\r\n  };\r\n  const handleDate = () => {\r\n    setFilterDate({ ...filterDate, filterByDate: !filterByDate });\r\n  };\r\n\r\n  return (\r\n    <div className=\"orders\">\r\n      <h2>List of Orders</h2>\r\n      <div className=\"orders__buttons\">\r\n        <button\r\n          className={\r\n            !paid ? \"orders__buttons--active\" : \"orders__buttons--normal\"\r\n          }\r\n          onClick={() => handleFilter(false)}\r\n        >\r\n          Non Payé\r\n        </button>\r\n        <button\r\n          className={\r\n            paid ? \"orders__buttons--active\" : \"orders__buttons--normal\"\r\n          }\r\n          onClick={() => handleFilter(true)}\r\n        >\r\n          Payé\r\n        </button>\r\n        <button\r\n          className={\r\n            filterByDate ? \"orders__buttons--active\" : \"orders__buttons--normal\"\r\n          }\r\n          onClick={handleDate}\r\n        >\r\n          Today's orders\r\n        </button>\r\n      </div>\r\n\r\n      {status === \"succeded\" &&\r\n        orders &&\r\n        orders\r\n          .filter(\r\n            (order) =>\r\n              order.paid === paid &&\r\n              (filterByDate\r\n                ? moment(order.createdAt).isSame(today, \"day\")\r\n                : moment(order.createdAt).isBefore(today, \"day\"))\r\n          )\r\n          .map((order) => (\r\n            <div className=\"orders__items\" key={order._id}>\r\n              <p>Table {order.tableNumber}</p>\r\n              {order.items.map((item) => (\r\n                <div className=\"orders__items__single\" key={item._id}>\r\n                  <div className=\"orders__items__info\">\r\n                    <p>{item.name}</p>\r\n                    <p>{item.quantity}</p>\r\n                  </div>\r\n                  <p className=\"orders__items__time\">\r\n                    {moment(item.createdAt).fromNow()}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n              <p>Total : {order.total}</p>\r\n            </div>\r\n          ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\RestaurantList\\RestaurantList.js",["195"],"import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteRestaurant, editRestaurant } from \"../../features/ownerSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { generateBase64FromImage } from \"../../utils/image\";\r\nimport \"./RestaurantList.css\";\r\n\r\nconst RestaurantList = ({ restaurants }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    preview: \"\",\r\n    address: \"\",\r\n    edit: false,\r\n  });\r\n  const { name, image, preview, address, edit } = values;\r\n  const dispatch = useDispatch();\r\n  const { status, errors } = useSelector((state) => state.owner);\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteRestaurant({ restId: id }));\r\n  };\r\n  const handleFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file)\r\n      generateBase64FromImage(file)\r\n        .then((b64) => {\r\n          setValues({ ...values, image: file, preview: b64 });\r\n        })\r\n        .catch((e) => {\r\n          setValues({ ...values, preview: null });\r\n        });\r\n  };\r\n  const handleData = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEdit = (rest) => {\r\n    if (!edit) {\r\n      setValues({\r\n        name: rest.name,\r\n        address: rest.address,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"address\", address);\r\n      formData.append(\"image\", image);\r\n      formData.append(\"restId\", rest._id);\r\n      formData.append(\"lastImg\", rest.logo);\r\n\r\n      dispatch(editRestaurant(formData));\r\n      setValues({ ...values, edit: false, preview: null });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"restlist\">\r\n      <h3>List fo Restaurants</h3>\r\n      {restaurants && restaurants.length > 0 ? (\r\n        restaurants.map((rest) => (\r\n          <div className=\"restlist__item\" key={rest._id}>\r\n            <div className=\"restlist__item__form\">\r\n              <div className=\"restlist__item__form__group\">\r\n                <h5>The restaurant</h5>\r\n                <span>\r\n                  {errors &&\r\n                    errors.data.filter((err) => err.param === \"nameedit\")[0] &&\r\n                    errors.data.filter((err) => err.param === \"nameedit\")[0]\r\n                      .msg}\r\n                </span>\r\n                {edit ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={handleData}\r\n                  />\r\n                ) : (\r\n                  <p>{rest.name}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"restlist__item__form__group\">\r\n                <h5>The Address</h5>\r\n                {edit ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    value={address}\r\n                    onChange={handleData}\r\n                  />\r\n                ) : (\r\n                  <p>{rest.address}</p>\r\n                )}\r\n              </div>\r\n              <div className=\"restlist__item__form__group\">\r\n                <h5>Logo</h5>\r\n                {edit ? (\r\n                  <input type=\"file\" name=\"image\" onChange={handleFile} />\r\n                ) : (\r\n                  <img className=\"image-prev\" src={rest.logo} alt=\"\" />\r\n                )}\r\n                {preview && (\r\n                  <img className=\"image-prev\" src={preview} alt=\" \" />\r\n                )}\r\n              </div>\r\n              <div className=\"restlist__item__form__button\">\r\n                <button onClick={() => handleDelete(rest._id)}>Delete</button>\r\n                <button onClick={() => handleEdit(rest)}>Edit</button>\r\n              </div>\r\n              <div className=\"restlist__item__form__links\">\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/owner-section/my-rest\",\r\n                    state: {\r\n                      restId: rest._id,\r\n                      logo: rest.logo,\r\n                      restName: rest.name,\r\n                    },\r\n                  }}\r\n                >\r\n                  <p>Menu</p>\r\n                </Link>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/owner-section/staff\",\r\n                    state: {\r\n                      restId: rest._id,\r\n                    },\r\n                  }}\r\n                >\r\n                  <p>Staff</p>\r\n                </Link>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/owner-section/orders\",\r\n                    state: {\r\n                      restId: rest._id,\r\n                    },\r\n                  }}\r\n                >\r\n                  <p>Orders</p>\r\n                </Link>\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/owner-section/tables\",\r\n                    state: {\r\n                      restId: rest._id,\r\n                    },\r\n                  }}\r\n                >\r\n                  <p>Tables</p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h5>you have no restaurants</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantList;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\TableList\\TableList.js",["196"],"import React, { useEffect, useState } from \"react\";\r\nimport AddTable from \"../AddTable/AddTable\";\r\nimport Tables from \"../Tables/Tables\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { getTables } from \"../../features/tableSlice\";\r\nimport \"./TableList.css\";\r\nconst TableList = () => {\r\n  const [added, setAdded] = useState(false);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const { restId } = location.state;\r\n  useEffect(() => {\r\n    dispatch(getTables(restId));\r\n  }, [dispatch, restId]);\r\n  const handleAdd = () => {\r\n    dispatch(getTables(restId));\r\n    setAdded(true);\r\n  };\r\n  const { listTable } = useSelector((state) => state.table);\r\n  return (\r\n    <div className=\"table-list\">\r\n      <AddTable restId={restId} handleAdd={handleAdd} tables={listTable} />\r\n      <Tables tables={listTable} handleAdd={handleAdd} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableList;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\StaffList\\StaffList.js",["197","198"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nimport AddWorker from \"../AddWorker/AddWorker\";\r\nimport Workers from \"../Workers/Workers\";\r\nimport { getAllWorkers } from \"../../features/staffSlice\";\r\nimport \"./StaffList.css\";\r\n\r\nconst StaffList = () => {\r\n  const location = useLocation();\r\n  const { restId } = location.state;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllWorkers(restId));\r\n  }, [dispatch]);\r\n  const { workers } = useSelector((state) => state.staff);\r\n  useEffect(() => {\r\n    let socket = openSocket(\"http://localhost:5000/owner-space\", {\r\n      transports: [\"websocket\", \"polling\"],\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n\r\n    socket.emit(\"joinRoom\", { restId });\r\n\r\n    socket.on(\"message\", (data) => {\r\n      console.log(data.msg);\r\n\r\n      dispatch(getAllWorkers(restId));\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"staff\">\r\n      <AddWorker restId={restId} />\r\n      <Workers list={workers} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffList;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\pages\\Menu\\Menu.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ClientMenu\\ClientMenu.js",["199","200","201","202","203"],"import React, { useEffect, useState, Fragment } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, Link, useLocation } from \"react-router-dom\";\r\nimport {\r\n  createOrder,\r\n  updateOrder,\r\n  getOrderById,\r\n} from \"../../features/orderSlice\";\r\nimport ClientMenuItem from \"../../Components/ClientMenuItem/ClientMenuItem\";\r\nimport \"./ClientMenu.css\";\r\n\r\nconst ClientMenu = ({ menu, restaurantId }) => {\r\n  const [values, setValues] = useState({\r\n    orderId: null,\r\n    items: [],\r\n    total: 0,\r\n  });\r\n  const { items, total, orderId } = values;\r\n\r\n  useEffect(() => {\r\n    const id = localStorage.getItem(\"id\");\r\n    if (id) {\r\n      dispatch(getOrderById(id));\r\n      setValues({ ...values, orderId: id });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (items.length > 0) {\r\n      let totalCost = items.reduce(\r\n        (acc, curv) => Number(acc) + Number(curv.price),\r\n        0\r\n      );\r\n      console.log(totalCost);\r\n      setValues({ ...values, total: totalCost });\r\n    } else {\r\n      setValues({ ...values, total: 0 });\r\n    }\r\n  }, [items]);\r\n  const { order, status } = useSelector((state) => state.order);\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const restId = localStorage.getItem(\"restId\");\r\n  const tableNumber = localStorage.getItem(\"tableNumber\");\r\n\r\n  const dispatch = useDispatch();\r\n  const handleAdd = (name, quantity, price, createdAt) => {\r\n    const itemIndex = items.findIndex((item) => item.name === name);\r\n    let newList = [...items];\r\n    if (itemIndex === -1) {\r\n      setValues({\r\n        ...values,\r\n        items: [...items, { name, price, quantity, createdAt }],\r\n      });\r\n    } else {\r\n      if (quantity === 0) {\r\n        newList.splice(itemIndex, 1);\r\n      } else {\r\n        newList[itemIndex] = {\r\n          ...newList[itemIndex],\r\n          quantity,\r\n          price,\r\n          createdAt,\r\n        };\r\n      }\r\n      setValues({ ...values, items: newList });\r\n    }\r\n  };\r\n\r\n  const handleButton = () => {\r\n    const orderId = localStorage.getItem(\"id\");\r\n    if (items.length > 0) {\r\n      if (orderId && order && !order.order.paid) {\r\n        dispatch(updateOrder({ data: { items, total, orderId }, history }));\r\n      } else {\r\n        dispatch(\r\n          createOrder({ data: { items, total, restId, tableNumber }, history })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const orderLink = order && !order.order.paid && (\r\n    <Link\r\n      to={{\r\n        pathname: \"/client-page/order\",\r\n\r\n        state: { orderId: order.order._id },\r\n      }}\r\n    >\r\n      <span className=\"client-menu__link\">My order</span>\r\n    </Link>\r\n  );\r\n  const menuItems =\r\n    menu && menu.menu.items ? (\r\n      <Fragment>\r\n        <p className=\"client-menu__categorie\">Entree</p>\r\n        <div className=\"client-menu__sub\">\r\n          {menu.menu.items\r\n            .filter((item) => item.categorie === \"entree\")\r\n            .map((item) => (\r\n              <ClientMenuItem\r\n                key={item._id}\r\n                item={item}\r\n                addToCommand={handleAdd}\r\n              />\r\n            ))}\r\n        </div>\r\n        <p className=\"client-menu__categorie\">Plat</p>\r\n        <div className=\"client-menu__sub\">\r\n          {menu.menu.items\r\n            .filter((item) => item.categorie === \"plat\")\r\n            .map((item) => (\r\n              <ClientMenuItem\r\n                key={item._id}\r\n                item={item}\r\n                addToCommand={handleAdd}\r\n              />\r\n            ))}\r\n        </div>\r\n        <p className=\"client-menu__categorie\">Boisson</p>\r\n        <div className=\"client-menu__sub\">\r\n          {menu.menu.items\r\n            .filter((item) => item.categorie === \"boisson\")\r\n            .map((item) => (\r\n              <ClientMenuItem\r\n                key={item._id}\r\n                item={item}\r\n                addToCommand={handleAdd}\r\n              />\r\n            ))}\r\n        </div>\r\n        <p className=\"client-menu__categorie\">Dessert</p>\r\n        <div className=\"client-menu__sub\">\r\n          {menu.menu.items\r\n            .filter((item) => item.categorie === \"Dessert\")\r\n            .map((item) => (\r\n              <ClientMenuItem\r\n                key={item._id}\r\n                item={item}\r\n                addToCommand={handleAdd}\r\n              />\r\n            ))}\r\n        </div>\r\n      </Fragment>\r\n    ) : (\r\n      // menu.menu.items.map((item) => (\r\n      //   <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\r\n      // ))\r\n      <h5>Loading...</h5>\r\n    );\r\n  return (\r\n    <div className=\"client-menu\">\r\n      <div className=\"client-menu__items\">{menuItems}</div>\r\n      <div className=\"client-menu__nav\">\r\n        {orderLink}\r\n        <button onClick={() => handleButton()}>Order Now</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMenu;\r\n","C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\utils\\image.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddTable\\AddTable.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\Tables\\Tables.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\Workers\\Workers.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\AddWorker\\AddWorker.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js",[],"C:\\Users\\benmo\\Desktop\\prg-css\\menuQR\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js",["204"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./ClientMenuItem.css\";\r\nconst moment = require(\"moment\");\r\n\r\nconst ClientMenuItem = ({ item, addToCommand }) => {\r\n  const [food, setFood] = useState({\r\n    price: 0,\r\n    quantity: 0,\r\n  });\r\n  const { price, quantity } = food;\r\n  useEffect(() => {\r\n    let createdAt = moment().format();\r\n    addToCommand(item.name, quantity, price, createdAt);\r\n  }, [price]);\r\n  const handleAdd = (itemPrice) => {\r\n    setFood({\r\n      ...food,\r\n      quantity: Number(quantity) + 1,\r\n      price: Number(price) + Number(itemPrice),\r\n    });\r\n  };\r\n  const handleRemove = (itemPrice) => {\r\n    if (quantity > 0)\r\n      setFood({\r\n        ...food,\r\n        quantity: Number(quantity) - 1,\r\n        price: Number(price) - Number(itemPrice),\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"client-menu-item\">\r\n      <img src={item.image} alt=\"food\" />\r\n      <div className=\"client-menu-item__group\">\r\n        <p>{item.name}</p>\r\n        <p>{item.price} dt</p>\r\n      </div>\r\n\r\n      <p className=\"client-menu-item__desc\">{item.description}</p>\r\n\r\n      <span className=\"client-menu-item__price\">\r\n        Total: {price > 0 ? price : 0}\r\n      </span>\r\n\r\n      <div className=\"client-menu-item__quantity\">\r\n        <button onClick={() => handleRemove(item.price)}>-</button>\r\n        <span>{quantity}</span>\r\n        <button onClick={() => handleAdd(item.price)}>+</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMenuItem;\r\n",{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","severity":1,"message":"210","line":21,"column":8,"nodeType":"211","messageId":"212","endLine":21,"endColumn":15},{"ruleId":"213","severity":1,"message":"214","line":13,"column":6,"nodeType":"215","endLine":13,"endColumn":8,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":29,"column":11,"nodeType":"219","endLine":29,"endColumn":44},{"ruleId":"209","severity":1,"message":"220","line":16,"column":9,"nodeType":"211","messageId":"212","endLine":16,"endColumn":17},{"ruleId":"213","severity":1,"message":"221","line":43,"column":6,"nodeType":"215","endLine":43,"endColumn":33,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":81,"column":65,"nodeType":"225","messageId":"226","endLine":81,"endColumn":67},{"ruleId":"209","severity":1,"message":"227","line":16,"column":26,"nodeType":"211","messageId":"212","endLine":16,"endColumn":30},{"ruleId":"209","severity":1,"message":"228","line":10,"column":10,"nodeType":"211","messageId":"212","endLine":10,"endColumn":22},{"ruleId":"209","severity":1,"message":"220","line":15,"column":9,"nodeType":"211","messageId":"212","endLine":15,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":35,"column":6,"nodeType":"215","endLine":35,"endColumn":14,"suggestions":"229"},{"ruleId":"217","severity":1,"message":"218","line":49,"column":13,"nodeType":"219","endLine":49,"endColumn":68},{"ruleId":"213","severity":1,"message":"230","line":38,"column":6,"nodeType":"215","endLine":38,"endColumn":8,"suggestions":"231"},{"ruleId":"213","severity":1,"message":"230","line":42,"column":6,"nodeType":"215","endLine":42,"endColumn":16,"suggestions":"232"},{"ruleId":"213","severity":1,"message":"233","line":45,"column":6,"nodeType":"215","endLine":45,"endColumn":8,"suggestions":"234"},{"ruleId":"209","severity":1,"message":"235","line":18,"column":11,"nodeType":"211","messageId":"212","endLine":18,"endColumn":17},{"ruleId":"209","severity":1,"message":"236","line":9,"column":10,"nodeType":"211","messageId":"212","endLine":9,"endColumn":15},{"ruleId":"213","severity":1,"message":"230","line":17,"column":6,"nodeType":"215","endLine":17,"endColumn":16,"suggestions":"237"},{"ruleId":"213","severity":1,"message":"230","line":38,"column":6,"nodeType":"215","endLine":38,"endColumn":16,"suggestions":"238"},{"ruleId":"209","severity":1,"message":"239","line":19,"column":25,"nodeType":"211","messageId":"212","endLine":19,"endColumn":32},{"ruleId":"213","severity":1,"message":"240","line":27,"column":6,"nodeType":"215","endLine":27,"endColumn":8,"suggestions":"241"},{"ruleId":"213","severity":1,"message":"242","line":39,"column":6,"nodeType":"215","endLine":39,"endColumn":13,"suggestions":"243"},{"ruleId":"209","severity":1,"message":"235","line":40,"column":18,"nodeType":"211","messageId":"212","endLine":40,"endColumn":24},{"ruleId":"209","severity":1,"message":"220","line":42,"column":9,"nodeType":"211","messageId":"212","endLine":42,"endColumn":17},{"ruleId":"213","severity":1,"message":"244","line":14,"column":6,"nodeType":"215","endLine":14,"endColumn":13,"suggestions":"245"},"no-native-reassign",["246"],"no-negated-in-lhs",["247"],"no-unused-vars","'MyOrder' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["248"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user.restaurantId'. Either include it or remove the dependency array.",["249"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'code' is assigned a value but never used.","'getOrderById' is defined but never used.",["250"],"React Hook useEffect has a missing dependency: 'restId'. Either include it or remove the dependency array.",["251"],["252"],"React Hook useEffect has missing dependencies: 'dispatch' and 'restId'. Either include them or remove the dependency array.",["253"],"'status' is assigned a value but never used.","'added' is assigned a value but never used.",["254"],["255"],"'orderId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["256"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["257"],"React Hook useEffect has missing dependencies: 'addToCommand', 'item.name', and 'quantity'. Either include them or remove the dependency array. If 'addToCommand' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["258"],"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"263","fix":"267"},{"desc":"263","fix":"268"},{"desc":"263","fix":"269"},{"desc":"263","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},"Update the dependencies array to be: [dispatch]",{"range":"277","text":"278"},"Update the dependencies array to be: [isAuthenticated, dispatch, user.restaurantId]",{"range":"279","text":"280"},"Update the dependencies array to be: [dispatch, restId]",{"range":"281","text":"282"},"Update the dependencies array to be: [restId]",{"range":"283","text":"284"},{"range":"285","text":"282"},{"range":"286","text":"282"},{"range":"287","text":"282"},{"range":"288","text":"282"},"Update the dependencies array to be: [dispatch, values]",{"range":"289","text":"290"},"Update the dependencies array to be: [items, values]",{"range":"291","text":"292"},"Update the dependencies array to be: [addToCommand, item.name, price, quantity]",{"range":"293","text":"294"},[416,418],"[dispatch]",[1434,1461],"[isAuthenticated, dispatch, user.restaurantId]",[1198,1206],"[dispatch, restId]",[1158,1160],"[restId]",[1284,1294],[1361,1363],[575,585],[1094,1104],[763,765],"[dispatch, values]",[1086,1093],"[items, values]",[415,422],"[addToCommand, item.name, price, quantity]"]