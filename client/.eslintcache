[{"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\index.js":"1","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\App.js":"2","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\serviceWorker.js":"3","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\app\\store.js":"4","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"6","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\Navbar\\Navbar.js":"7","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ScanCode\\ScanCode.js":"8","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\PrivateRoute\\ClientRoute.js":"9","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\Home\\Home.js":"10","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\SignIn\\SignIn.js":"11","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\ClientPage\\ClientPage.js":"12","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\AdminSection\\AdminSection.js":"13","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\WorkerSection\\WorkerSection.js":"14","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\OwnerSection\\OwnerSection.js":"15","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\MyOrder\\MyOrder.js":"16","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\authSlice.js":"17","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\ownerSlice.js":"18","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\adminSlice.js":"19","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\tableSlice.js":"20","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\menuSlice.js":"21","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\orderSlice.js":"22","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\staffSlice.js":"23","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\utils\\scroll.js":"24","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddOwner\\AddOwner.js":"25","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ClientMenu\\ClientMenu.js":"26","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\OwnerList\\OwnerList.js":"27","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js":"28","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\OrderList\\OrderList.js":"29","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\Menu\\Menu.js":"30","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\StaffList\\StaffList.js":"31","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddMenu\\AddMenu.js":"32","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\RestaurantList\\RestaurantList.js":"33","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\TableList\\TableList.js":"34","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js":"35","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\utils\\image.js":"36","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js":"37","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js":"38","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddTable\\AddTable.js":"39","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\Tables\\Tables.js":"40","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddWorker\\AddWorker.js":"41","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\Workers\\Workers.js":"42"},{"size":623,"mtime":1611084903821,"results":"43","hashOfConfig":"44"},{"size":1731,"mtime":1611084903757,"results":"45","hashOfConfig":"44"},{"size":5004,"mtime":1611084903872,"results":"46","hashOfConfig":"44"},{"size":629,"mtime":1611084903810,"results":"47","hashOfConfig":"44"},{"size":254,"mtime":1611084903875,"results":"48","hashOfConfig":"44"},{"size":575,"mtime":1611084903793,"results":"49","hashOfConfig":"44"},{"size":4047,"mtime":1611084903785,"results":"50","hashOfConfig":"44"},{"size":1778,"mtime":1611175530017,"results":"51","hashOfConfig":"44"},{"size":555,"mtime":1611084903792,"results":"52","hashOfConfig":"44"},{"size":4795,"mtime":1611084903829,"results":"53","hashOfConfig":"44"},{"size":2614,"mtime":1611170882675,"results":"54","hashOfConfig":"44"},{"size":1909,"mtime":1611257244644,"results":"55","hashOfConfig":"44"},{"size":1272,"mtime":1611084903824,"results":"56","hashOfConfig":"44"},{"size":3463,"mtime":1611176002466,"results":"57","hashOfConfig":"44"},{"size":2518,"mtime":1611170399347,"results":"58","hashOfConfig":"44"},{"size":1148,"mtime":1611084903860,"results":"59","hashOfConfig":"44"},{"size":2584,"mtime":1611084903813,"results":"60","hashOfConfig":"44"},{"size":3997,"mtime":1611084903817,"results":"61","hashOfConfig":"44"},{"size":2525,"mtime":1611084903812,"results":"62","hashOfConfig":"44"},{"size":2327,"mtime":1611084903818,"results":"63","hashOfConfig":"44"},{"size":3152,"mtime":1611084903814,"results":"64","hashOfConfig":"44"},{"size":4134,"mtime":1611084903816,"results":"65","hashOfConfig":"44"},{"size":2370,"mtime":1611170710409,"results":"66","hashOfConfig":"44"},{"size":359,"mtime":1611084903874,"results":"67","hashOfConfig":"44"},{"size":3296,"mtime":1611084903762,"results":"68","hashOfConfig":"44"},{"size":4721,"mtime":1611344924151,"results":"69","hashOfConfig":"44"},{"size":838,"mtime":1611084903790,"results":"70","hashOfConfig":"44"},{"size":1380,"mtime":1611345991767,"results":"71","hashOfConfig":"44"},{"size":3346,"mtime":1611084903788,"results":"72","hashOfConfig":"44"},{"size":1427,"mtime":1611346260181,"results":"73","hashOfConfig":"44"},{"size":995,"mtime":1611170653114,"results":"74","hashOfConfig":"44"},{"size":4894,"mtime":1611351968508,"results":"75","hashOfConfig":"44"},{"size":5165,"mtime":1611084903796,"results":"76","hashOfConfig":"44"},{"size":976,"mtime":1611169790112,"results":"77","hashOfConfig":"44"},{"size":3587,"mtime":1611084903765,"results":"78","hashOfConfig":"44"},{"size":303,"mtime":1611084903873,"results":"79","hashOfConfig":"44"},{"size":2277,"mtime":1611263194132,"results":"80","hashOfConfig":"44"},{"size":2703,"mtime":1611346910529,"results":"81","hashOfConfig":"44"},{"size":1180,"mtime":1611169595362,"results":"82","hashOfConfig":"44"},{"size":726,"mtime":1611169550220,"results":"83","hashOfConfig":"44"},{"size":1562,"mtime":1611170843059,"results":"84","hashOfConfig":"44"},{"size":822,"mtime":1611084903809,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"19v0ov0",{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"88"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"88"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"88"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\index.js",[],["184","185"],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\App.js",["186"],"import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport PrivateRoute from \"./Components/PrivateRoute/PrivateRoute\";\nimport ClientRoute from \"./Components/PrivateRoute/ClientRoute\";\nimport Home from \"./pages/Home/Home\";\nimport Navbar from \"./Components/Navbar/Navbar\";\n\nimport SignIn from \"./pages/SignIn/SignIn\";\nimport ScanCode from \"./Components/ScanCode/ScanCode\";\nimport \"./App.css\";\nimport AdminSection from \"./pages/AdminSection/AdminSection\";\nimport OwnerSection from \"./pages/OwnerSection/OwnerSection\";\nimport WorkerSection from \"./pages/WorkerSection/WorkerSection\";\nimport ClientPage from \"./pages/ClientPage/ClientPage\";\nimport MyOrder from \"./pages/MyOrder/MyOrder\";\n\nfunction App() {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  return (\n    <div className=\"app\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/signin\">\n            <SignIn />\n          </Route>\n          <Route exact path=\"/scan-code\">\n            <ScanCode />\n          </Route>\n          <ClientRoute path=\"/client-page\">\n            <ClientPage />\n          </ClientRoute>\n\n          <PrivateRoute exact path=\"/admin-section\">\n            <AdminSection />\n          </PrivateRoute>\n          <PrivateRoute path=\"/owner-section\">\n            <OwnerSection />\n          </PrivateRoute>\n          <PrivateRoute path=\"/worker-section\">\n            <WorkerSection />\n          </PrivateRoute>\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\serviceWorker.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\app\\store.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\Navbar\\Navbar.js",["187"],"import React, { Fragment, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { logout } from '../../features/authSlice';\nimport { useLocation } from 'react-router-dom';\nimport { HiMenuAlt3 } from 'react-icons/hi';\nimport { MdRestaurantMenu } from 'react-icons/md';\nimport { IconContext } from 'react-icons';\nimport ScrollComponent from '../../utils/scroll';\nimport './Navbar.css';\n\nconst Navbar = () => {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const dispatch = useDispatch();\n  const location = useLocation();\n\n  const isAuth = useSelector((state) => state.auth.isAuthenticated);\n  const isClient = useSelector((state) => state.auth.isClient);\n  const user = useSelector((state) => state.auth.user);\n  const handleLog = () => {\n    dispatch(logout());\n  };\n\n  const adminMenu = (\n    <Fragment>\n      <Link to='/admin-section'>\n        <span className='navbar__link'>Home</span>\n      </Link>\n      <Link to='/'>\n        <span className='navbar__link' onClick={handleLog}>\n          Déconnexion\n        </span>\n      </Link>\n    </Fragment>\n  );\n  const ownerMenu = (\n    <Fragment>\n      <Link to='/owner-section'>\n        <span className='navbar__link'>Home</span>\n      </Link>\n      <Link to='/'>\n        <span className='navbar__link' onClick={handleLog}>\n          Déconnexion\n        </span>\n      </Link>\n    </Fragment>\n  );\n  const homeMenu = (\n    <Fragment>\n      <Link to='/'>\n        <span className='navbar__link' onClick={closeMobileMenu}>\n          Home\n        </span>\n      </Link>\n      <div\n        className={click ? 'navbar__first-menu active' : 'navbar__first-menu'}\n        onClick={closeMobileMenu}>\n        <ScrollComponent section='sect1'>\n          <span className='navbar__link' onClick={closeMobileMenu}>\n            fonctionnement\n          </span>\n        </ScrollComponent>\n\n        <ScrollComponent section='sect2'>\n          <span className='navbar__link' onClick={closeMobileMenu}>\n            avantages\n          </span>\n        </ScrollComponent>\n        <ScrollComponent section='sect3'>\n          <span className='navbar__link' onClick={closeMobileMenu}>\n            adhérents\n          </span>\n        </ScrollComponent>\n        <ScrollComponent section='sect1'>\n          <span className='navbar__link' onClick={closeMobileMenu}>\n            Nous contacter\n          </span>\n        </ScrollComponent>\n      </div>\n      <div className='navbar__second-menu'>\n        <Link to='/signin' onClick={closeMobileMenu}>\n          <span className='navbar__link'>se connecter</span>\n        </Link>\n        <div className='mobile-menu' onClick={handleClick}>\n          {click ? (\n            <IconContext.Provider value={{ className: 'menu-icon' }}>\n              <div>\n                <MdRestaurantMenu />\n              </div>\n            </IconContext.Provider>\n          ) : (\n            <IconContext.Provider value={{ className: 'menu-icon' }}>\n              <div>\n                <HiMenuAlt3 />\n              </div>\n            </IconContext.Provider>\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n  const clientMenu = (\n    <Fragment>\n      <Link to='/client-page'>\n        <span className='navbar__link'>Menu</span>\n      </Link>\n      <Link to='/'>\n        <span className='navbar__link'>Deconnexion</span>\n      </Link>\n    </Fragment>\n  );\n  const workerMenu = (\n    <Fragment>\n      <Link to='/worker-section'>\n        <span className='navbar__link active'>Home</span>\n      </Link>\n      <Link to='/'>\n        <span className='navbar__link' onClick={handleLog}>\n          Déconnexion\n        </span>\n      </Link>\n    </Fragment>\n  );\n  const navMenu = isAuth\n    ? user.role === 'owner'\n      ? ownerMenu\n      : user.role === 'admin'\n      ? adminMenu\n      : workerMenu\n    : isClient\n    ? clientMenu\n    : homeMenu;\n\n  return <div className='navbar'>{navMenu}</div>;\n};\n\nexport default Navbar;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ScanCode\\ScanCode.js",["188","189","190","191","192"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { authClient } from \"../../features/authSlice\";\nimport QrReader from \"react-qr-scanner\";\nimport \"./ScanCode.css\";\n\nconst ScanCode = () => {\n  const dispatch = useDispatch();\n\n  const [values, setValues] = useState({\n    delay: 100,\n    result: null,\n    code: \"\",\n  });\n  const { delay, result, code } = values;\n  const handleScan = (data) => {\n    setValues({ ...values, result: data });\n  };\n  const handleError = (err) => {\n    console.error(err);\n  };\n  const previewStyle = {\n    height: 320,\n    width: 240,\n  };\n  const handleInput = (e) => {\n    setValues({ ...values, code: e.target.value });\n  };\n  const handleSubmit = () => {\n    setValues({ ...values, result: code });\n  };\n\n  if (result) {\n    dispatch(authClient(result.split(\"+\")[0], result.split(\"+\")[1]));\n    localStorage.setItem(\"restId\", result.split(\"+\")[0]);\n    localStorage.setItem(\"tableNumber\", result.split(\"+\")[1]);\n    return (\n      <Redirect\n        to={{\n          pathname: \"/client-page\",\n          state: {\n            restId: result.split(\"+\")[0],\n            tableNumber: result.split(\"+\")[1],\n          },\n        }}\n      />\n    );\n  }\n  return (\n    <div className=\"code\">\n      <div className=\"reader\">\n        {/* <QrReader\n          delay={delay}\n          style={previewStyle}\n          onError={handleError}\n          onScan={handleScan}\n        /> */}\n      </div>\n      <input\n        size=\"50\"\n        className=\"test\"\n        type=\"text\"\n        name=\"code\"\n        value={code}\n        onChange={handleInput}\n      />\n      <button onClick={handleSubmit}>confirm</button>\n      <h1>{result}</h1>\n    </div>\n  );\n};\n\nexport default ScanCode;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\PrivateRoute\\ClientRoute.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\Home\\Home.js",["193","194"],"import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { clearClient } from \"../../features/authSlice\";\nimport { Link } from \"react-router-dom\";\nimport { FiCheckCircle } from \"react-icons/fi\";\nimport { IconContext } from \"react-icons\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(clearClient());\n  }, []);\n  return (\n    <div className=\"home\">\n      <div className=\"home__content\">\n        <div className=\"home__content__left\">\n          <h2>Digitalisez vos cartes! </h2>\n          <p>\n            XXXX permet l'affichage dynamique et interactif de votre carte, vous\n            pouvez gérer en quelques clics vos plats, menu, dessert et tous se\n            met à jour automatiquement ...\n          </p>\n          <Link to=\"/scan-code\">\n            <button className=\"home__content__btn\">Notre Menu </button>\n          </Link>\n        </div>\n        <div className=\"scan\">\n          <img src=\"images/bg-light.png\" />\n        </div>\n      </div>\n      <div className=\"home__sante\">\n        <p>Votre santé est une priorité !</p>\n        <p>\n          digitMenu a été conçue afin de garantir autant que possible votre\n          santé et celle de vos clients!\n        </p>\n        <img src=\"images/Codiv-19.png\" alt=\"\" />\n      </div>\n      <section className=\"home__fonct\" id=\"sect1\">\n        <h4>Utilisation simple et efficace sans installation :</h4>\n        <div className=\"home__fonct__step\">\n          <IconContext.Provider value={{ className: \"check-icon\" }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>\n            Le consommateur a juste besoin de scanner un QR code affiché sur vos\n            tables\n          </p>\n        </div>\n        <div className=\"home__fonct__step\">\n          <IconContext.Provider value={{ className: \"check-icon\" }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>\n            Il est alors redirigé automatiquement vers votre carte dématérialisé\n          </p>\n        </div>\n        <div className=\"home__fonct__step\">\n          <IconContext.Provider value={{ className: \"check-icon\" }}>\n            <div>\n              <FiCheckCircle />\n            </div>\n          </IconContext.Provider>\n          <p>la commande est prise sans le moindre contact</p>\n        </div>\n        <div className=\"home__fonct__img\">\n          <img src=\"images/img1.png\" alt=\"\" />\n\n          <img src=\"images/img2.png\" alt=\"\" />\n          <img src=\"images/img3.png\" alt=\"\" />\n        </div>\n      </section>\n      <div className=\"block\">\n        <p>lkjkljjjjjjjjjjjjj</p>\n      </div>\n\n      <section className=\"home__avantages\" id=\"sect2\">\n        <p>\n          En plus du respect des gestes barrières et du nouveau mode de vie que\n          nous devons adopter, le menu digital pour votre restaurant vous permet\n          de mettre à jour en temps réel votre carte et d'offrir une expérience\n          unique à vos clients.\n        </p>\n        <p>\n          Consacrez-vous à votre art et ne gaspillez pas votre temps et votre\n          énergie à désinfecter vos cartes pour chaque nouveau client. DigitMenu\n          est une solution rapide, économique, qui respecte les gestes barrières\n          pour vous libérer.\n        </p>\n        <p>\n          Toutes les mises à jour de votre menu digital restaurant sont\n          immédiatement visibles par vos clients. Un plat caché par suite d’une\n          rupture de stock ou d'un problème en cuisine, un visuel à changer, un\n          prix à adapter...le menu visible par vos clients est à jour, votre\n          service est très largement amélioré.\n        </p>\n        <p>\n          {\" \"}\n          Vous limitez votre impact sur la nature en évitant les réimpressions\n          régulières de vos cartes. Vous ne gaspillez plus de papier et vous\n          diminuez vos déchets pour vous inscrire dans une démarche\n          écoresponsable.\n        </p>\n      </section>\n      <section className=\"home__adher\" id=\"sect3\">\n        <h1> Les adhérents </h1>\n\n        <div className=\"home__adher__items\">\n          <img\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6bMxzzhbJr9D94CZ-WUGbxptM9EAHmLmmnA&usqp=CAU\"\n            alt=\"\"\n          />\n\n          <img\n            src=\"https://scontent.ftun7-1.fna.fbcdn.net/v/t1.0-9/21752455_1605310829489573_1413294409926454312_n.jpg?_nc_cat=101&ccb=2&_nc_sid=09cbfe&_nc_ohc=hWNGwNDsNe4AX-2Qdii&_nc_ht=scontent.ftun7-1.fna&oh=3859edb4b4b56564621a835cb8839ba7&oe=602BA403\"\n            alt=\"\"\n          />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\SignIn\\SignIn.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\ClientPage\\ClientPage.js",["195","196","197","198"],"import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport openSocket from \"socket.io-client\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport ClientMenu from \"../../Components/ClientMenu/ClientMenu\";\nimport MyOrder from \"../MyOrder/MyOrder\";\nimport { getMenuByRest } from \"../../features/menuSlice\";\nimport { getOrderById } from \"../../features/orderSlice\";\nimport \"./ClientPage.css\";\n\nconst ClientPage = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const restId = localStorage.getItem(\"restId\");\n  useEffect(() => {\n    dispatch(getMenuByRest(restId));\n  }, [dispatch, restId]);\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    if (restId) socket.emit(\"joinRoom\", { restId });\n    socket.on(\"newMenu\", (data) => {\n      console.log(\"newmenu\", data);\n      dispatch(getMenuByRest(restId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [restId]);\n\n  const { menu, status } = useSelector((state) => state.menu);\n  const clientMenu =\n    status === \"succeded\" && menu ? (\n      <ClientMenu menu={menu} restaurantId={restId} />\n    ) : (\n      <h5>Loading...</h5>\n    );\n  return (\n    <div className=\"client-section\">\n      <Switch>\n        <Route exact path=\"/client-page\">\n          <div className=\"client-section__info\">\n            <h2>Menu</h2>\n\n            <img src={\"/\" + (menu && menu.menu.restaurant.logo)} />\n            <h2>{menu && menu.menu.restaurant.name}</h2>\n          </div>\n          {clientMenu}\n        </Route>\n        <Route exact path=\"/client-page/order\">\n          <MyOrder />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default ClientPage;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\AdminSection\\AdminSection.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\WorkerSection\\WorkerSection.js",["199","200"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./WorkerSection.css\";\nimport { getAllOrders, checkoutOrder } from \"../../features/orderSlice\";\nimport { getTables } from \"../../features/tableSlice\";\nimport openSocket from \"socket.io-client\";\nimport moment from \"moment\";\n\nconst WorkerSection = () => {\n  const [filterBy, setFilterBy] = useState(\"\");\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    if (user) {\n      socket.emit(\"joinRoom\", { restId: user.restaurantId });\n      console.log(\"restid\", user.restaurantId);\n    }\n    socket.on(\"hi\", (data) => {\n      console.log(\"from server\", data);\n    });\n    socket.on(\"message\", (data) => {\n      console.log(\"new order------------\", data);\n\n      dispatch(getAllOrders(user.restaurantId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [dispatch, user]);\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getTables(user.restaurantId));\n      dispatch(getAllOrders(user.restaurantId));\n    }\n  }, [isAuthenticated, dispatch]);\n  const { listTable } = useSelector((state) => state.table);\n  useEffect(() => {\n    if (listTable) setFilterBy(listTable[0].tableNumber);\n  }, [listTable]);\n  const { orders, status } = useSelector((state) => state.order);\n\n  const handleChange = (e) => {\n    setFilterBy(e.target.value);\n  };\n  const handleClick = (id) => {\n    dispatch(checkoutOrder({ orderId: id }));\n    dispatch(getAllOrders(user.restaurantId));\n  };\n  return (\n    <div className=\"worker\">\n      <h2>List of orders</h2>\n      <div className=\"worker__tables\">\n        <p>Select Your Table</p>\n        <select name=\"filterBy\" onChange={handleChange}>\n          {listTable &&\n            listTable.map((tab, i) => (\n              <option key={tab._id} defaultValue value={tab.tableNumber}>\n                table {tab.tableNumber}\n              </option>\n            ))}\n        </select>\n      </div>\n      <div className=\"worker__content\">\n        {status !== \"loading\" &&\n          orders &&\n          // filterBy &&\n          orders\n            // .filter((order) => order.tableNumber == filterBy && !order.paid)\n            .filter((order) => !order.paid && order.tableNumber == filterBy)\n            .map((order) => (\n              <div className=\"worker__orders\" key={order._id}>\n                {order.items.map((item) => (\n                  <div className=\"worker__orders__items\" key={item._id}>\n                    <div className=\"worker__orders__items__info\">\n                      <p>{item.name}</p>\n                      <p>{item.quantity}</p>\n                    </div>\n                    <span className=\"comment\">{item.comment}</span>\n                    <span className=\"timeline\">\n                      {/* {moment(item.updatedAt).startOf('minute').fromNow()} */}\n                      {moment(item.createdAt).fromNow()}\n                    </span>\n                  </div>\n                ))}\n                <button onClick={() => handleClick(order._id)}>\n                  Checkout order\n                </button>\n              </div>\n            ))}\n      </div>\n    </div>\n  );\n};\n\nexport default WorkerSection;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\OwnerSection\\OwnerSection.js",["201"],"import React, { useEffect, useState } from \"react\";\nimport openSocket from \"socket.io-client\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getRestList } from \"../../features/ownerSlice\";\nimport AddRestaurant from \"../../Components/AddRestaurant/AddRestaurant\";\nimport RestaurantList from \"../../Components/RestaurantList/RestaurantList\";\nimport AddMenu from \"../../Components/AddMenu/AddMenu\";\nimport TableList from \"../../Components/TableList/TableList\";\nimport StaffList from \"../../Components/StaffList/StaffList\";\nimport OrderList from \"../../Components/OrderList/OrderList\";\nimport Menu from \"../Menu/Menu\";\nimport \"./OwnerSection.css\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport MyRestaurant from \"../MyRestaurant/MyRestaurant\";\nimport { set } from \"mongoose\";\n\nconst OwnerSection = () => {\n  const [channel, setChannel] = useState(null);\n  const { isAuthenticated } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (isAuthenticated) {\n      dispatch(getRestList());\n    }\n  }, [isAuthenticated, dispatch]);\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/owner-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n    setChannel(socket);\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    socket.on(\"hi\", (data) => {\n      console.log(\"from server\", data);\n    });\n    socket.on(\"restaurants\", (data) => {\n      console.log(\"from server\", data.action);\n      dispatch(getRestList());\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [dispatch]);\n  const { restList } = useSelector((state) => state.owner);\n  return (\n    <div className=\"owner\">\n      <Switch>\n        <Route exact path=\"/owner-section\">\n          <AddRestaurant />\n          <RestaurantList restaurants={restList} />\n        </Route>\n        <Route exact path=\"/owner-section/menu\">\n          <AddMenu />\n        </Route>\n        <Route exact path=\"/owner-section/rest-menu\">\n          <Menu />\n        </Route>\n        <Route exact path=\"/owner-section/my-rest\">\n          <MyRestaurant />\n        </Route>\n        <Route exact path=\"/owner-section/tables\">\n          <TableList channel={channel} />\n        </Route>\n        <Route exact path=\"/owner-section/staff\">\n          <StaffList channel={channel} />\n        </Route>\n        <Route exact path=\"/owner-section/orders\">\n          <OrderList />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default OwnerSection;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\MyOrder\\MyOrder.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\authSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\ownerSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\adminSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\tableSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\menuSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\orderSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\features\\staffSlice.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\utils\\scroll.js",["202"],"import React from \"react\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\n\nconst ScrollComponent = (props) => {\n  return (\n    <Link\n      activeClass=\"active\"\n      to={props.section}\n      spy={true}\n      smooth={true}\n      offset={-70}\n      duration={500}\n    >\n      {props.children}\n    </Link>\n  );\n};\n\nexport default ScrollComponent;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddOwner\\AddOwner.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ClientMenu\\ClientMenu.js",["203","204","205","206","207"],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\OwnerList\\OwnerList.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\OrderList\\OrderList.js",["208","209"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getAllOrders } from \"../../features/orderSlice\";\nimport openSocket from \"socket.io-client\";\nimport \"./OrderList.css\";\nimport moment from \"moment\";\n\nconst OrderList = () => {\n  const [paid, setPaid] = useState(false);\n  const [filterDate, setFilterDate] = useState({\n    today: moment().format(),\n    filterByDate: false,\n  });\n  const { today, filterByDate } = filterDate;\n  const location = useLocation();\n  const { restId } = location.state;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    let socket = openSocket(\"http://localhost:5000/restaurant-space\", {\n      transports: [\"websocket\", \"polling\"],\n    });\n\n    socket.on(\"connect\", () => {\n      console.log(socket.id);\n    });\n    if (restId) {\n      socket.emit(\"joinRoom\", { restId: restId });\n      console.log(\"restid\", restId);\n    }\n    socket.on(\"hi\", (data) => {\n      console.log(\"from server\", data);\n    });\n    socket.on(\"message\", (data) => {\n      console.log(\"new order------------\", data);\n\n      dispatch(getAllOrders(restId));\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, [dispatch]);\n  useEffect(() => {\n    dispatch(getAllOrders(restId));\n  }, []);\n  const { orders, status } = useSelector((state) => state.order);\n  const handleFilter = (filterBy) => {\n    setPaid(filterBy);\n  };\n  const handleDate = () => {\n    setFilterDate({ ...filterDate, filterByDate: !filterByDate });\n  };\n\n  return (\n    <div className=\"orders\">\n      <h2>List of Orders</h2>\n      <div className=\"orders__buttons\">\n        <button\n          className={\n            !paid ? \"orders__buttons--active\" : \"orders__buttons--normal\"\n          }\n          onClick={() => handleFilter(false)}\n        >\n          Non Payé\n        </button>\n        <button\n          className={\n            paid ? \"orders__buttons--active\" : \"orders__buttons--normal\"\n          }\n          onClick={() => handleFilter(true)}\n        >\n          Payé\n        </button>\n        <button\n          className={\n            filterByDate ? \"orders__buttons--active\" : \"orders__buttons--normal\"\n          }\n          onClick={handleDate}\n        >\n          Today's orders\n        </button>\n      </div>\n\n      {status === \"succeded\" &&\n        orders &&\n        orders\n          .filter(\n            (order) =>\n              order.paid === paid &&\n              (filterByDate\n                ? moment(order.createdAt).isSame(today, \"day\")\n                : moment(order.createdAt).isBefore(today, \"day\"))\n          )\n          .map((order) => (\n            <div className=\"orders__items\" key={order._id}>\n              <p>Table {order.tableNumber}</p>\n              {order.items.map((item) => (\n                <div className=\"orders__items__single\" key={item._id}>\n                  <div className=\"orders__items__info\">\n                    <p>{item.name}</p>\n                    <p>{item.quantity}</p>\n                  </div>\n                  <p className=\"orders__items__time\">\n                    {moment(item.createdAt).fromNow()}\n                  </p>\n                </div>\n              ))}\n              <p>Total : {order.total}</p>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default OrderList;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\pages\\Menu\\Menu.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\StaffList\\StaffList.js",["210","211","212"],"import React, { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport openSocket from \"socket.io-client\";\n\nimport AddWorker from \"../AddWorker/AddWorker\";\nimport Workers from \"../Workers/Workers\";\nimport { getAllWorkers } from \"../../features/staffSlice\";\nimport \"./StaffList.css\";\n\nconst StaffList = ({ channel }) => {\n  const location = useLocation();\n  const { restId } = location.state;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getAllWorkers(restId));\n  }, [dispatch]);\n  const { workers } = useSelector((state) => state.staff);\n  useEffect(() => {\n    if (channel) {\n      channel.on(\"workers\", (data) => {\n        console.log(\"workers\", data.action);\n        dispatch(getAllWorkers(restId));\n      });\n    }\n  }, [channel]);\n\n  return (\n    <div className=\"staff\">\n      <AddWorker restId={restId} />\n      <Workers list={workers} />\n    </div>\n  );\n};\n\nexport default StaffList;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddMenu\\AddMenu.js",["213","214"],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\RestaurantList\\RestaurantList.js",["215"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteRestaurant, editRestaurant } from \"../../features/ownerSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { generateBase64FromImage } from \"../../utils/image\";\nimport \"./RestaurantList.css\";\n\nconst RestaurantList = ({ restaurants }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    image: \"\",\n    preview: \"\",\n    address: \"\",\n    edit: false,\n  });\n  const { name, image, preview, address, edit } = values;\n  const dispatch = useDispatch();\n  const { status, errors } = useSelector((state) => state.owner);\n  const handleDelete = (id) => {\n    dispatch(deleteRestaurant({ restId: id }));\n  };\n  const handleFile = (e) => {\n    const file = e.target.files[0];\n    if (file)\n      generateBase64FromImage(file)\n        .then((b64) => {\n          setValues({ ...values, image: file, preview: b64 });\n        })\n        .catch((e) => {\n          setValues({ ...values, preview: null });\n        });\n  };\n  const handleData = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleEdit = (rest) => {\n    if (!edit) {\n      setValues({\n        name: rest.name,\n        address: rest.address,\n        edit: true,\n      });\n    } else {\n      let formData = new FormData();\n      formData.append(\"name\", name);\n      formData.append(\"address\", address);\n      formData.append(\"image\", image);\n      formData.append(\"restId\", rest._id);\n      formData.append(\"lastImg\", rest.logo);\n\n      dispatch(editRestaurant(formData));\n      setValues({ ...values, edit: false, preview: null });\n    }\n  };\n\n  return (\n    <div className=\"restlist\">\n      <h3>List fo Restaurants</h3>\n      {restaurants && restaurants.length > 0 ? (\n        restaurants.map((rest) => (\n          <div className=\"restlist__item\" key={rest._id}>\n            <div className=\"restlist__item__form\">\n              <div className=\"restlist__item__form__group\">\n                <h5>The restaurant</h5>\n                <span>\n                  {errors &&\n                    errors.data.filter((err) => err.param === \"nameedit\")[0] &&\n                    errors.data.filter((err) => err.param === \"nameedit\")[0]\n                      .msg}\n                </span>\n                {edit ? (\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleData}\n                  />\n                ) : (\n                  <p>{rest.name}</p>\n                )}\n              </div>\n              <div className=\"restlist__item__form__group\">\n                <h5>The Address</h5>\n                {edit ? (\n                  <input\n                    type=\"text\"\n                    name=\"address\"\n                    value={address}\n                    onChange={handleData}\n                  />\n                ) : (\n                  <p>{rest.address}</p>\n                )}\n              </div>\n              <div className=\"restlist__item__form__group\">\n                <h5>Logo</h5>\n                {edit ? (\n                  <input type=\"file\" name=\"image\" onChange={handleFile} />\n                ) : (\n                  <img className=\"image-prev\" src={rest.logo} alt=\"\" />\n                )}\n                {preview && (\n                  <img className=\"image-prev\" src={preview} alt=\" \" />\n                )}\n              </div>\n              <div className=\"restlist__item__form__button\">\n                <button onClick={() => handleDelete(rest._id)}>Delete</button>\n                <button onClick={() => handleEdit(rest)}>Edit</button>\n              </div>\n              <div className=\"restlist__item__form__links\">\n                <Link\n                  to={{\n                    pathname: \"/owner-section/my-rest\",\n                    state: {\n                      restId: rest._id,\n                      logo: rest.logo,\n                      restName: rest.name,\n                    },\n                  }}\n                >\n                  <p>Menu</p>\n                </Link>\n                <Link\n                  to={{\n                    pathname: \"/owner-section/staff\",\n                    state: {\n                      restId: rest._id,\n                    },\n                  }}\n                >\n                  <p>Staff</p>\n                </Link>\n                <Link\n                  to={{\n                    pathname: \"/owner-section/orders\",\n                    state: {\n                      restId: rest._id,\n                    },\n                  }}\n                >\n                  <p>Orders</p>\n                </Link>\n                <Link\n                  to={{\n                    pathname: \"/owner-section/tables\",\n                    state: {\n                      restId: rest._id,\n                    },\n                  }}\n                >\n                  <p>Tables</p>\n                </Link>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <h5>you have no restaurants</h5>\n      )}\n    </div>\n  );\n};\n\nexport default RestaurantList;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\TableList\\TableList.js",["216","217"],"import React, { useEffect, useState } from \"react\";\nimport AddTable from \"../AddTable/AddTable\";\nimport Tables from \"../Tables/Tables\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { getTables } from \"../../features/tableSlice\";\nimport \"./TableList.css\";\nconst TableList = ({ channel }) => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { restId } = location.state;\n  useEffect(() => {\n    dispatch(getTables(restId));\n  }, [dispatch, restId]);\n  useEffect(() => {\n    if (channel) {\n      channel.on(\"tables\", (data) => {\n        console.log(\"tables\", data.action);\n        dispatch(getTables(restId));\n      });\n    }\n  }, [channel]);\n\n  const { listTable } = useSelector((state) => state.table);\n  return (\n    <div className=\"table-list\">\n      <AddTable restId={restId} tables={listTable} />\n      <Tables tables={listTable} />\n    </div>\n  );\n};\n\nexport default TableList;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\utils\\image.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js",["218"],"import React, { useState, useEffect } from \"react\";\nimport \"./ClientMenuItem.css\";\nconst moment = require(\"moment\");\n\nconst ClientMenuItem = ({ item, addToCommand }) => {\n  const [showInput, setShowInput] = useState(false);\n  const [food, setFood] = useState({\n    price: 0,\n    quantity: 0,\n    comment: \"\",\n  });\n  const { price, quantity, comment } = food;\n  useEffect(() => {\n    let createdAt = moment().format();\n    addToCommand(item.name, quantity, price, comment, createdAt);\n  }, [price]);\n  const handleAdd = (itemPrice) => {\n    setFood({\n      ...food,\n      quantity: Number(quantity) + 1,\n      price: Number(price) + Number(itemPrice),\n    });\n  };\n  const handleComment = (e) => {\n    setFood({ ...food, comment: e.target.value });\n  };\n  const handleShow = () => {\n    setShowInput(!showInput);\n  };\n  const handleRemove = (itemPrice) => {\n    if (quantity > 0)\n      setFood({\n        ...food,\n        quantity: Number(quantity) - 1,\n        price: Number(price) - Number(itemPrice),\n      });\n  };\n  return (\n    <div className=\"client-menu-item\">\n      <div className=\"client-menu-item__group\">\n        <img src={item.image} alt=\"food\" />\n        <div className=\"client-menu-item__info\">\n          <p>{item.name}</p>\n          <p>{item.price} dt</p>\n          <span className=\"client-menu-item__price\">\n            Total: {price > 0 ? price : 0}\n          </span>\n        </div>\n      </div>\n\n      <p className=\"client-menu-item__desc\">{item.description}</p>\n\n      <div className=\"client-menu-item__buttons\">\n        <button\n          className=\"client-menu-item__button\"\n          onClick={() => handleRemove(item.price)}\n        >\n          -\n        </button>\n        <span>{quantity}</span>\n        <button\n          className=\"client-menu-item__button\"\n          onClick={() => handleAdd(item.price)}\n        >\n          +\n        </button>\n      </div>\n      <div className=\"client-menu-item__comment\">\n        <button className=\"comment__button\" onClick={handleShow}>\n          ajouter un commentaire\n        </button>\n        {showInput && (\n          <textarea value={comment} onChange={handleComment} rows=\"3\" cols=\"20\">\n            commentaire..\n          </textarea>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ClientMenuItem;\n","C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js",["219"],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddTable\\AddTable.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\Tables\\Tables.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\AddWorker\\AddWorker.js",[],"C:\\Users\\benmo\\Desktop\\version-preFinal\\DigitMenu\\client\\src\\Components\\Workers\\Workers.js",[],{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":21,"column":8,"nodeType":"226","messageId":"227","endLine":21,"endColumn":15},{"ruleId":"224","severity":1,"message":"228","line":17,"column":9,"nodeType":"226","messageId":"227","endLine":17,"endColumn":17},{"ruleId":"224","severity":1,"message":"229","line":5,"column":8,"nodeType":"226","messageId":"227","endLine":5,"endColumn":16},{"ruleId":"224","severity":1,"message":"230","line":16,"column":11,"nodeType":"226","messageId":"227","endLine":16,"endColumn":16},{"ruleId":"224","severity":1,"message":"231","line":17,"column":9,"nodeType":"226","messageId":"227","endLine":17,"endColumn":19},{"ruleId":"224","severity":1,"message":"232","line":20,"column":9,"nodeType":"226","messageId":"227","endLine":20,"endColumn":20},{"ruleId":"224","severity":1,"message":"233","line":23,"column":9,"nodeType":"226","messageId":"227","endLine":23,"endColumn":21},{"ruleId":"234","severity":1,"message":"235","line":13,"column":6,"nodeType":"236","endLine":13,"endColumn":8,"suggestions":"237"},{"ruleId":"238","severity":1,"message":"239","line":29,"column":11,"nodeType":"240","endLine":29,"endColumn":44},{"ruleId":"224","severity":1,"message":"241","line":10,"column":10,"nodeType":"226","messageId":"227","endLine":10,"endColumn":22},{"ruleId":"224","severity":1,"message":"228","line":15,"column":9,"nodeType":"226","messageId":"227","endLine":15,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":35,"column":6,"nodeType":"236","endLine":35,"endColumn":14,"suggestions":"242"},{"ruleId":"238","severity":1,"message":"239","line":51,"column":13,"nodeType":"240","endLine":51,"endColumn":68},{"ruleId":"234","severity":1,"message":"243","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":33,"suggestions":"244"},{"ruleId":"245","severity":1,"message":"246","line":76,"column":65,"nodeType":"247","messageId":"248","endLine":76,"endColumn":67},{"ruleId":"224","severity":1,"message":"249","line":16,"column":10,"nodeType":"226","messageId":"227","endLine":16,"endColumn":13},{"ruleId":"224","severity":1,"message":"250","line":2,"column":33,"nodeType":"226","messageId":"227","endLine":2,"endColumn":39},{"ruleId":"224","severity":1,"message":"251","line":19,"column":25,"nodeType":"226","messageId":"227","endLine":19,"endColumn":32},{"ruleId":"234","severity":1,"message":"252","line":27,"column":6,"nodeType":"236","endLine":27,"endColumn":8,"suggestions":"253"},{"ruleId":"234","severity":1,"message":"254","line":39,"column":6,"nodeType":"236","endLine":39,"endColumn":13,"suggestions":"255"},{"ruleId":"224","severity":1,"message":"256","line":40,"column":18,"nodeType":"226","messageId":"227","endLine":40,"endColumn":24},{"ruleId":"224","severity":1,"message":"228","line":42,"column":9,"nodeType":"226","messageId":"227","endLine":42,"endColumn":17},{"ruleId":"234","severity":1,"message":"257","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":16,"suggestions":"258"},{"ruleId":"234","severity":1,"message":"259","line":45,"column":6,"nodeType":"236","endLine":45,"endColumn":8,"suggestions":"260"},{"ruleId":"224","severity":1,"message":"261","line":4,"column":8,"nodeType":"226","messageId":"227","endLine":4,"endColumn":18},{"ruleId":"234","severity":1,"message":"257","line":17,"column":6,"nodeType":"236","endLine":17,"endColumn":16,"suggestions":"262"},{"ruleId":"234","severity":1,"message":"259","line":26,"column":6,"nodeType":"236","endLine":26,"endColumn":15,"suggestions":"263"},{"ruleId":"224","severity":1,"message":"264","line":25,"column":19,"nodeType":"226","messageId":"227","endLine":25,"endColumn":23},{"ruleId":"234","severity":1,"message":"257","line":42,"column":6,"nodeType":"236","endLine":42,"endColumn":8,"suggestions":"265"},{"ruleId":"224","severity":1,"message":"256","line":18,"column":11,"nodeType":"226","messageId":"227","endLine":18,"endColumn":17},{"ruleId":"224","severity":1,"message":"266","line":1,"column":28,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"259","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":15,"suggestions":"267"},{"ruleId":"234","severity":1,"message":"268","line":16,"column":6,"nodeType":"236","endLine":16,"endColumn":13,"suggestions":"269"},{"ruleId":"224","severity":1,"message":"270","line":1,"column":27,"nodeType":"226","messageId":"227","endLine":1,"endColumn":36},"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"no-unused-vars","'MyOrder' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","'QrReader' is defined but never used.","'delay' is assigned a value but never used.","'handleScan' is assigned a value but never used.","'handleError' is assigned a value but never used.","'previewStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["273"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getOrderById' is defined but never used.",["274"],"React Hook useEffect has a missing dependency: 'user.restaurantId'. Either include it or remove the dependency array.",["275"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'set' is defined but never used.","'scroll' is defined but never used.","'orderId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["276"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["277"],"'status' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'restId'. Either include it or remove the dependency array.",["278"],"React Hook useEffect has missing dependencies: 'dispatch' and 'restId'. Either include them or remove the dependency array.",["279"],"'openSocket' is defined but never used.",["280"],["281"],"'logo' is assigned a value but never used.",["282"],"'useState' is defined but never used.",["283"],"React Hook useEffect has missing dependencies: 'addToCommand', 'comment', 'item.name', and 'quantity'. Either include them or remove the dependency array. If 'addToCommand' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["284"],"'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"287","fix":"295"},{"desc":"287","fix":"296"},{"desc":"287","fix":"297"},{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"298","fix":"302"},{"desc":"303","fix":"304"},"Update the dependencies array to be: [dispatch]",{"range":"305","text":"306"},"Update the dependencies array to be: [dispatch, restId]",{"range":"307","text":"308"},"Update the dependencies array to be: [isAuthenticated, dispatch, user.restaurantId]",{"range":"309","text":"310"},"Update the dependencies array to be: [dispatch, values]",{"range":"311","text":"312"},"Update the dependencies array to be: [items, values]",{"range":"313","text":"314"},{"range":"315","text":"308"},{"range":"316","text":"308"},{"range":"317","text":"308"},"Update the dependencies array to be: [channel, dispatch, restId]",{"range":"318","text":"319"},"Update the dependencies array to be: [restId]",{"range":"320","text":"321"},{"range":"322","text":"319"},"Update the dependencies array to be: [addToCommand, comment, item.name, price, quantity]",{"range":"323","text":"324"},[404,406],"[dispatch]",[1164,1172],"[dispatch, restId]",[1326,1353],"[isAuthenticated, dispatch, user.restaurantId]",[737,739],"[dispatch, values]",[1048,1055],"[items, values]",[1243,1253],[1317,1319],[570,580],[828,837],"[channel, dispatch, restId]",[1212,1214],"[restId]",[722,731],[490,497],"[addToCommand, comment, item.name, price, quantity]"]