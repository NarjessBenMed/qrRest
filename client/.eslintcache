[{"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\index.js":"1","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\App.js":"2","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\serviceWorker.js":"3","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\app\\store.js":"4","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\adminSlice.js":"6","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\authSlice.js":"7","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\ownerSlice.js":"8","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\menuSlice.js":"9","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\staffSlice.js":"10","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\PrivateRoute\\ClientRoute.js":"11","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ScanCode\\ScanCode.js":"12","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\Navbar\\Navbar.js":"13","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\AdminSection\\AdminSection.js":"14","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\SignIn\\SignIn.js":"15","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\OwnerSection\\OwnerSection.js":"16","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\WorkerSection\\WorkerSection.js":"17","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\tableSlice.js":"18","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\orderSlice.js":"19","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"20","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\Home\\Home.js":"21","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\ClientPage\\ClientPage.js":"22","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\utils\\scroll.js":"23","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\OwnerList\\OwnerList.js":"24","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\TableList\\TableList.js":"25","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\RestaurantList\\RestaurantList.js":"26","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\StaffList\\StaffList.js":"27","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\OrderList\\OrderList.js":"28","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js":"29","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddOwner\\AddOwner.js":"30","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\Menu\\Menu.js":"31","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddMenu\\AddMenu.js":"32","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js":"33","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\MyOrder\\MyOrder.js":"34","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ClientMenu\\ClientMenu.js":"35","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\utils\\image.js":"36","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\Tables\\Tables.js":"37","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddTable\\AddTable.js":"38","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js":"39","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js":"40","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js":"41","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\Workers\\Workers.js":"42","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddWorker\\AddWorker.js":"43"},{"size":644,"mtime":1612037033450,"results":"44","hashOfConfig":"45"},{"size":1730,"mtime":1612037033302,"results":"46","hashOfConfig":"45"},{"size":5141,"mtime":1612037033520,"results":"47","hashOfConfig":"45"},{"size":648,"mtime":1612037033436,"results":"48","hashOfConfig":"45"},{"size":263,"mtime":1612037033523,"results":"49","hashOfConfig":"45"},{"size":3567,"mtime":1612111107976,"results":"50","hashOfConfig":"45"},{"size":3905,"mtime":1612037033439,"results":"51","hashOfConfig":"45"},{"size":4610,"mtime":1612037033442,"results":"52","hashOfConfig":"45"},{"size":4376,"mtime":1612303291458,"results":"53","hashOfConfig":"45"},{"size":3457,"mtime":1612038643286,"results":"54","hashOfConfig":"45"},{"size":643,"mtime":1612037033412,"results":"55","hashOfConfig":"45"},{"size":2358,"mtime":1612815820734,"results":"56","hashOfConfig":"45"},{"size":5050,"mtime":1612818906192,"results":"57","hashOfConfig":"45"},{"size":1926,"mtime":1612295663488,"results":"58","hashOfConfig":"45"},{"size":2781,"mtime":1612107842259,"results":"59","hashOfConfig":"45"},{"size":2612,"mtime":1612295262251,"results":"60","hashOfConfig":"45"},{"size":4843,"mtime":1612295925126,"results":"61","hashOfConfig":"45"},{"size":3380,"mtime":1612037033445,"results":"62","hashOfConfig":"45"},{"size":7785,"mtime":1612816990410,"results":"63","hashOfConfig":"45"},{"size":661,"mtime":1612037033414,"results":"64","hashOfConfig":"45"},{"size":5721,"mtime":1612203212944,"results":"65","hashOfConfig":"45"},{"size":2486,"mtime":1612648269089,"results":"66","hashOfConfig":"45"},{"size":347,"mtime":1612037033523,"results":"67","hashOfConfig":"45"},{"size":870,"mtime":1612037033408,"results":"68","hashOfConfig":"45"},{"size":1585,"mtime":1612387898513,"results":"69","hashOfConfig":"45"},{"size":1184,"mtime":1612298497294,"results":"70","hashOfConfig":"45"},{"size":1536,"mtime":1612385958766,"results":"71","hashOfConfig":"45"},{"size":4148,"mtime":1612820108231,"results":"72","hashOfConfig":"45"},{"size":1997,"mtime":1612380255094,"results":"73","hashOfConfig":"45"},{"size":2558,"mtime":1612111760254,"results":"74","hashOfConfig":"45"},{"size":1356,"mtime":1612380934046,"results":"75","hashOfConfig":"45"},{"size":6564,"mtime":1612383635211,"results":"76","hashOfConfig":"45"},{"size":4184,"mtime":1612299001966,"results":"77","hashOfConfig":"45"},{"size":1923,"mtime":1612819685533,"results":"78","hashOfConfig":"45"},{"size":4647,"mtime":1612820786546,"results":"79","hashOfConfig":"45"},{"size":313,"mtime":1612037033522,"results":"80","hashOfConfig":"45"},{"size":1354,"mtime":1612390850545,"results":"81","hashOfConfig":"45"},{"size":2052,"mtime":1612387612536,"results":"82","hashOfConfig":"45"},{"size":6663,"mtime":1612299930916,"results":"83","hashOfConfig":"45"},{"size":3746,"mtime":1612645859789,"results":"84","hashOfConfig":"45"},{"size":4683,"mtime":1612818101886,"results":"85","hashOfConfig":"45"},{"size":936,"mtime":1612386766343,"results":"86","hashOfConfig":"45"},{"size":2941,"mtime":1612385851816,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"1g0z5ju",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"90"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"90"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"90"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"90"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"90"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"90"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"90"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"90"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"90"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\index.js",[],["189","190"],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\App.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\serviceWorker.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\app\\store.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\adminSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\authSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\ownerSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\menuSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\staffSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\PrivateRoute\\ClientRoute.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ScanCode\\ScanCode.js",["191","192","193","194","195","196","197"],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\AdminSection\\AdminSection.js",["198","199","200"],"import React, { useEffect } from \"react\";\r\nimport AddOwner from \"../../Components/AddOwner/AddOwner\";\r\nimport OwnerList from \"../../Components/OwnerList/OwnerList\";\r\nimport { getAllOwners } from \"../../features/adminSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./AdminSection.css\";\r\nconst socketURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? window.location.hostname\r\n    : \"http://localhost:5000\";\r\n\r\nconst AdminSection = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  let isAuth = useSelector((state) => state.auth.isAuthenticated);\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      dispatch(getAllOwners());\r\n    }\r\n  }, [isAuth]);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/admin-space`, {\r\n      transports: [\"websocket\", \"polling\"],\r\n      // secure: true,\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    socket.on(\"owners\", (data) => {\r\n      console.log(\"from server\", data.action);\r\n      dispatch(getAllOwners());\r\n    });\r\n\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, []);\r\n\r\n  const { owners, adminStatus, adminErrors } = useSelector(\r\n    (state) => state.admin\r\n  );\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <AddOwner />\r\n\r\n      {adminStatus.getAll === \"loading\" ? (\r\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : adminStatus.getAll === \"failed\" ? (\r\n        <h2>something went wrong</h2>\r\n      ) : adminStatus.getAll === \"succeded\" && owners.length > 0 ? (\r\n        <OwnerList owners={owners} />\r\n      ) : (\r\n        <h5>you have no clients</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSection;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\SignIn\\SignIn.js",["201"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../../features/authSlice';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport './SignIn.css';\r\n\r\nconst SignIn = () => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const { username, password } = values;\r\n  const { authStatus, authErrors } = useSelector((state) => state.auth);\r\n\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ history, username, password }));\r\n  };\r\n  return (\r\n    <div className='signin'>\r\n      <div className='signin__container'>\r\n        <h1>Sign In</h1>\r\n        <form>\r\n          <div className='signin__form__group'>\r\n            <h5>Username</h5>\r\n            <span>\r\n              {authStatus.authUser === 'failed' &&\r\n                authErrors.authUser &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'username')[0] &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'username')[0].msg}\r\n            </span>\r\n            <input\r\n              type='text'\r\n              className='signin__container__form__input valid__input'\r\n              name='username'\r\n              value={username}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='signin__form__group'>\r\n            <h5>Password</h5>\r\n            <span>\r\n              {authStatus.authUser === 'failed' &&\r\n                authErrors.authUser &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'password')[0] &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'password')[0].msg}\r\n            </span>\r\n\r\n            <input\r\n              type='password'\r\n              className='signin__container__form__input valid__input'\r\n              name='password'\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button type='submit' className='signin__signInButton' onClick={handleClick}>\r\n            {authStatus.authUser === 'loading' ? (\r\n              <IconContext.Provider value={{ className: 'spinner' }}>\r\n                <div>\r\n                  <ImSpinner9 />\r\n                </div>\r\n              </IconContext.Provider>\r\n            ) : (\r\n              <span>Sign In</span>\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\OwnerSection\\OwnerSection.js",["202","203"],"import React, { useEffect, useState } from \"react\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getRestList } from \"../../features/ownerSlice\";\r\nimport AddRestaurant from \"../../Components/AddRestaurant/AddRestaurant\";\r\nimport RestaurantList from \"../../Components/RestaurantList/RestaurantList\";\r\nimport AddMenu from \"../../Components/AddMenu/AddMenu\";\r\nimport TableList from \"../../Components/TableList/TableList\";\r\nimport StaffList from \"../../Components/StaffList/StaffList\";\r\nimport OrderList from \"../../Components/OrderList/OrderList\";\r\n\r\nimport Menu from \"../Menu/Menu\";\r\nimport \"./OwnerSection.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport MyRestaurant from \"../MyRestaurant/MyRestaurant\";\r\nconst socketURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? window.location.hostname\r\n    : \"http://localhost:5000\";\r\n\r\nconst OwnerSection = () => {\r\n  const [channel, setChannel] = useState(null);\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(getRestList());\r\n    }\r\n  }, [isAuthenticated]);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/owner-space`, {\r\n      transports: [\"websocket\", \"polling\"],\r\n      // secure: true,\r\n    });\r\n    setChannel(socket);\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    socket.on(\"restaurants\", (data) => {\r\n      console.log(\"from server\", data.action);\r\n      dispatch(getRestList());\r\n    });\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, []);\r\n\r\n  const { restList } = useSelector((state) => state.owner);\r\n  return (\r\n    <div className=\"owner\">\r\n      <Switch>\r\n        <Route exact path=\"/owner-section\">\r\n          <AddRestaurant />\r\n          <RestaurantList restaurants={restList} />\r\n        </Route>\r\n        <Route exact path=\"/owner-section/menu\">\r\n          <AddMenu />\r\n        </Route>\r\n        <Route exact path=\"/owner-section/rest-menu\">\r\n          <Menu />\r\n        </Route>\r\n        <Route exact path=\"/owner-section/my-rest\">\r\n          <MyRestaurant />\r\n        </Route>\r\n        <Route exact path=\"/owner-section/tables\">\r\n          <TableList channel={channel} />\r\n        </Route>\r\n        <Route exact path=\"/owner-section/staff\">\r\n          <StaffList channel={channel} />\r\n        </Route>\r\n        <Route exact path=\"/owner-section/orders\">\r\n          <OrderList />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnerSection;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\WorkerSection\\WorkerSection.js",["204","205","206","207"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport openSocket from \"socket.io-client\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./WorkerSection.css\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { getAllOrders, checkoutOrder } from \"../../features/orderSlice\";\r\nimport { getTables } from \"../../features/tableSlice\";\r\nconst socketURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? window.location.hostname\r\n    : \"http://localhost:5000\";\r\n\r\nconst WorkerSection = () => {\r\n  const [filterBy, setFilterBy] = useState(\"\");\r\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: [\"websocket\", \"polling\"],\r\n      // secure: true,\r\n    });\r\n\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (user) {\r\n      socket.emit(\"joinRoom\", { restId: user.restaurantId });\r\n      console.log(\"restid\", user.restaurantId);\r\n    }\r\n    socket.on(\"message\", (data) => {\r\n      console.log(\"new order------------\", data);\r\n      dispatch(getAllOrders(user.restaurantId));\r\n    });\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, [user]);\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(getTables(user.restaurantId));\r\n      dispatch(getAllOrders(user.restaurantId));\r\n    }\r\n  }, [isAuthenticated]);\r\n  const { listTable, tableStatus } = useSelector((state) => state.table);\r\n  useEffect(() => {\r\n    if (listTable && listTable.length > 0)\r\n      setFilterBy(listTable[0].tableNumber);\r\n  }, [listTable]);\r\n  const { orders, orderStatus } = useSelector((state) => state.order);\r\n\r\n  const handleChange = (e) => {\r\n    setFilterBy(e.target.value);\r\n  };\r\n  const handleClick = async (id) => {\r\n    await dispatch(checkoutOrder({ orderId: id }));\r\n    await dispatch(getAllOrders(user.restaurantId));\r\n  };\r\n  return (\r\n    <div className=\"worker\">\r\n      <h2>List of orders</h2>\r\n      <div className=\"worker__tables\">\r\n        <p>Select Your Table</p>\r\n        {tableStatus.getAll === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : tableStatus.getAll === \"succeded\" ? (\r\n          <select name=\"filterBy\" onChange={handleChange}>\r\n            {listTable && listTable.length > 0 ? (\r\n              listTable.map((tab, i) => (\r\n                <option key={tab._id} defaultValue value={tab.tableNumber}>\r\n                  table {tab.tableNumber}\r\n                </option>\r\n              ))\r\n            ) : (\r\n              <option>no table</option>\r\n            )}\r\n          </select>\r\n        ) : (\r\n          <h5>Something went wrong..</h5>\r\n        )}\r\n      </div>\r\n      <div className=\"worker__content\">\r\n        {orderStatus.getAll === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : orderStatus.getAll === \"succeded\" ? (\r\n          orders &&\r\n          orders\r\n            .filter((order) => {\r\n              if (!order.paid && order.tableNumber === Number(filterBy))\r\n                return order;\r\n            })\r\n            .slice(0)\r\n            .reverse()\r\n            .map((order) => {\r\n              return (\r\n                <div className=\"worker__orders\" key={order._id}>\r\n                  {order.items\r\n                    .slice(0)\r\n                    .reverse()\r\n                    .map((item) => (\r\n                      <div className=\"worker__orders__items\" key={item._id}>\r\n                        <div className=\"worker__orders__items__info\">\r\n                          <p>{item.name}</p>\r\n                          <p>{item.quantity}</p>\r\n                        </div>\r\n                        {item.comment && (\r\n                          <p className=\"comment\">\r\n                            <span>preferences: </span>\r\n                            {item.comment}\r\n                          </p>\r\n                        )}\r\n\r\n                        <span className=\"timeline\">\r\n                          {moment(item.createdAt).fromNow()}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  <button onClick={() => handleClick(order._id)}>\r\n                    Checkout order\r\n                  </button>\r\n                </div>\r\n              );\r\n            })\r\n        ) : (\r\n          <h5>something went wrong..</h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkerSection;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\tableSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\features\\orderSlice.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\Home\\Home.js",["208"],"import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { initState } from '../../features/authSlice';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaCheckCircle } from 'react-icons/fa';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\nimport { IconContext } from 'react-icons';\r\nimport './Home.css';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(initState());\r\n  }, []);\r\n  return (\r\n    <div className='home'>\r\n      <div className='home__content'>\r\n        <div className='home__content__left'>\r\n          <h2>Digitalisez vos cartes! </h2>\r\n          <p>\r\n            DigitMenu permet l'affichage dynamique et interactif de votre carte, vous\r\n            pouvez gérer en quelques clics vos plats, menu, dessert et tous se met à jour\r\n            automatiquement ...\r\n          </p>\r\n          <Link to='/scan-code'>\r\n            <button className='home__content__btn'>Notre Menu </button>\r\n          </Link>\r\n        </div>\r\n        <div className='scan'>\r\n          <img src='images/bg-light.png' alt=' ' />\r\n        </div>\r\n      </div>\r\n      <div className='home__sante'>\r\n        <p>Votre santé est une priorité !</p>\r\n        <p>\r\n          DigitMenu a été conçue afin de garantir autant que possible votre santé et celle\r\n          de vos clients!\r\n        </p>\r\n        <img src='images/Codiv-19.png' alt='' />\r\n      </div>\r\n      <section className='home__fonct' id='sect1'>\r\n        <h4>Utilisation simple et efficace sans installation :</h4>\r\n        <div className='home__fonct__step'>\r\n          <IconContext.Provider value={{ className: 'check-icon' }}>\r\n            <div>\r\n              <FaCheckCircle />\r\n            </div>\r\n          </IconContext.Provider>\r\n          <p>\r\n            Le consommateur a juste besoin de scanner un QR code affiché sur vos tables\r\n          </p>\r\n        </div>\r\n        <div className='home__fonct__step'>\r\n          <IconContext.Provider value={{ className: 'check-icon' }}>\r\n            <div>\r\n              <FaCheckCircle />\r\n            </div>\r\n          </IconContext.Provider>\r\n          <p>Il est alors redirigé automatiquement vers votre carte dématérialisé</p>\r\n        </div>\r\n        <div className='home__fonct__step'>\r\n          <IconContext.Provider value={{ className: 'check-icon' }}>\r\n            <div>\r\n              <FaCheckCircle />\r\n            </div>\r\n          </IconContext.Provider>\r\n          <p>la commande est prise sans le moindre contact</p>\r\n        </div>\r\n        <div className='home__fonct__img'>\r\n          <img src='images/img1.png' alt='' />\r\n          <div className='home__fonct__img__content'>\r\n            <img src='images/img2.png' alt='' />\r\n            <IconContext.Provider value={{ className: 'plus-icon' }}>\r\n              <div>\r\n                <FaPlusCircle />\r\n              </div>\r\n            </IconContext.Provider>\r\n            <img src='images/img3.png' alt='' />\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <div className='block'>\r\n        <p>Booster votre restaurant !</p>\r\n        <p>\r\n          Ouvrez vous des nouveaux horizons via le digital pour sortir de la crise du\r\n          coronavirus\r\n        </p>\r\n      </div>\r\n\r\n      <section className='home__avantages' id='sect2'>\r\n        <p>\r\n          En plus du respect des gestes barrières et du nouveau mode de vie que nous\r\n          devons adopter, le menu digital pour votre restaurant vous permet de mettre à\r\n          jour en temps réel votre carte et d'offrir une expérience unique à vos clients.\r\n        </p>\r\n        <p>\r\n          Consacrez-vous à votre art et ne gaspillez pas votre temps et votre énergie à\r\n          désinfecter vos cartes pour chaque nouveau client. DigitMenu est une solution\r\n          rapide, économique, qui respecte les gestes barrières pour vous libérer.\r\n        </p>\r\n        <p>\r\n          Toutes les mises à jour de votre menu digital restaurant sont immédiatement\r\n          visibles par vos clients. Un plat caché par suite d’une rupture de stock ou d'un\r\n          problème en cuisine, un visuel à changer, un prix à adapter...le menu visible\r\n          par vos clients est à jour, votre service est très largement amélioré.\r\n        </p>\r\n        <p>\r\n          {' '}\r\n          Vous limitez votre impact sur la nature en évitant les réimpressions régulières\r\n          de vos cartes. Vous ne gaspillez plus de papier et vous diminuez vos déchets\r\n          pour vous inscrire dans une démarche écoresponsable.\r\n        </p>\r\n      </section>\r\n      <section className='home__adher' id='sect3'>\r\n        <h1> Les adhérents </h1>\r\n\r\n        <div className='home__adher__items'>\r\n          <img\r\n            src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcS6bMxzzhbJr9D94CZ-WUGbxptM9EAHmLmmnA&usqp=CAU'\r\n            alt=''\r\n          />\r\n          <img\r\n            src='https://dozane-studio.com/bundles/framework/images/clients/dozane-client-sultan-ahmet.png'\r\n            alt=''\r\n          />\r\n          <img\r\n            src='https://scontent.ftun7-1.fna.fbcdn.net/v/t1.0-9/21752455_1605310829489573_1413294409926454312_n.jpg?_nc_cat=101&ccb=2&_nc_sid=09cbfe&_nc_ohc=hWNGwNDsNe4AX-2Qdii&_nc_ht=scontent.ftun7-1.fna&oh=3859edb4b4b56564621a835cb8839ba7&oe=602BA403'\r\n            alt=''\r\n          />\r\n        </div>\r\n      </section>\r\n      <footer className='footer'>\r\n        <div className='contact__us__left contact__us__border'>\r\n          <p className='c'>Nous contacter</p>\r\n        </div>\r\n        <p className='copy-right'>&copy; 2021 Copyright all right reserved.</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\ClientPage\\ClientPage.js",["209","210"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport openSocket from \"socket.io-client\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport ClientMenu from \"../../Components/ClientMenu/ClientMenu\";\r\nimport MyOrder from \"../MyOrder/MyOrder\";\r\nimport { getMenuByRest } from \"../../features/menuSlice\";\r\nimport \"./ClientPage.css\";\r\nconst socketURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? window.location.hostname\r\n    : \"http://localhost:5000\";\r\n\r\nconst ClientPage = () => {\r\n  const dispatch = useDispatch();\r\n  const restId = localStorage.getItem(\"restId\");\r\n  useEffect(() => {\r\n    dispatch(getMenuByRest(restId));\r\n  }, []);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: [\"websocket\", \"polling\"],\r\n      // secure: true,\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (restId) socket.emit(\"joinRoom\", { restId });\r\n    socket.on(\"newMenu\", (data) => {\r\n      console.log(\"newmenu\", data);\r\n      dispatch(getMenuByRest(restId));\r\n    });\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, []);\r\n\r\n  const { menu, menuStatus } = useSelector((state) => state.menu);\r\n  const clientMenu =\r\n    menuStatus.getMenu === \"loading\" ? (\r\n      <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n        <div>\r\n          <ImSpinner9 />\r\n        </div>\r\n      </IconContext.Provider>\r\n    ) : menuStatus.getMenu === \"succeded\" && menu ? (\r\n      menu.menu.items.length === 0 ? (\r\n        <p> Ce menu n'est pas encore disponible</p>\r\n      ) : (\r\n        <ClientMenu menu={menu} restaurantId={restId} />\r\n      )\r\n    ) : (\r\n      <h5>Something went wrong...</h5>\r\n    );\r\n\r\n  return (\r\n    <div className=\"client-section\">\r\n      <Switch>\r\n        <Route exact path=\"/client-page\">\r\n          <div className=\"client-section__info\">\r\n            <h2>Menu</h2>\r\n            <div className=\"client-section__info__image\">\r\n              <img src={\"/\" + (menu && menu.menu.restaurant.logo)} alt=\"logo\" />\r\n            </div>\r\n            <h2>{menu && menu.menu.restaurant.name}</h2>\r\n          </div>\r\n          {clientMenu}\r\n        </Route>\r\n        <Route exact path=\"/client-page/order\">\r\n          <MyOrder />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPage;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\utils\\scroll.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\OwnerList\\OwnerList.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\TableList\\TableList.js",["211"],"import React, { useEffect } from \"react\";\r\nimport AddTable from \"../AddTable/AddTable\";\r\nimport Tables from \"../Tables/Tables\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { getTables } from \"../../features/tableSlice\";\r\nimport \"./TableList.css\";\r\n\r\nconst TableList = ({ channel }) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const { restId } = location.state;\r\n  useEffect(() => {\r\n    dispatch(getTables(restId));\r\n  }, [dispatch, restId]);\r\n  useEffect(() => {\r\n    if (channel) {\r\n      channel.on(\"tables\", (data) => {\r\n        console.log(\"tables\", data.action);\r\n        dispatch(getTables(restId));\r\n      });\r\n    }\r\n  }, [channel]);\r\n\r\n  const { listTable, tableStatus } = useSelector((state) => state.table);\r\n  return (\r\n    <div className=\"table-list\">\r\n      <AddTable restId={restId} tables={listTable} />\r\n      {tableStatus.getAll === \"loading\" ? (\r\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : tableStatus.getAll === \"failed\" ? (\r\n        <h4>une erreur est survenue ! veuillez réésayer SVP</h4>\r\n      ) : tableStatus.getAll === \"succeded\" && listTable.length > 0 ? (\r\n        <Tables tables={listTable} />\r\n      ) : (\r\n        <h4>Aucune table n'est enregistrée </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableList;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\RestaurantList\\RestaurantList.js",["212"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport RestaurantListItem from \"../RestaurantListItem/RestaurantListIem\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./RestaurantList.css\";\r\n\r\nconst RestaurantList = ({ restaurants }) => {\r\n  const { ownerStatus, ownerErrors } = useSelector((state) => state.owner);\r\n  return (\r\n    <div className=\"restlist\">\r\n      <h3>Liste des restaurants</h3>\r\n      <div className=\"restlist__list\">\r\n        {ownerStatus.getList === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : ownerStatus.getList === \"failed\" ? (\r\n          <h2>something went wrong</h2>\r\n        ) : ownerStatus.getList === \"succeded\" && restaurants.length > 0 ? (\r\n          restaurants.map((rest) => (\r\n            <RestaurantListItem key={rest._id} rest={rest} />\r\n          ))\r\n        ) : (\r\n          <h5> aucun restaurant n'est enregistré </h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantList;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\StaffList\\StaffList.js",["213","214"],"import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport AddWorker from \"../AddWorker/AddWorker\";\r\nimport Workers from \"../Workers/Workers\";\r\nimport { getAllWorkers } from \"../../features/staffSlice\";\r\nimport \"./StaffList.css\";\r\n\r\nconst StaffList = ({ channel }) => {\r\n  const location = useLocation();\r\n  const { restId } = location.state;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllWorkers(restId));\r\n  }, []);\r\n  const { workers, workerStatus } = useSelector((state) => state.staff);\r\n  useEffect(() => {\r\n    if (channel) {\r\n      channel.on(\"workers\", (data) => {\r\n        console.log(\"workers\", data.action);\r\n        dispatch(getAllWorkers(restId));\r\n      });\r\n    }\r\n  }, [channel]);\r\n\r\n  return (\r\n    <div className=\"staff\">\r\n      <AddWorker restId={restId} />\r\n      {workerStatus.getAll === \"loading\" ? (\r\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : workerStatus.getAll === \"failed\" ? (\r\n        <h4>Une erreur est survenue</h4>\r\n      ) : workerStatus.getAll === \"succeded\" && workers.length > 0 ? (\r\n        <Workers list={workers} />\r\n      ) : (\r\n        <h4>La liste des personnels est vide </h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffList;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\OrderList\\OrderList.js",["215","216"],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js",["217","218","219"],"import React, { useEffect } from \"react\";\r\nimport AddMenu from \"../../Components/AddMenu/AddMenu\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport { getMenuByRest } from \"../../features/menuSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport openSocket from \"socket.io-client\";\r\n\r\nimport \"./MyRestaurant.css\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nconst socketURL =\r\n  process.env.NODE_ENV === \"production\"\r\n    ? window.location.hostname\r\n    : \"http://localhost:5000\";\r\n\r\nconst MyRestaurant = () => {\r\n  const location = useLocation();\r\n  const { restId, logo } = location.state;\r\n  const dispatch = useDispatch();\r\n  const { menu, menuStatus, menuErrors } = useSelector((state) => state.menu);\r\n  useEffect(() => {\r\n    dispatch(getMenuByRest(restId));\r\n  }, [restId]);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: [\"websocket\", \"polling\"],\r\n      // secure: true,\r\n    });\r\n    socket.on(\"connect\", () => {\r\n      console.log(socket.id);\r\n      socket.emit(\"joinRoom\", { restId });\r\n    });\r\n    socket.on(\"newMenu\", (data) => {\r\n      dispatch(getMenuByRest(restId));\r\n    });\r\n\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, [restId]);\r\n  return (\r\n    <div className=\"my-rest\">\r\n      <AddMenu />\r\n      {menuStatus.getMenu === \"loading\" ? (\r\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : menuStatus.getMenu === \"failed\" ? (\r\n        <h4>une erreur est survenue , veuillez réésayer SVP</h4>\r\n      ) : menuStatus.getMenu === \"succeded\" && menu.menu.items.length > 0 ? (\r\n        <Menu menu={menu} logo={logo} />\r\n      ) : (\r\n        <h5>aucun menu n'est enregistré pour ce restaurant</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRestaurant;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddOwner\\AddOwner.js",["220"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport { createOwner } from '../../features/adminSlice';\r\nimport './AddOwner.css';\r\n\r\nconst AddOwner = () => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const { username, password } = values;\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const { adminStatus, adminErrors } = useSelector((state) => state.admin);\r\n  useEffect(() => {\r\n    if (adminStatus.create === 'succeded') {\r\n      setValues({ username: '', password: '' });\r\n    }\r\n  }, [adminStatus]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createOwner({ username, password }));\r\n  };\r\n  return (\r\n    <div className='addowner'>\r\n      <h3>Create new Owner</h3>\r\n      <form>\r\n        <div className='addowner__form__group'>\r\n          <h5>Username</h5>\r\n\r\n          <span>\r\n            {adminStatus.create === 'failed' &&\r\n              adminErrors.create &&\r\n              adminErrors.create.data.filter((err) => err.param === 'username')[0].msg}\r\n          </span>\r\n\r\n          <input\r\n            type='text'\r\n            className='addowner__container__form__input valid__input'\r\n            name='username'\r\n            value={username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className='addowner__form__group'>\r\n          <h5>Password</h5>\r\n\r\n          <span>\r\n            {adminStatus.create === 'failed' &&\r\n              adminErrors.create &&\r\n              adminErrors.create.data.filter((err) => err.param === 'password')[0].msg}\r\n          </span>\r\n\r\n          <input\r\n            type='password'\r\n            className='addowner__container__form__input valid__input'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type='submit' className='addowner__addownerButton' onClick={handleSubmit}>\r\n          {adminStatus.create === 'loading' ? (\r\n            <IconContext.Provider value={{ className: 'spinner' }}>\r\n              <div>\r\n                <ImSpinner9 />\r\n              </div>\r\n            </IconContext.Provider>\r\n          ) : (\r\n            <span>Add</span>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOwner;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\Menu\\Menu.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddMenu\\AddMenu.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\pages\\MyOrder\\MyOrder.js",["221"],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ClientMenu\\ClientMenu.js",["222","223","224","225","226"],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\utils\\image.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\Tables\\Tables.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddTable\\AddTable.js",["227"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTable } from \"../../features/tableSlice\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./AddTable.css\";\r\n\r\nconst AddTable = ({ restId }) => {\r\n  const [values, setValues] = useState({\r\n    tableNumber: \"\",\r\n    tableCode: \"\",\r\n  });\r\n  const { tableNumber, tableCode } = values;\r\n  const dispatch = useDispatch();\r\n  const { tableStatus, tableErrors } = useSelector((state) => state.table);\r\n  useEffect(() => {\r\n    if (tableStatus.create === \"succeded\")\r\n      setValues({ ...values, tableNumber: \"\", tableCode: \"\" });\r\n  }, [tableStatus]);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      tableNumber: e.target.value,\r\n      tableCode: restId + \"+\" + e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addTable({ tableNumber, tableCode, restaurant: restId }));\r\n  };\r\n  return (\r\n    <div className=\"add-table\">\r\n      <h3>Ajout des tables </h3>\r\n      <form className=\"add-table__form\">\r\n        <div className=\"add-table__form__group\">\r\n          <h5>Numéro de table</h5>\r\n          <input\r\n            type=\"number\"\r\n            name=\"tableNumber\"\r\n            value={tableNumber}\r\n            onChange={handleChange}\r\n            min=\"1\"\r\n          />\r\n\r\n          {tableStatus.create === \"failed\" && (\r\n            <span className=\"add-table-error\">\r\n              {\" \"}\r\n              {tableErrors.create.data[0].msg}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          {tableStatus.create === \"loading\" ? (\r\n            <IconContext.Provider value={{ className: \"spinner\" }}>\r\n              <div>\r\n                <ImSpinner9 />\r\n              </div>\r\n            </IconContext.Provider>\r\n          ) : (\r\n            <span>Ajouter</span>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTable;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js",["228"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteRestaurant, editRestaurant } from \"../../features/ownerSlice\";\r\nimport { generateBase64FromImage } from \"../../utils/image\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { MdRestaurantMenu } from \"react-icons/md\";\r\n\r\nimport \"./RestaurantListItem.css\";\r\nimport { FaUsersCog } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoListUnordered } from \"react-icons/go\";\r\nimport { GiTable } from \"react-icons/gi\";\r\n\r\nconst RestaurantListIem = ({ rest }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    preview: \"\",\r\n    address: \"\",\r\n    edit: false,\r\n  });\r\n  const { name, image, preview, address, edit } = values;\r\n  const dispatch = useDispatch();\r\n  const { ownerStatus, ownerErrors } = useSelector((state) => state.owner);\r\n  useEffect(() => {\r\n    if (ownerStatus.edit === \"succeded\")\r\n      setValues({ ...values, edit: false, preview: null });\r\n  }, [ownerStatus]);\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteRestaurant({ restId: id }));\r\n  };\r\n  const handleFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file)\r\n      generateBase64FromImage(file)\r\n        .then((b64) => {\r\n          setValues({ ...values, image: file, preview: b64 });\r\n        })\r\n        .catch((e) => {\r\n          setValues({ ...values, preview: null });\r\n        });\r\n  };\r\n  const handleData = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const handleEdit = (rest) => {\r\n    if (!edit) {\r\n      setValues({\r\n        name: rest.name,\r\n        address: rest.address,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"address\", address);\r\n      formData.append(\"image\", image);\r\n      formData.append(\"restId\", rest._id);\r\n      formData.append(\"lastImg\", rest.logo);\r\n      dispatch(editRestaurant(formData));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"restlist__item\">\r\n      <div className=\"restlist__item__form\">\r\n        <div className=\"restlist__item__form__group\">\r\n          {edit ? (\r\n            <input type=\"file\" name=\"image\" onChange={handleFile} />\r\n          ) : (\r\n            <img className=\"image-prev\" src={rest.logo} alt=\"\" />\r\n          )}\r\n          {preview && <img className=\"image-prev\" src={preview} alt=\" \" />}\r\n        </div>\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>NOM : </h5>\r\n          <span className=\"error-message\">\r\n            {edit &&\r\n              ownerStatus.edit === \"failed\" &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"name\")[0] &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"name\")[0]\r\n                .msg}\r\n          </span>\r\n          {edit ? (\r\n            <input type=\"text\" name=\"name\" value={name} onChange={handleData} />\r\n          ) : (\r\n            <p>{rest.name}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>Addresse : </h5>\r\n          <span className=\"error-message\">\r\n            {edit &&\r\n              ownerStatus.edit === \"failed\" &&\r\n              ownerErrors.edit.data.filter(\r\n                (err) => err.param === \"address\"\r\n              )[0] &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"address\")[0]\r\n                .msg}\r\n          </span>\r\n          {edit ? (\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={address}\r\n              onChange={handleData}\r\n            />\r\n          ) : (\r\n            <p>{rest.address}</p>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"restlist__item__form__button\">\r\n          <button onClick={() => handleDelete(rest._id)}>\r\n            {edit && ownerStatus.delete === \"loading\" ? (\r\n              <IconContext.Provider value={{ className: \"spinner\" }}>\r\n                <div>\r\n                  <ImSpinner9 />\r\n                </div>\r\n              </IconContext.Provider>\r\n            ) : (\r\n              <span>Supprimer</span>\r\n            )}\r\n          </button>\r\n          <button onClick={() => handleEdit(rest)}>\r\n            <span>Modifier</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"restlist__item__form__links\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/my-rest\",\r\n              state: {\r\n                restId: rest._id,\r\n                logo: rest.logo,\r\n                restName: rest.name,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <MdRestaurantMenu />\r\n                </IconContext.Provider>\r\n                <span>Menu</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/staff\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <FaUsersCog />\r\n                </IconContext.Provider>\r\n                <span> Staff</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/orders\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <GoListUnordered />\r\n                </IconContext.Provider>\r\n                <span>Commandes</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/tables\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <GiTable />\r\n                </IconContext.Provider>\r\n                <span>Tables</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantListIem;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js",["229"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addToOrder,\r\n  removeFromOrder,\r\n  addComment,\r\n} from \"../../features/orderSlice\";\r\nimport \"./ClientMenuItem.css\";\r\nimport moment from \"moment\";\r\n\r\nconst ClientMenuItem = ({ item }) => {\r\n  const dispatch = useDispatch();\r\n  const { preOrder } = useSelector((state) => state.order);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [food, setFood] = useState({\r\n    price: 0,\r\n    quantity: 0,\r\n    comment: \"\",\r\n  });\r\n  const { price, quantity, comment } = food;\r\n  useEffect(() => {\r\n    let orderItem = preOrder.filter((food) => food.name === item.name)[0];\r\n    if (orderItem)\r\n      setFood({\r\n        price: orderItem.price,\r\n        quantity: orderItem.quantity,\r\n        comment: orderItem.comment,\r\n      });\r\n  }, []);\r\n  const handleAdd = (itemPrice) => {\r\n    setFood({\r\n      ...food,\r\n      quantity: Number(quantity) + 1,\r\n      price: Number(price) + Number(itemPrice),\r\n    });\r\n  };\r\n  const handleComment = (e) => {\r\n    setFood({ ...food, comment: e.target.value });\r\n  };\r\n  const handleShow = () => {\r\n    if (showInput) dispatch(addComment({ name: item.name, comment }));\r\n    setShowInput(!showInput);\r\n  };\r\n  const handleRemove = (itemPrice) => {\r\n    if (quantity > 0)\r\n      setFood({\r\n        ...food,\r\n        quantity: Number(quantity) - 1,\r\n        price: Number(price) - Number(itemPrice),\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"client-menu-item\">\r\n      <div className=\"client-menu-item__group\">\r\n        <div className=\"client-menu-item__info\">\r\n          <p>{item.name}</p>\r\n          <p>{item.price} dt</p>\r\n        </div>\r\n        <img src={item.image} alt=\"food\" />\r\n      </div>\r\n      <p className=\"client-menu-item__desc\">{item.description}</p>\r\n      <div className=\"client-menu-item__footer\">\r\n        <span className=\"client-menu-item__price\">\r\n          Total: {price > 0 ? price : 0} DT\r\n        </span>\r\n        <div className=\"client-menu-item__buttons\">\r\n          <button\r\n            className=\"client-menu-item__button\"\r\n            onClick={() => {\r\n              if (quantity > 0) {\r\n                handleRemove(item.price);\r\n                let createdAt = moment().format();\r\n                dispatch(\r\n                  removeFromOrder({\r\n                    name: item.name,\r\n                    price: item.price,\r\n                    createdAt,\r\n                  })\r\n                );\r\n              }\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <span>{quantity}</span>\r\n          <button\r\n            className=\"client-menu-item__button\"\r\n            onClick={() => {\r\n              handleAdd(item.price);\r\n              let createdAt = moment().format();\r\n              dispatch(\r\n                addToOrder({\r\n                  name: item.name,\r\n                  price: item.price,\r\n                  comment,\r\n                  createdAt,\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"client-menu-item__comment\">\r\n        {quantity > 0 ? (\r\n          <button className=\"comment__button\" onClick={handleShow}>\r\n            ajouter un commentaire\r\n          </button>\r\n        ) : (\r\n          <button className=\"comment__button\" onClick={handleShow} disabled>\r\n            ajouter un commentaire\r\n          </button>\r\n        )}\r\n\r\n        {showInput && quantity > 0 && (\r\n          <textarea value={comment} onChange={handleComment} rows=\"3\" cols=\"20\">\r\n            commentaire..\r\n          </textarea>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMenuItem;\r\n","C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\Workers\\Workers.js",[],"C:\\Users\\benmo\\Desktop\\DigitMenu_V2\\FirstProject\\client\\src\\Components\\AddWorker\\AddWorker.js",[],{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"234","severity":1,"message":"235","line":2,"column":10,"nodeType":"236","messageId":"237","endLine":2,"endColumn":18},{"ruleId":"234","severity":1,"message":"238","line":7,"column":8,"nodeType":"236","messageId":"237","endLine":7,"endColumn":16},{"ruleId":"234","severity":1,"message":"239","line":19,"column":11,"nodeType":"236","messageId":"237","endLine":19,"endColumn":16},{"ruleId":"234","severity":1,"message":"240","line":20,"column":9,"nodeType":"236","messageId":"237","endLine":20,"endColumn":19},{"ruleId":"234","severity":1,"message":"241","line":23,"column":9,"nodeType":"236","messageId":"237","endLine":23,"endColumn":20},{"ruleId":"234","severity":1,"message":"242","line":26,"column":9,"nodeType":"236","messageId":"237","endLine":26,"endColumn":21},{"ruleId":"243","severity":1,"message":"244","line":45,"column":6,"nodeType":"245","endLine":45,"endColumn":14,"suggestions":"246"},{"ruleId":"243","severity":1,"message":"247","line":23,"column":6,"nodeType":"245","endLine":23,"endColumn":14,"suggestions":"248"},{"ruleId":"243","severity":1,"message":"247","line":40,"column":6,"nodeType":"245","endLine":40,"endColumn":8,"suggestions":"249"},{"ruleId":"234","severity":1,"message":"250","line":42,"column":32,"nodeType":"236","messageId":"237","endLine":42,"endColumn":43},{"ruleId":"234","severity":1,"message":"251","line":1,"column":27,"nodeType":"236","messageId":"237","endLine":1,"endColumn":36},{"ruleId":"243","severity":1,"message":"247","line":30,"column":6,"nodeType":"245","endLine":30,"endColumn":23,"suggestions":"252"},{"ruleId":"243","severity":1,"message":"247","line":47,"column":6,"nodeType":"245","endLine":47,"endColumn":8,"suggestions":"253"},{"ruleId":"234","severity":1,"message":"254","line":1,"column":17,"nodeType":"236","messageId":"237","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"247","line":40,"column":6,"nodeType":"245","endLine":40,"endColumn":12,"suggestions":"255"},{"ruleId":"243","severity":1,"message":"256","line":46,"column":6,"nodeType":"245","endLine":46,"endColumn":23,"suggestions":"257"},{"ruleId":"258","severity":1,"message":"259","line":98,"column":29,"nodeType":"260","messageId":"261","endLine":98,"endColumn":31},{"ruleId":"243","severity":1,"message":"247","line":14,"column":6,"nodeType":"245","endLine":14,"endColumn":8,"suggestions":"262"},{"ruleId":"243","severity":1,"message":"263","line":21,"column":6,"nodeType":"245","endLine":21,"endColumn":8,"suggestions":"264"},{"ruleId":"243","severity":1,"message":"263","line":38,"column":6,"nodeType":"245","endLine":38,"endColumn":8,"suggestions":"265"},{"ruleId":"243","severity":1,"message":"263","line":27,"column":6,"nodeType":"245","endLine":27,"endColumn":15,"suggestions":"266"},{"ruleId":"234","severity":1,"message":"267","line":10,"column":24,"nodeType":"236","messageId":"237","endLine":10,"endColumn":35},{"ruleId":"243","severity":1,"message":"263","line":18,"column":6,"nodeType":"245","endLine":18,"endColumn":8,"suggestions":"268"},{"ruleId":"243","severity":1,"message":"263","line":27,"column":6,"nodeType":"245","endLine":27,"endColumn":15,"suggestions":"269"},{"ruleId":"243","severity":1,"message":"263","line":48,"column":6,"nodeType":"245","endLine":48,"endColumn":8,"suggestions":"270"},{"ruleId":"243","severity":1,"message":"263","line":51,"column":6,"nodeType":"245","endLine":51,"endColumn":8,"suggestions":"271"},{"ruleId":"234","severity":1,"message":"272","line":21,"column":29,"nodeType":"236","messageId":"237","endLine":21,"endColumn":39},{"ruleId":"243","severity":1,"message":"247","line":24,"column":6,"nodeType":"245","endLine":24,"endColumn":14,"suggestions":"273"},{"ruleId":"243","severity":1,"message":"247","line":41,"column":6,"nodeType":"245","endLine":41,"endColumn":14,"suggestions":"274"},{"ruleId":"234","severity":1,"message":"254","line":1,"column":38,"nodeType":"236","messageId":"237","endLine":1,"endColumn":46},{"ruleId":"243","severity":1,"message":"247","line":17,"column":6,"nodeType":"245","endLine":17,"endColumn":15,"suggestions":"275"},{"ruleId":"234","severity":1,"message":"276","line":23,"column":28,"nodeType":"236","messageId":"237","endLine":23,"endColumn":39},{"ruleId":"243","severity":1,"message":"247","line":29,"column":6,"nodeType":"245","endLine":29,"endColumn":8,"suggestions":"277"},{"ruleId":"243","severity":1,"message":"278","line":32,"column":6,"nodeType":"245","endLine":32,"endColumn":16,"suggestions":"279"},{"ruleId":"243","severity":1,"message":"280","line":39,"column":6,"nodeType":"245","endLine":39,"endColumn":8,"suggestions":"281"},{"ruleId":"243","severity":1,"message":"278","line":55,"column":6,"nodeType":"245","endLine":55,"endColumn":13,"suggestions":"282"},{"ruleId":"243","severity":1,"message":"278","line":19,"column":6,"nodeType":"245","endLine":19,"endColumn":19,"suggestions":"283"},{"ruleId":"243","severity":1,"message":"278","line":29,"column":6,"nodeType":"245","endLine":29,"endColumn":19,"suggestions":"284"},{"ruleId":"243","severity":1,"message":"285","line":29,"column":6,"nodeType":"245","endLine":29,"endColumn":8,"suggestions":"286"},"no-native-reassign",["287"],"no-negated-in-lhs",["288"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'QrReader' is defined but never used.","'delay' is assigned a value but never used.","'handleScan' is assigned a value but never used.","'handleError' is assigned a value but never used.","'previewStyle' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["289"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["290"],["291"],"'adminErrors' is assigned a value but never used.","'useEffect' is defined but never used.",["292"],["293"],"'Fragment' is defined but never used.",["294"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.restaurantId'. Either include them or remove the dependency array.",["295"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["296"],"React Hook useEffect has missing dependencies: 'dispatch' and 'restId'. Either include them or remove the dependency array.",["297"],["298"],["299"],"'ownerErrors' is assigned a value but never used.",["300"],["301"],["302"],["303"],"'menuErrors' is assigned a value but never used.",["304"],["305"],["306"],"'orderStatus' is assigned a value but never used.",["307"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["308"],"React Hook useEffect has missing dependencies: 'dispatch' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["309"],["310"],["311"],["312"],"React Hook useEffect has missing dependencies: 'item.name' and 'preOrder'. Either include them or remove the dependency array.",["313"],"no-global-assign","no-unsafe-negation",{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"318","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"318","fix":"327"},{"desc":"328","fix":"329"},{"desc":"328","fix":"330"},{"desc":"331","fix":"332"},{"desc":"328","fix":"333"},{"desc":"331","fix":"334"},{"desc":"328","fix":"335"},{"desc":"328","fix":"336"},{"desc":"328","fix":"337"},{"desc":"328","fix":"338"},{"desc":"339","fix":"340"},{"desc":"318","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},{"desc":"352","fix":"353"},"Update the dependencies array to be: [dispatch, history, result]",{"range":"354","text":"355"},"Update the dependencies array to be: [dispatch, isAuth]",{"range":"356","text":"357"},"Update the dependencies array to be: [dispatch]",{"range":"358","text":"359"},"Update the dependencies array to be: [dispatch, isAuthenticated]",{"range":"360","text":"361"},{"range":"362","text":"359"},"Update the dependencies array to be: [dispatch, user]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch, isAuthenticated, user.restaurantId]",{"range":"365","text":"366"},{"range":"367","text":"359"},"Update the dependencies array to be: [dispatch, restId]",{"range":"368","text":"369"},{"range":"370","text":"369"},"Update the dependencies array to be: [channel, dispatch, restId]",{"range":"371","text":"372"},{"range":"373","text":"369"},{"range":"374","text":"372"},{"range":"375","text":"369"},{"range":"376","text":"369"},{"range":"377","text":"369"},{"range":"378","text":"369"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"379","text":"380"},{"range":"381","text":"359"},"Update the dependencies array to be: [preOrder, values]",{"range":"382","text":"383"},"Update the dependencies array to be: [dispatch, values]",{"range":"384","text":"385"},"Update the dependencies array to be: [items, values]",{"range":"386","text":"387"},"Update the dependencies array to be: [tableStatus, values]",{"range":"388","text":"389"},"Update the dependencies array to be: [ownerStatus, values]",{"range":"390","text":"391"},"Update the dependencies array to be: [item.name, preOrder]",{"range":"392","text":"393"},[1299,1307],"[dispatch, history, result]",[792,800],"[dispatch, isAuth]",[1235,1237],"[dispatch]",[1188,1205],"[dispatch, isAuthenticated]",[1667,1669],[1354,1360],"[dispatch, user]",[1522,1539],"[dispatch, isAuthenticated, user.restaurantId]",[460,462],[784,786],"[dispatch, restId]",[1275,1277],[829,838],"[channel, dispatch, restId]",[632,634],[905,914],[1443,1445],[1512,1514],[879,887],[1331,1339],[570,579],"[dispatch, orderId]",[882,884],[962,972],"[preOrder, values]",[1149,1151],"[dispatch, values]",[1610,1617],"[items, values]",[703,716],"[tableStatus, values]",[1092,1105],"[ownerStatus, values]",[862,864],"[item.name, preOrder]"]