[{"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\index.js":"1","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\serviceWorker.js":"2","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\App.js":"3","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\app\\store.js":"4","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\utils\\setAuthToken.js":"5","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\ownerSlice.js":"6","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\authSlice.js":"7","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\adminSlice.js":"8","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\tableSlice.js":"9","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\staffSlice.js":"10","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\orderSlice.js":"11","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\menuSlice.js":"12","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js":"13","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\PrivateRoute\\ClientRoute.js":"14","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\Navbar\\Navbar.js":"15","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\SignIn\\SignIn.js":"16","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\OwnerSection\\OwnerSection.js":"17","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\WorkerSection\\WorkerSection.js":"18","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\ClientPage\\ClientPage.js":"19","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\AdminSection\\AdminSection.js":"20","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\Home\\Home.js":"21","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ScanCode\\ScanCode.js":"22","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\utils\\scroll.js":"23","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js":"24","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddMenu\\AddMenu.js":"25","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\StaffList\\StaffList.js":"26","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\RestaurantList\\RestaurantList.js":"27","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\TableList\\TableList.js":"28","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\Menu\\Menu.js":"29","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\OrderList\\OrderList.js":"30","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js":"31","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\MyOrder\\MyOrder.js":"32","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ClientMenu\\ClientMenu.js":"33","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\OwnerList\\OwnerList.js":"34","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddOwner\\AddOwner.js":"35","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\utils\\image.js":"36","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js":"37","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddTable\\AddTable.js":"38","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\Tables\\Tables.js":"39","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\Workers\\Workers.js":"40","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddWorker\\AddWorker.js":"41","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js":"42","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js":"43"},{"size":644,"mtime":1612037033450,"results":"44","hashOfConfig":"45"},{"size":5141,"mtime":1612037033520,"results":"46","hashOfConfig":"45"},{"size":1730,"mtime":1612037033302,"results":"47","hashOfConfig":"45"},{"size":648,"mtime":1612037033436,"results":"48","hashOfConfig":"45"},{"size":263,"mtime":1612037033523,"results":"49","hashOfConfig":"45"},{"size":4610,"mtime":1612037033442,"results":"50","hashOfConfig":"45"},{"size":3905,"mtime":1612037033439,"results":"51","hashOfConfig":"45"},{"size":3567,"mtime":1612111107976,"results":"52","hashOfConfig":"45"},{"size":3380,"mtime":1612037033445,"results":"53","hashOfConfig":"45"},{"size":3457,"mtime":1612038643286,"results":"54","hashOfConfig":"45"},{"size":5950,"mtime":1612037033441,"results":"55","hashOfConfig":"45"},{"size":4376,"mtime":1612037033440,"results":"56","hashOfConfig":"45"},{"size":661,"mtime":1612037033414,"results":"57","hashOfConfig":"45"},{"size":643,"mtime":1612037033412,"results":"58","hashOfConfig":"45"},{"size":4102,"mtime":1612037033398,"results":"59","hashOfConfig":"45"},{"size":2781,"mtime":1612107842259,"results":"60","hashOfConfig":"45"},{"size":2601,"mtime":1612107913516,"results":"61","hashOfConfig":"45"},{"size":4775,"mtime":1612107787444,"results":"62","hashOfConfig":"45"},{"size":2405,"mtime":1612108076587,"results":"63","hashOfConfig":"45"},{"size":1914,"mtime":1612111433167,"results":"64","hashOfConfig":"45"},{"size":5721,"mtime":1612203212944,"results":"65","hashOfConfig":"45"},{"size":2376,"mtime":1612207860290,"results":"66","hashOfConfig":"45"},{"size":347,"mtime":1612037033523,"results":"67","hashOfConfig":"45"},{"size":3940,"mtime":1612037033310,"results":"68","hashOfConfig":"45"},{"size":6322,"mtime":1612108660756,"results":"69","hashOfConfig":"45"},{"size":1519,"mtime":1612039689530,"results":"70","hashOfConfig":"45"},{"size":1169,"mtime":1612037033419,"results":"71","hashOfConfig":"45"},{"size":1546,"mtime":1612039812732,"results":"72","hashOfConfig":"45"},{"size":3486,"mtime":1612037033507,"results":"73","hashOfConfig":"45"},{"size":3869,"mtime":1612108452262,"results":"74","hashOfConfig":"45"},{"size":1374,"mtime":1612107984172,"results":"75","hashOfConfig":"45"},{"size":1732,"mtime":1612037033509,"results":"76","hashOfConfig":"45"},{"size":4489,"mtime":1612041442575,"results":"77","hashOfConfig":"45"},{"size":870,"mtime":1612037033408,"results":"78","hashOfConfig":"45"},{"size":2558,"mtime":1612111760254,"results":"79","hashOfConfig":"45"},{"size":313,"mtime":1612037033522,"results":"80","hashOfConfig":"45"},{"size":2530,"mtime":1612043146929,"results":"81","hashOfConfig":"45"},{"size":1998,"mtime":1612039607072,"results":"82","hashOfConfig":"45"},{"size":752,"mtime":1612037033432,"results":"83","hashOfConfig":"45"},{"size":855,"mtime":1612037033435,"results":"84","hashOfConfig":"45"},{"size":2745,"mtime":1612108523761,"results":"85","hashOfConfig":"45"},{"size":4559,"mtime":1612037033394,"results":"86","hashOfConfig":"45"},{"size":6680,"mtime":1612037033421,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"244rkd",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"90"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"90"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"90"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"90"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"90"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"90"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"90"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"90"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"90"},"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\index.js",[],["192","193"],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\serviceWorker.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\App.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\app\\store.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\utils\\setAuthToken.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\ownerSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\authSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\adminSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\tableSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\staffSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\orderSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\features\\menuSlice.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\PrivateRoute\\PrivateRoute.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\PrivateRoute\\ClientRoute.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\Navbar\\Navbar.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\SignIn\\SignIn.js",["194"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../../features/authSlice';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport './SignIn.css';\r\n\r\nconst SignIn = () => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const { username, password } = values;\r\n  const { authStatus, authErrors } = useSelector((state) => state.auth);\r\n\r\n  let history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login({ history, username, password }));\r\n  };\r\n  return (\r\n    <div className='signin'>\r\n      <div className='signin__container'>\r\n        <h1>Sign In</h1>\r\n        <form>\r\n          <div className='signin__form__group'>\r\n            <h5>Username</h5>\r\n            <span>\r\n              {authStatus.authUser === 'failed' &&\r\n                authErrors.authUser &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'username')[0] &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'username')[0].msg}\r\n            </span>\r\n            <input\r\n              type='text'\r\n              className='signin__container__form__input valid__input'\r\n              name='username'\r\n              value={username}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className='signin__form__group'>\r\n            <h5>Password</h5>\r\n            <span>\r\n              {authStatus.authUser === 'failed' &&\r\n                authErrors.authUser &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'password')[0] &&\r\n                authErrors.authUser.data.filter((err) => err.param === 'password')[0].msg}\r\n            </span>\r\n\r\n            <input\r\n              type='password'\r\n              className='signin__container__form__input valid__input'\r\n              name='password'\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <button type='submit' className='signin__signInButton' onClick={handleClick}>\r\n            {authStatus.authUser === 'loading' ? (\r\n              <IconContext.Provider value={{ className: 'spinner' }}>\r\n                <div>\r\n                  <ImSpinner9 />\r\n                </div>\r\n              </IconContext.Provider>\r\n            ) : (\r\n              <span>Sign In</span>\r\n            )}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\OwnerSection\\OwnerSection.js",["195","196"],"import React, { useEffect, useState } from 'react';\r\nimport openSocket from 'socket.io-client';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRestList } from '../../features/ownerSlice';\r\nimport AddRestaurant from '../../Components/AddRestaurant/AddRestaurant';\r\nimport RestaurantList from '../../Components/RestaurantList/RestaurantList';\r\nimport AddMenu from '../../Components/AddMenu/AddMenu';\r\nimport TableList from '../../Components/TableList/TableList';\r\nimport StaffList from '../../Components/StaffList/StaffList';\r\nimport OrderList from '../../Components/OrderList/OrderList';\r\n\r\nimport Menu from '../Menu/Menu';\r\nimport './OwnerSection.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport MyRestaurant from '../MyRestaurant/MyRestaurant';\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'https://localhost:5000';\r\n\r\nconst OwnerSection = () => {\r\n  const [channel, setChannel] = useState(null);\r\n  const { isAuthenticated } = useSelector((state) => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(getRestList());\r\n    }\r\n  }, [isAuthenticated]);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/owner-space`, {\r\n      transports: ['websocket', 'polling'],\r\n      secure: true,\r\n    });\r\n    setChannel(socket);\r\n    socket.on('connect', () => {\r\n      console.log(socket.id);\r\n    });\r\n    socket.on('restaurants', (data) => {\r\n      console.log('from server', data.action);\r\n      dispatch(getRestList());\r\n    });\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  const { restList } = useSelector((state) => state.owner);\r\n  return (\r\n    <div className='owner'>\r\n      <Switch>\r\n        <Route exact path='/owner-section'>\r\n          <AddRestaurant />\r\n          <RestaurantList restaurants={restList} />\r\n        </Route>\r\n        <Route exact path='/owner-section/menu'>\r\n          <AddMenu />\r\n        </Route>\r\n        <Route exact path='/owner-section/rest-menu'>\r\n          <Menu />\r\n        </Route>\r\n        <Route exact path='/owner-section/my-rest'>\r\n          <MyRestaurant />\r\n        </Route>\r\n        <Route exact path='/owner-section/tables'>\r\n          <TableList channel={channel} />\r\n        </Route>\r\n        <Route exact path='/owner-section/staff'>\r\n          <StaffList channel={channel} />\r\n        </Route>\r\n        <Route exact path='/owner-section/orders'>\r\n          <OrderList />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OwnerSection;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\WorkerSection\\WorkerSection.js",["197","198","199","200"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport openSocket from 'socket.io-client';\r\nimport moment from 'moment';\r\n\r\nimport './WorkerSection.css';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport { getAllOrders, checkoutOrder } from '../../features/orderSlice';\r\nimport { getTables } from '../../features/tableSlice';\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'https://localhost:5000';\r\n\r\nconst WorkerSection = () => {\r\n  const [filterBy, setFilterBy] = useState('');\r\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: ['websocket', 'polling'],\r\n      secure: true,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (user) {\r\n      socket.emit('joinRoom', { restId: user.restaurantId });\r\n      console.log('restid', user.restaurantId);\r\n    }\r\n    socket.on('message', (data) => {\r\n      console.log('new order------------', data);\r\n      dispatch(getAllOrders(user.restaurantId));\r\n    });\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, [user]);\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      dispatch(getTables(user.restaurantId));\r\n      dispatch(getAllOrders(user.restaurantId));\r\n    }\r\n  }, [isAuthenticated]);\r\n  const { listTable, tableStatus } = useSelector((state) => state.table);\r\n  useEffect(() => {\r\n    if (listTable && listTable.length > 0) setFilterBy(listTable[0].tableNumber);\r\n  }, [listTable]);\r\n  const { orders, orderStatus } = useSelector((state) => state.order);\r\n\r\n  const handleChange = (e) => {\r\n    setFilterBy(e.target.value);\r\n  };\r\n  const handleClick = async (id) => {\r\n    await dispatch(checkoutOrder({ orderId: id }));\r\n    await dispatch(getAllOrders(user.restaurantId));\r\n  };\r\n  return (\r\n    <div className='worker'>\r\n      <h2>List of orders</h2>\r\n      <div className='worker__tables'>\r\n        <p>Select Your Table</p>\r\n        {tableStatus.getAll === 'loading' ? (\r\n          <IconContext.Provider value={{ className: 'spinner' }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : tableStatus.getAll === 'succeded' ? (\r\n          <select name='filterBy' onChange={handleChange}>\r\n            {listTable && listTable.length > 0 ? (\r\n              listTable.map((tab, i) => (\r\n                <option key={tab._id} defaultValue value={tab.tableNumber}>\r\n                  table {tab.tableNumber}\r\n                </option>\r\n              ))\r\n            ) : (\r\n              <option>no table</option>\r\n            )}\r\n          </select>\r\n        ) : (\r\n          <h5>Something went wrong..</h5>\r\n        )}\r\n      </div>\r\n      <div className='worker__content'>\r\n        {orderStatus.getAll === 'loading' ? (\r\n          <IconContext.Provider value={{ className: 'spinner--large' }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : orderStatus.getAll === 'succeded' ? (\r\n          orders &&\r\n          orders\r\n            .filter((order) => {\r\n              if (!order.paid && order.tableNumber === Number(filterBy)) return order;\r\n            })\r\n            .slice(0)\r\n            .reverse()\r\n            .map((order) => {\r\n              return (\r\n                <div className='worker__orders' key={order._id}>\r\n                  {order.items\r\n                    .slice(0)\r\n                    .reverse()\r\n                    .map((item) => (\r\n                      <div className='worker__orders__items' key={item._id}>\r\n                        <div className='worker__orders__items__info'>\r\n                          <p>{item.name}</p>\r\n                          <p>{item.quantity}</p>\r\n                        </div>\r\n                        {item.comment && (\r\n                          <p className='comment'>\r\n                            <span>preferences: </span>\r\n                            {item.comment}\r\n                          </p>\r\n                        )}\r\n\r\n                        <span className='timeline'>\r\n                          {moment(item.createdAt).fromNow()}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  <button onClick={() => handleClick(order._id)}>Checkout order</button>\r\n                </div>\r\n              );\r\n            })\r\n        ) : (\r\n          <h5>something went wrong..</h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkerSection;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\ClientPage\\ClientPage.js",["201","202"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport openSocket from 'socket.io-client';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport ClientMenu from '../../Components/ClientMenu/ClientMenu';\r\nimport MyOrder from '../MyOrder/MyOrder';\r\nimport { getMenuByRest } from '../../features/menuSlice';\r\nimport './ClientPage.css';\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'https://localhost:5000';\r\n\r\nconst ClientPage = () => {\r\n  const dispatch = useDispatch();\r\n  const restId = localStorage.getItem('restId');\r\n  useEffect(() => {\r\n    dispatch(getMenuByRest(restId));\r\n  }, []);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: ['websocket', 'polling'],\r\n      secure: true,\r\n    });\r\n    socket.on('connect', () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (restId) socket.emit('joinRoom', { restId });\r\n    socket.on('newMenu', (data) => {\r\n      console.log('newmenu', data);\r\n      dispatch(getMenuByRest(restId));\r\n    });\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, []);\r\n\r\n  const { menu, menuStatus } = useSelector((state) => state.menu);\r\n  const clientMenu =\r\n    menuStatus.getMenu === 'loading' ? (\r\n      <IconContext.Provider value={{ className: 'spinner--large' }}>\r\n        <div>\r\n          <ImSpinner9 />\r\n        </div>\r\n      </IconContext.Provider>\r\n    ) : menuStatus.getMenu === 'succeded' && menu ? (\r\n      menu.menu.items.length === 0 ? (\r\n        <p> Ce menu n'est pas encore disponible</p>\r\n      ) : (\r\n        <ClientMenu menu={menu} restaurantId={restId} />\r\n      )\r\n    ) : (\r\n      <h5>Something went wrong...</h5>\r\n    );\r\n\r\n  return (\r\n    <div className='client-section'>\r\n      <Switch>\r\n        <Route exact path='/client-page'>\r\n          <div className='client-section__info'>\r\n            <h2>Menu</h2>\r\n\r\n            <img src={'/' + (menu && menu.menu.restaurant.logo)} alt='logo' />\r\n            <h2>{menu && menu.menu.restaurant.name}</h2>\r\n          </div>\r\n          {clientMenu}\r\n        </Route>\r\n        <Route exact path='/client-page/order'>\r\n          <MyOrder />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientPage;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\AdminSection\\AdminSection.js",["203","204","205"],"import React, { useEffect } from 'react';\r\nimport AddOwner from '../../Components/AddOwner/AddOwner';\r\nimport OwnerList from '../../Components/OwnerList/OwnerList';\r\nimport { getAllOwners } from '../../features/adminSlice';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport openSocket from 'socket.io-client';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport './AdminSection.css';\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'https://localhost:5000';\r\n\r\nconst AdminSection = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  let isAuth = useSelector((state) => state.auth.isAuthenticated);\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      dispatch(getAllOwners());\r\n    }\r\n  }, [isAuth]);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/admin-space`, {\r\n      transports: ['websocket', 'polling'],\r\n      secure: true,\r\n    });\r\n    socket.on('connect', () => {\r\n      console.log(socket.id);\r\n    });\r\n    socket.on('owners', (data) => {\r\n      console.log('from server', data.action);\r\n      dispatch(getAllOwners());\r\n    });\r\n\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, []);\r\n\r\n  const { owners, adminStatus, adminErrors } = useSelector((state) => state.admin);\r\n\r\n  return (\r\n    <div className='admin'>\r\n      <AddOwner />\r\n\r\n      {adminStatus.getAll === 'loading' ? (\r\n        <IconContext.Provider value={{ className: 'spinner--large' }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : adminStatus.getAll === 'failed' ? (\r\n        <h2>something went wrong</h2>\r\n      ) : adminStatus.getAll === 'succeded' && owners.length > 0 ? (\r\n        <OwnerList owners={owners} />\r\n      ) : (\r\n        <h5>you have no clients</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSection;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\Home\\Home.js",["206"],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ScanCode\\ScanCode.js",["207","208","209"],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\utils\\scroll.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddRestaurant\\AddRestaurant.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddMenu\\AddMenu.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\StaffList\\StaffList.js",["210","211"],"import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport AddWorker from '../AddWorker/AddWorker';\r\nimport Workers from '../Workers/Workers';\r\nimport { getAllWorkers } from '../../features/staffSlice';\r\nimport './StaffList.css';\r\n\r\nconst StaffList = ({ channel }) => {\r\n  const location = useLocation();\r\n  const { restId } = location.state;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAllWorkers(restId));\r\n  }, []);\r\n  const { workers, workerStatus } = useSelector((state) => state.staff);\r\n  useEffect(() => {\r\n    if (channel) {\r\n      channel.on('workers', (data) => {\r\n        console.log('workers', data.action);\r\n        dispatch(getAllWorkers(restId));\r\n      });\r\n    }\r\n  }, [channel]);\r\n\r\n  return (\r\n    <div className='staff'>\r\n      <AddWorker restId={restId} />\r\n      {workerStatus.getAll === 'loading' ? (\r\n        <IconContext.Provider value={{ className: 'spinner--large' }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : workerStatus.getAll === 'failed' ? (\r\n        <h2>something went wrong</h2>\r\n      ) : workerStatus.getAll === 'succeded' && workers.length > 0 ? (\r\n        <Workers list={workers} />\r\n      ) : (\r\n        <h5>you have no workers</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StaffList;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\RestaurantList\\RestaurantList.js",["212"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport RestaurantListItem from \"../RestaurantListItem/RestaurantListIem\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./RestaurantList.css\";\r\n\r\nconst RestaurantList = ({ restaurants }) => {\r\n  const { ownerStatus, ownerErrors } = useSelector((state) => state.owner);\r\n  return (\r\n    <div className=\"restlist\">\r\n      <h3>List fo Restaurants</h3>\r\n      <div className=\"restlist__list\">\r\n        {ownerStatus.getList === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : ownerStatus.getList === \"failed\" ? (\r\n          <h2>something went wrong</h2>\r\n        ) : ownerStatus.getList === \"succeded\" && restaurants.length > 0 ? (\r\n          restaurants.map((rest) => (\r\n            <RestaurantListItem key={rest._id} rest={rest} />\r\n          ))\r\n        ) : (\r\n          <h5>you have no restaurants</h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantList;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\TableList\\TableList.js",["213"],"import React, { useEffect } from 'react';\r\nimport AddTable from '../AddTable/AddTable';\r\nimport Tables from '../Tables/Tables';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport { getTables } from '../../features/tableSlice';\r\nimport './TableList.css';\r\n\r\nconst TableList = ({ channel }) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const { restId } = location.state;\r\n  useEffect(() => {\r\n    dispatch(getTables(restId));\r\n  }, [dispatch, restId]);\r\n  useEffect(() => {\r\n    if (channel) {\r\n      channel.on('tables', (data) => {\r\n        console.log('tables', data.action);\r\n        dispatch(getTables(restId));\r\n      });\r\n    }\r\n  }, [channel]);\r\n\r\n  const { listTable, tableStatus } = useSelector((state) => state.table);\r\n  return (\r\n    <div className='table-list'>\r\n      <AddTable restId={restId} tables={listTable} />\r\n      {tableStatus.getAll === 'loading' ? (\r\n        <IconContext.Provider value={{ className: 'spinner--large' }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : tableStatus.getAll === 'failed' ? (\r\n        <h2>something went wrong</h2>\r\n      ) : tableStatus.getAll === 'succeded' && listTable.length > 0 ? (\r\n        <Tables tables={listTable} />\r\n      ) : (\r\n        <h5>you have no tables yet</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableList;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\Menu\\Menu.js",["214"],"import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ItemsMenu from \"../../Components/ItemsMenu/ItemsMenu\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport \"./Menu.css\";\r\n\r\nconst Menu = ({ menu, logo }) => {\r\n  const { menuStatus, menuErrors } = useSelector((state) => state.menu);\r\n  return (\r\n    <div className=\"menu\">\r\n      {/* <img src={'/' + logo} alt='logo' /> */}\r\n      <p className=\"menu__cat\">Entree</p>\r\n      <div className=\"menu__cat__list\">\r\n        {menuStatus.getMenu === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : menuStatus.getMenu === \"failed\" ? (\r\n          <h2>Something went wrong..</h2>\r\n        ) : menuStatus.getMenu === \"succeded\" &&\r\n          menu &&\r\n          menu.menu.items.length > 0 ? (\r\n          menu.menu.items\r\n            .filter((item) => item.categorie === \"entree\")\r\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\r\n        ) : (\r\n          <h5>no entree found</h5>\r\n        )}\r\n      </div>\r\n\r\n      <p className=\"menu__cat\">Plat</p>\r\n      <div className=\"menu__cat__list\">\r\n        {menuStatus.getMenu === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : menuStatus.getMenu === \"failed\" ? (\r\n          <h2>Something went wrong..</h2>\r\n        ) : menuStatus.getMenu === \"succeded\" &&\r\n          menu &&\r\n          menu.menu.items.length > 0 ? (\r\n          menu.menu.items\r\n            .filter((item) => item.categorie === \"plat\")\r\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\r\n        ) : (\r\n          <h5>no plat found</h5>\r\n        )}\r\n      </div>\r\n\r\n      <p className=\"menu__cat\">Boisson</p>\r\n      <div className=\"menu__cat__list\">\r\n        {menuStatus.getMenu === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : menuStatus.getMenu === \"failed\" ? (\r\n          <h2>Something went wrong..</h2>\r\n        ) : menuStatus.getMenu === \"succeded\" &&\r\n          menu &&\r\n          menu.menu.items.length > 0 ? (\r\n          menu.menu.items\r\n            .filter((item) => item.categorie === \"boisson\")\r\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\r\n        ) : (\r\n          <h5>no boisson found</h5>\r\n        )}\r\n      </div>\r\n\r\n      <p className=\"menu__cat\">Dessert</p>\r\n      <div className=\"menu__cat__list\">\r\n        {menuStatus.getMenu === \"loading\" ? (\r\n          <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n            <div>\r\n              <ImSpinner9 />\r\n            </div>\r\n          </IconContext.Provider>\r\n        ) : menuStatus.getMenu === \"failed\" ? (\r\n          <h2>Something went wrong..</h2>\r\n        ) : menuStatus.getMenu === \"succeded\" &&\r\n          menu &&\r\n          menu.menu.items.length > 0 ? (\r\n          menu.menu.items\r\n            .filter((item) => item.categorie === \"Dessert\")\r\n            .map((item) => <ItemsMenu key={item._id} item={item} />)\r\n        ) : (\r\n          <h5>no dessert found</h5>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\OrderList\\OrderList.js",["215","216"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport { getAllOrders } from '../../features/orderSlice';\r\nimport './OrderList.css';\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'https://localhost:5000';\r\n\r\nconst OrderList = () => {\r\n  const [paid, setPaid] = useState(false);\r\n  const [filterDate, setFilterDate] = useState({\r\n    today: moment().format(),\r\n    filterByDate: false,\r\n  });\r\n  const { today, filterByDate } = filterDate;\r\n  const location = useLocation();\r\n  const { restId } = location.state;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: ['websocket', 'polling'],\r\n      secure: true,\r\n    });\r\n\r\n    socket.on('connect', () => {\r\n      console.log(socket.id);\r\n    });\r\n    if (restId) {\r\n      socket.emit('joinRoom', { restId: restId });\r\n      console.log('restid', restId);\r\n    }\r\n\r\n    socket.on('message', (data) => {\r\n      console.log('new order------------', data);\r\n\r\n      dispatch(getAllOrders(restId));\r\n    });\r\n    // return () => {\r\n    //   socket.disconnect();\r\n    // };\r\n  }, []);\r\n  useEffect(() => {\r\n    dispatch(getAllOrders(restId));\r\n  }, []);\r\n  const { orders, orderStatus } = useSelector((state) => state.order);\r\n  const handleFilter = (filterBy) => {\r\n    setPaid(filterBy);\r\n  };\r\n  const handleDate = () => {\r\n    setFilterDate({ ...filterDate, filterByDate: !filterByDate });\r\n  };\r\n\r\n  return (\r\n    <div className='orders'>\r\n      <h2>List of Orders</h2>\r\n      <div className='orders__buttons'>\r\n        <button\r\n          className={!paid ? 'orders__buttons--active' : 'orders__buttons--normal'}\r\n          onClick={() => handleFilter(false)}>\r\n          Non Payé\r\n        </button>\r\n        <button\r\n          className={paid ? 'orders__buttons--active' : 'orders__buttons--normal'}\r\n          onClick={() => handleFilter(true)}>\r\n          Payé\r\n        </button>\r\n        <button\r\n          className={filterByDate ? 'orders__buttons--active' : 'orders__buttons--normal'}\r\n          onClick={handleDate}>\r\n          Today's orders\r\n        </button>\r\n      </div>\r\n\r\n      {orderStatus.getAll === 'loading' ? (\r\n        <IconContext.Provider value={{ className: 'spinner--large' }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : orderStatus.getAll === 'succeded' ? (\r\n        orders &&\r\n        orders\r\n          .filter(\r\n            (order) =>\r\n              order.paid === paid &&\r\n              (filterByDate\r\n                ? moment(order.createdAt).isSame(today, 'day')\r\n                : moment(order.createdAt).isBefore(today, 'day'))\r\n          )\r\n          .map((order) => (\r\n            <div className='orders__items' key={order._id}>\r\n              <p>Table {order.tableNumber}</p>\r\n              {order.items.map((item) => (\r\n                <div className='orders__items__single' key={item._id}>\r\n                  <div className='orders__items__info'>\r\n                    <p>{item.name}</p>\r\n                    <p>{item.quantity}</p>\r\n                    <p className='order__comment'>{item.comment}</p>\r\n                  </div>\r\n                  <p className='orders__items__time'>\r\n                    {moment(item.createdAt).fromNow()}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n              <p>Total : {order.total}</p>\r\n            </div>\r\n          ))\r\n      ) : (\r\n        <h5>Something went wrong..</h5>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderList;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\MyRestaurant\\MyRestaurant.js",["217","218"],"import React, { useEffect } from 'react';\r\nimport AddMenu from '../../Components/AddMenu/AddMenu';\r\nimport Menu from '../Menu/Menu';\r\nimport { getMenuByRest } from '../../features/menuSlice';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router-dom';\r\nimport openSocket from 'socket.io-client';\r\n\r\nimport './MyRestaurant.css';\r\nconst socketURL =\r\n  process.env.NODE_ENV === 'production'\r\n    ? window.location.hostname\r\n    : 'https://localhost:5000';\r\n\r\nconst MyRestaurant = () => {\r\n  const location = useLocation();\r\n  const { restId, logo } = location.state;\r\n  const dispatch = useDispatch();\r\n  const { menu } = useSelector((state) => state.menu);\r\n  useEffect(() => {\r\n    dispatch(getMenuByRest(restId));\r\n  }, [restId]);\r\n  useEffect(() => {\r\n    let socket = openSocket(`${socketURL}/restaurant-space`, {\r\n      transports: ['websocket', 'polling'],\r\n      secure: true,\r\n    });\r\n    socket.on('connect', () => {\r\n      console.log(socket.id);\r\n      socket.emit('joinRoom', { restId });\r\n    });\r\n    socket.on('newMenu', (data) => {\r\n      dispatch(getMenuByRest(restId));\r\n    });\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, [restId]);\r\n  return (\r\n    <div className='my-rest'>\r\n      <AddMenu />\r\n      <Menu menu={menu} logo={logo} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyRestaurant;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\pages\\MyOrder\\MyOrder.js",["219"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { getOrderById } from \"../../features/orderSlice\";\r\nimport \"./MyOrder.css\";\r\n\r\nconst MyOrder = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const { orderId } = location.state;\r\n  useEffect(() => {\r\n    console.log(\"orederid\", orderId);\r\n    dispatch(getOrderById(orderId));\r\n  }, [orderId]);\r\n  const { order, orderStatus } = useSelector((state) => state.order);\r\n  return (\r\n    <div className=\"order\">\r\n      <h1>A Payer</h1>\r\n      {orderStatus.getOne === \"loading\" ? (\r\n        <IconContext.Provider value={{ className: \"spinner--large\" }}>\r\n          <div>\r\n            <ImSpinner9 />\r\n          </div>\r\n        </IconContext.Provider>\r\n      ) : orderStatus.getOne === \"succeded\" ? (\r\n        order &&\r\n        order.order.items.map((item) => (\r\n          <div className=\"order__item\" key={item._id}>\r\n            <p>{item.name}</p>\r\n            <div className=\"order__item__info\">\r\n              <p>{item.quantity}</p>\r\n              <p>{item.price} DT</p>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h5>somthing went wrong..</h5>\r\n      )}\r\n      <div className=\"order__item__total\">\r\n        <p>total:</p>\r\n        <p>\r\n          {orderStatus.getOne === \"loading\" ? (\r\n            <span>loading..</span>\r\n          ) : orderStatus.getOne === \"succeded\" ? (\r\n            order && order.order.total\r\n          ) : null}\r\n          DT\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyOrder;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ClientMenu\\ClientMenu.js",["220","221"],"import React, { useEffect, useState, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { createOrder, updateOrder, getOrderById } from '../../features/orderSlice';\r\nimport ClientMenuItem from '../../Components/ClientMenuItem/ClientMenuItem';\r\nimport './ClientMenu.css';\r\n\r\nconst ClientMenu = ({ menu }) => {\r\n  const [values, setValues] = useState({\r\n    orderId: null,\r\n    items: [],\r\n    total: 0,\r\n    categorie: 'entree',\r\n  });\r\n  const { items, total, categorie } = values;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const id = localStorage.getItem('id');\r\n    if (id) {\r\n      dispatch(getOrderById(id));\r\n      setValues({ ...values, orderId: id });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (items.length > 0) {\r\n      let totalCost = items.reduce((acc, curv) => Number(acc) + Number(curv.price), 0);\r\n      console.log(totalCost);\r\n      setValues({ ...values, total: totalCost });\r\n    } else {\r\n      setValues({ ...values, total: 0 });\r\n    }\r\n  }, [items]);\r\n  const { order } = useSelector((state) => state.order);\r\n  const history = useHistory();\r\n  const restId = localStorage.getItem('restId');\r\n  const tableNumber = localStorage.getItem('tableNumber');\r\n\r\n  const handleAdd = (name, quantity, price, comment, createdAt) => {\r\n    const itemIndex = items.findIndex((item) => item.name === name);\r\n    let newList = [...items];\r\n    if (itemIndex === -1 && quantity > 0) {\r\n      setValues({\r\n        ...values,\r\n        items: [...items, { name, price, quantity, comment, createdAt }],\r\n      });\r\n    } else {\r\n      if (quantity === 0) {\r\n        newList.splice(itemIndex, 1);\r\n      } else {\r\n        newList[itemIndex] = {\r\n          ...newList[itemIndex],\r\n          quantity,\r\n          price,\r\n          comment,\r\n          createdAt,\r\n        };\r\n      }\r\n      setValues({ ...values, items: newList });\r\n    }\r\n  };\r\n\r\n  const handleButton = () => {\r\n    const orderId = localStorage.getItem('id');\r\n    if (items.length > 0) {\r\n      if (orderId && order && !order.order.paid) {\r\n        dispatch(updateOrder({ data: { items, total, orderId }, history }));\r\n      } else {\r\n        dispatch(createOrder({ data: { items, total, restId, tableNumber }, history }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const orderLink = order && !order.order.paid && (\r\n    <Link\r\n      to={{\r\n        pathname: '/client-page/order',\r\n\r\n        state: { orderId: order.order._id },\r\n      }}>\r\n      <span className='client-menu__link'>Mes choix</span>\r\n    </Link>\r\n  );\r\n  const menuItems =\r\n    menu && menu.menu.items ? (\r\n      <Fragment>\r\n        {menu.menu.items.filter((item) => item.categorie === categorie).length > 0 && (\r\n          <Fragment>\r\n            <p className='client-menu__categorie'>{categorie}</p>\r\n            <div className='client-menu__sub'>\r\n              {menu.menu.items\r\n                .filter((item) => item.categorie === categorie)\r\n                .map((item) => (\r\n                  <ClientMenuItem key={item._id} item={item} addToCommand={handleAdd} />\r\n                ))}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    ) : (\r\n      <h5>Loading...</h5>\r\n    );\r\n  const handleChoice = (choice) => {\r\n    setValues({ ...values, categorie: choice });\r\n  };\r\n  return (\r\n    <div className='client-menu'>\r\n      <div className='client-menu__menu'>\r\n        <button\r\n          className={categorie === 'entree' ? 'active-categorie' : 'inactive-categorie'}\r\n          onClick={() => handleChoice('entree')}>\r\n          entrée\r\n        </button>\r\n        <button\r\n          className={categorie === 'plat' ? 'active-categorie' : 'inactive-categorie'}\r\n          onClick={() => handleChoice('plat')}>\r\n          plat\r\n        </button>\r\n        <button\r\n          className={categorie === 'boisson' ? 'active-categorie' : 'inactive-categorie'}\r\n          onClick={() => handleChoice('boisson')}>\r\n          boisson\r\n        </button>\r\n        <button\r\n          className={categorie === 'Dessert' ? 'active-categorie' : 'inactive-categorie'}\r\n          onClick={() => handleChoice('Dessert')}>\r\n          dessert\r\n        </button>\r\n      </div>\r\n      <div className='client-menu__items'>{menuItems}</div>\r\n      <div className='client-menu__nav'>\r\n        {orderLink}\r\n        <button onClick={() => handleButton()}>Commander</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMenu;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\OwnerList\\OwnerList.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddOwner\\AddOwner.js",["222"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport { createOwner } from '../../features/adminSlice';\r\nimport './AddOwner.css';\r\n\r\nconst AddOwner = () => {\r\n  const [values, setValues] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const { username, password } = values;\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const { adminStatus, adminErrors } = useSelector((state) => state.admin);\r\n  useEffect(() => {\r\n    if (adminStatus.create === 'succeded') {\r\n      setValues({ username: '', password: '' });\r\n    }\r\n  }, [adminStatus]);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createOwner({ username, password }));\r\n  };\r\n  return (\r\n    <div className='addowner'>\r\n      <h3>Create new Owner</h3>\r\n      <form>\r\n        <div className='addowner__form__group'>\r\n          <h5>Username</h5>\r\n\r\n          <span>\r\n            {adminStatus.create === 'failed' &&\r\n              adminErrors.create &&\r\n              adminErrors.create.data.filter((err) => err.param === 'username')[0].msg}\r\n          </span>\r\n\r\n          <input\r\n            type='text'\r\n            className='addowner__container__form__input valid__input'\r\n            name='username'\r\n            value={username}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className='addowner__form__group'>\r\n          <h5>Password</h5>\r\n\r\n          <span>\r\n            {adminStatus.create === 'failed' &&\r\n              adminErrors.create &&\r\n              adminErrors.create.data.filter((err) => err.param === 'password')[0].msg}\r\n          </span>\r\n\r\n          <input\r\n            type='password'\r\n            className='addowner__container__form__input valid__input'\r\n            name='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <button type='submit' className='addowner__addownerButton' onClick={handleSubmit}>\r\n          {adminStatus.create === 'loading' ? (\r\n            <IconContext.Provider value={{ className: 'spinner' }}>\r\n              <div>\r\n                <ImSpinner9 />\r\n              </div>\r\n            </IconContext.Provider>\r\n          ) : (\r\n            <span>Add</span>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOwner;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\utils\\image.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ClientMenuItem\\ClientMenuItem.js",["223"],"import React, { useState, useEffect } from 'react';\r\nimport './ClientMenuItem.css';\r\nimport moment from 'moment';\r\n\r\nconst ClientMenuItem = ({ item, addToCommand }) => {\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [food, setFood] = useState({\r\n    price: 0,\r\n    quantity: 0,\r\n    comment: '',\r\n  });\r\n  const { price, quantity, comment } = food;\r\n  useEffect(() => {\r\n    let createdAt = moment().format();\r\n    addToCommand(item.name, quantity, price, comment, createdAt);\r\n  }, [price, comment]);\r\n  const handleAdd = (itemPrice) => {\r\n    setFood({\r\n      ...food,\r\n      quantity: Number(quantity) + 1,\r\n      price: Number(price) + Number(itemPrice),\r\n    });\r\n  };\r\n  const handleComment = (e) => {\r\n    setFood({ ...food, comment: e.target.value });\r\n  };\r\n  const handleShow = () => {\r\n    setShowInput(!showInput);\r\n  };\r\n  const handleRemove = (itemPrice) => {\r\n    if (quantity > 0)\r\n      setFood({\r\n        ...food,\r\n        quantity: Number(quantity) - 1,\r\n        price: Number(price) - Number(itemPrice),\r\n      });\r\n  };\r\n  return (\r\n    <div className='client-menu-item'>\r\n      <div className='client-menu-item__group'>\r\n        <img src={item.image} alt='food' />\r\n        <div className='client-menu-item__info'>\r\n          <p>{item.name}</p>\r\n          <p>{item.price} dt</p>\r\n          <span className='client-menu-item__price'>Total: {price > 0 ? price : 0}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <p className='client-menu-item__desc'>{item.description}</p>\r\n\r\n      <div className='client-menu-item__buttons'>\r\n        <button\r\n          className='client-menu-item__button'\r\n          onClick={() => handleRemove(item.price)}>\r\n          -\r\n        </button>\r\n        <span>{quantity}</span>\r\n        <button\r\n          className='client-menu-item__button'\r\n          onClick={() => handleAdd(item.price)}>\r\n          +\r\n        </button>\r\n      </div>\r\n      <div className='client-menu-item__comment'>\r\n        {quantity > 0 ? (\r\n          <button className='comment__button' onClick={handleShow}>\r\n            ajouter un commentaire\r\n          </button>\r\n        ) : (\r\n          <button className='comment__button' onClick={handleShow} disabled>\r\n            ajouter un commentaire\r\n          </button>\r\n        )}\r\n\r\n        {showInput && quantity > 0 && (\r\n          <textarea value={comment} onChange={handleComment} rows='3' cols='20'>\r\n            commentaire..\r\n          </textarea>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientMenuItem;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddTable\\AddTable.js",["224"],"import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTable } from '../../features/tableSlice';\r\nimport { ImSpinner9 } from 'react-icons/im';\r\nimport { IconContext } from 'react-icons';\r\nimport './AddTable.css';\r\n\r\nconst AddTable = ({ restId }) => {\r\n  const [values, setValues] = useState({\r\n    tableNumber: '',\r\n    tableCode: '',\r\n  });\r\n  const { tableNumber, tableCode } = values;\r\n  const dispatch = useDispatch();\r\n  const { tableStatus, tableErrors } = useSelector((state) => state.table);\r\n  useEffect(() => {\r\n    if (tableStatus.create === 'succeded')\r\n      setValues({ ...values, tableNumber: '', tableCode: '' });\r\n  }, [tableStatus]);\r\n\r\n  const handleChange = (e) => {\r\n    setValues({\r\n      tableNumber: e.target.value,\r\n      tableCode: restId + '+' + e.target.value,\r\n    });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addTable({ tableNumber, tableCode, restaurant: restId }));\r\n  };\r\n  return (\r\n    <div className='add-table'>\r\n      <h3>Table creation </h3>\r\n      <form className='add-table__form'>\r\n        <div className='add-table__form__group'>\r\n          <h5>Table Number</h5>\r\n          <input\r\n            type='number'\r\n            name='tableNumber'\r\n            value={tableNumber}\r\n            onChange={handleChange}\r\n            min='1'\r\n          />\r\n\r\n          {tableStatus.create === 'failed' && (\r\n            <span className='add-table-error'> {tableErrors.create.data[0].msg}</span>\r\n          )}\r\n        </div>\r\n        <button type='submit' onClick={handleSubmit}>\r\n          {tableStatus.create === 'loading' ? (\r\n            <IconContext.Provider value={{ className: 'spinner' }}>\r\n              <div>\r\n                <ImSpinner9 />\r\n              </div>\r\n            </IconContext.Provider>\r\n          ) : (\r\n            <span>Add table</span>\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTable;\r\n","C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\Tables\\Tables.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\Workers\\Workers.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\AddWorker\\AddWorker.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\ItemsMenu\\ItemsMenu.js",[],"C:\\Users\\IYADHHK\\Desktop\\React-WorkSpace\\qrRest\\client\\src\\Components\\RestaurantListItem\\RestaurantListIem.js",["225"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteRestaurant, editRestaurant } from \"../../features/ownerSlice\";\r\nimport { generateBase64FromImage } from \"../../utils/image\";\r\nimport { ImSpinner9 } from \"react-icons/im\";\r\nimport { MdRestaurantMenu } from \"react-icons/md\";\r\n\r\nimport \"./RestaurantListItem.css\";\r\nimport { FaUsersCog } from \"react-icons/fa\";\r\nimport { IconContext } from \"react-icons\";\r\nimport { GoListUnordered } from \"react-icons/go\";\r\nimport { GiTable } from \"react-icons/gi\";\r\n\r\nconst RestaurantListIem = ({ rest }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    preview: \"\",\r\n    address: \"\",\r\n    edit: false,\r\n  });\r\n  const { name, image, preview, address, edit } = values;\r\n  const dispatch = useDispatch();\r\n  const { ownerStatus, ownerErrors } = useSelector((state) => state.owner);\r\n  useEffect(() => {\r\n    if (ownerStatus.edit === \"succeded\")\r\n      setValues({ ...values, edit: false, preview: null });\r\n  }, [ownerStatus]);\r\n  const handleDelete = (id) => {\r\n    dispatch(deleteRestaurant({ restId: id }));\r\n  };\r\n  const handleFile = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file)\r\n      generateBase64FromImage(file)\r\n        .then((b64) => {\r\n          setValues({ ...values, image: file, preview: b64 });\r\n        })\r\n        .catch((e) => {\r\n          setValues({ ...values, preview: null });\r\n        });\r\n  };\r\n  const handleData = (e) => {\r\n    setValues({ ...values, [e.target.name]: e.target.value });\r\n  };\r\n  const handleEdit = (rest) => {\r\n    if (!edit) {\r\n      setValues({\r\n        name: rest.name,\r\n        address: rest.address,\r\n        edit: true,\r\n      });\r\n    } else {\r\n      let formData = new FormData();\r\n      formData.append(\"name\", name);\r\n      formData.append(\"address\", address);\r\n      formData.append(\"image\", image);\r\n      formData.append(\"restId\", rest._id);\r\n      formData.append(\"lastImg\", rest.logo);\r\n      dispatch(editRestaurant(formData));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"restlist__item\">\r\n      <div className=\"restlist__item__form\">\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>restaurant:</h5>\r\n          <span className=\"error-message\">\r\n            {edit &&\r\n              ownerStatus.edit === \"failed\" &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"name\")[0] &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"name\")[0]\r\n                .msg}\r\n          </span>\r\n          {edit ? (\r\n            <input type=\"text\" name=\"name\" value={name} onChange={handleData} />\r\n          ) : (\r\n            <p>{rest.name}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>Address:</h5>\r\n          <span className=\"error-message\">\r\n            {edit &&\r\n              ownerStatus.edit === \"failed\" &&\r\n              ownerErrors.edit.data.filter(\r\n                (err) => err.param === \"address\"\r\n              )[0] &&\r\n              ownerErrors.edit.data.filter((err) => err.param === \"address\")[0]\r\n                .msg}\r\n          </span>\r\n          {edit ? (\r\n            <input\r\n              type=\"text\"\r\n              name=\"address\"\r\n              value={address}\r\n              onChange={handleData}\r\n            />\r\n          ) : (\r\n            <p>{rest.address}</p>\r\n          )}\r\n        </div>\r\n        <div className=\"restlist__item__form__group\">\r\n          <h5>Logo</h5>\r\n\r\n          {edit ? (\r\n            <input type=\"file\" name=\"image\" onChange={handleFile} />\r\n          ) : (\r\n            <img className=\"image-prev\" src={rest.logo} alt=\"\" />\r\n          )}\r\n          {preview && <img className=\"image-prev\" src={preview} alt=\" \" />}\r\n        </div>\r\n        <div className=\"restlist__item__form__button\">\r\n          <button onClick={() => handleDelete(rest._id)}>\r\n            {edit && ownerStatus.delete === \"loading\" ? (\r\n              <IconContext.Provider value={{ className: \"spinner\" }}>\r\n                <div>\r\n                  <ImSpinner9 />\r\n                </div>\r\n              </IconContext.Provider>\r\n            ) : (\r\n              <span>Delete</span>\r\n            )}\r\n          </button>\r\n          <button onClick={() => handleEdit(rest)}>\r\n            <span>Edit</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"restlist__item__form__links\">\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/my-rest\",\r\n              state: {\r\n                restId: rest._id,\r\n                logo: rest.logo,\r\n                restName: rest.name,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <MdRestaurantMenu />\r\n                </IconContext.Provider>\r\n                <span>Menu</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/staff\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <FaUsersCog />\r\n                </IconContext.Provider>\r\n                <span> Staff</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/orders\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <GoListUnordered />\r\n                </IconContext.Provider>\r\n                <span>Orders</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n          <Link\r\n            to={{\r\n              pathname: \"/owner-section/tables\",\r\n              state: {\r\n                restId: rest._id,\r\n              },\r\n            }}\r\n          >\r\n            <span>\r\n              <div className=\"staff__bouton\">\r\n                <IconContext.Provider value={{ className: \"staff-icon\" }}>\r\n                  <GiTable />\r\n                </IconContext.Provider>\r\n                <span>Tables</span>\r\n              </div>\r\n            </span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantListIem;\r\n",{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":27,"nodeType":"232","messageId":"233","endLine":1,"endColumn":36},{"ruleId":"234","severity":1,"message":"235","line":30,"column":6,"nodeType":"236","endLine":30,"endColumn":23,"suggestions":"237"},{"ruleId":"234","severity":1,"message":"235","line":47,"column":6,"nodeType":"236","endLine":47,"endColumn":8,"suggestions":"238"},{"ruleId":"230","severity":1,"message":"239","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"234","severity":1,"message":"235","line":40,"column":6,"nodeType":"236","endLine":40,"endColumn":12,"suggestions":"240"},{"ruleId":"234","severity":1,"message":"241","line":46,"column":6,"nodeType":"236","endLine":46,"endColumn":23,"suggestions":"242"},{"ruleId":"243","severity":1,"message":"244","line":97,"column":29,"nodeType":"245","messageId":"246","endLine":97,"endColumn":31},{"ruleId":"234","severity":1,"message":"247","line":21,"column":6,"nodeType":"236","endLine":21,"endColumn":8,"suggestions":"248"},{"ruleId":"234","severity":1,"message":"247","line":38,"column":6,"nodeType":"236","endLine":38,"endColumn":8,"suggestions":"249"},{"ruleId":"234","severity":1,"message":"235","line":23,"column":6,"nodeType":"236","endLine":23,"endColumn":14,"suggestions":"250"},{"ruleId":"234","severity":1,"message":"235","line":40,"column":6,"nodeType":"236","endLine":40,"endColumn":8,"suggestions":"251"},{"ruleId":"230","severity":1,"message":"252","line":42,"column":32,"nodeType":"232","messageId":"233","endLine":42,"endColumn":43},{"ruleId":"234","severity":1,"message":"235","line":14,"column":6,"nodeType":"236","endLine":14,"endColumn":8,"suggestions":"253"},{"ruleId":"230","severity":1,"message":"254","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":18},{"ruleId":"230","severity":1,"message":"255","line":19,"column":26,"nodeType":"232","messageId":"233","endLine":19,"endColumn":30},{"ruleId":"234","severity":1,"message":"256","line":45,"column":6,"nodeType":"236","endLine":45,"endColumn":14,"suggestions":"257"},{"ruleId":"234","severity":1,"message":"247","line":18,"column":6,"nodeType":"236","endLine":18,"endColumn":8,"suggestions":"258"},{"ruleId":"234","severity":1,"message":"247","line":27,"column":6,"nodeType":"236","endLine":27,"endColumn":15,"suggestions":"259"},{"ruleId":"230","severity":1,"message":"260","line":10,"column":24,"nodeType":"232","messageId":"233","endLine":10,"endColumn":35},{"ruleId":"234","severity":1,"message":"247","line":27,"column":6,"nodeType":"236","endLine":27,"endColumn":15,"suggestions":"261"},{"ruleId":"230","severity":1,"message":"262","line":9,"column":23,"nodeType":"232","messageId":"233","endLine":9,"endColumn":33},{"ruleId":"234","severity":1,"message":"247","line":48,"column":6,"nodeType":"236","endLine":48,"endColumn":8,"suggestions":"263"},{"ruleId":"234","severity":1,"message":"247","line":51,"column":6,"nodeType":"236","endLine":51,"endColumn":8,"suggestions":"264"},{"ruleId":"234","severity":1,"message":"235","line":22,"column":6,"nodeType":"236","endLine":22,"endColumn":14,"suggestions":"265"},{"ruleId":"234","severity":1,"message":"235","line":39,"column":6,"nodeType":"236","endLine":39,"endColumn":14,"suggestions":"266"},{"ruleId":"234","severity":1,"message":"235","line":17,"column":6,"nodeType":"236","endLine":17,"endColumn":15,"suggestions":"267"},{"ruleId":"234","severity":1,"message":"268","line":24,"column":6,"nodeType":"236","endLine":24,"endColumn":8,"suggestions":"269"},{"ruleId":"234","severity":1,"message":"270","line":33,"column":6,"nodeType":"236","endLine":33,"endColumn":13,"suggestions":"271"},{"ruleId":"230","severity":1,"message":"239","line":1,"column":38,"nodeType":"232","messageId":"233","endLine":1,"endColumn":46},{"ruleId":"234","severity":1,"message":"272","line":16,"column":6,"nodeType":"236","endLine":16,"endColumn":22,"suggestions":"273"},{"ruleId":"234","severity":1,"message":"270","line":19,"column":6,"nodeType":"236","endLine":19,"endColumn":19,"suggestions":"274"},{"ruleId":"234","severity":1,"message":"270","line":29,"column":6,"nodeType":"236","endLine":29,"endColumn":19,"suggestions":"275"},"no-native-reassign",["276"],"no-negated-in-lhs",["277"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["278"],["279"],"'Fragment' is defined but never used.",["280"],"React Hook useEffect has missing dependencies: 'dispatch' and 'user.restaurantId'. Either include them or remove the dependency array.",["281"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","React Hook useEffect has missing dependencies: 'dispatch' and 'restId'. Either include them or remove the dependency array.",["282"],["283"],["284"],["285"],"'adminErrors' is assigned a value but never used.",["286"],"'Redirect' is defined but never used.","'code' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.",["287"],["288"],["289"],"'ownerErrors' is assigned a value but never used.",["290"],"'menuErrors' is assigned a value but never used.",["291"],["292"],["293"],["294"],["295"],"React Hook useEffect has missing dependencies: 'dispatch' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["296"],"React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["297"],"React Hook useEffect has missing dependencies: 'addToCommand', 'item.name', and 'quantity'. Either include them or remove the dependency array. If 'addToCommand' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["298"],["299"],["300"],"no-global-assign","no-unsafe-negation",{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"309","fix":"311"},{"desc":"312","fix":"313"},{"desc":"303","fix":"314"},{"desc":"303","fix":"315"},{"desc":"316","fix":"317"},{"desc":"309","fix":"318"},{"desc":"319","fix":"320"},{"desc":"319","fix":"321"},{"desc":"309","fix":"322"},{"desc":"309","fix":"323"},{"desc":"309","fix":"324"},{"desc":"309","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},"Update the dependencies array to be: [dispatch, isAuthenticated]",{"range":"338","text":"339"},"Update the dependencies array to be: [dispatch]",{"range":"340","text":"341"},"Update the dependencies array to be: [dispatch, user]",{"range":"342","text":"343"},"Update the dependencies array to be: [dispatch, isAuthenticated, user.restaurantId]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch, restId]",{"range":"346","text":"347"},{"range":"348","text":"347"},"Update the dependencies array to be: [dispatch, isAuth]",{"range":"349","text":"350"},{"range":"351","text":"341"},{"range":"352","text":"341"},"Update the dependencies array to be: [dispatch, history, result]",{"range":"353","text":"354"},{"range":"355","text":"347"},"Update the dependencies array to be: [channel, dispatch, restId]",{"range":"356","text":"357"},{"range":"358","text":"357"},{"range":"359","text":"347"},{"range":"360","text":"347"},{"range":"361","text":"347"},{"range":"362","text":"347"},"Update the dependencies array to be: [dispatch, orderId]",{"range":"363","text":"364"},"Update the dependencies array to be: [dispatch, values]",{"range":"365","text":"366"},"Update the dependencies array to be: [items, values]",{"range":"367","text":"368"},"Update the dependencies array to be: [price, comment, addToCommand, item.name, quantity]",{"range":"369","text":"370"},"Update the dependencies array to be: [tableStatus, values]",{"range":"371","text":"372"},"Update the dependencies array to be: [ownerStatus, values]",{"range":"373","text":"374"},[1189,1206],"[dispatch, isAuthenticated]",[1656,1658],"[dispatch]",[1352,1358],"[dispatch, user]",[1520,1537],"[dispatch, isAuthenticated, user.restaurantId]",[785,787],"[dispatch, restId]",[1273,1275],[793,801],"[dispatch, isAuth]",[1233,1235],[460,462],[1317,1325],"[dispatch, history, result]",[632,634],[905,914],"[channel, dispatch, restId]",[829,838],[1441,1443],[1510,1512],[766,774],[1206,1214],[564,573],"[dispatch, orderId]",[786,788],"[dispatch, values]",[1082,1089],"[items, values]",[500,516],"[price, comment, addToCommand, item.name, quantity]",[703,716],"[tableStatus, values]",[1092,1105],"[ownerStatus, values]"]